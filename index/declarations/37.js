// This file was generated by purescript-docs-search.
window.DocsSearchIndex["37"] = [["~=",[{"values":[{"sourceSpan":{"start":[69,1],"name":".spago/numbers/v8.0.0/src/Data/Number/Approximate.purs","end":[69,28]},"score":6,"packageInfo":{"values":["numbers"],"tag":"Package"},"name":"(~=)","moduleName":"Data.Number.Approximate","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["zshr",[{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/integers/v5.0.0/src/Data/Int/Bits.purs","end":[34,41]},"score":21,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"zshr","moduleName":"Data.Int.Bits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Bitwise zero-fill shift right.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[298,1],"name":".spago/uint/v6.0.3/src/Data/UInt.purs","end":[298,44]},"score":0,"packageInfo":{"values":["uint"],"tag":"Package"},"name":"zshr","moduleName":"Data.UInt","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Bitwise zero-fill shift right.\n\n    > shr (fromInt 4) (fromInt 1)\n    2u\n"}],"tag":"SearchResult"}]],["type",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Type","moduleName":"Prim","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"`Type` is the kind of all proper types: those that classify value-level terms.\nFor example the type `Boolean` has kind `Type`; denoted by `Boolean :: Type`.\n"}],"tag":"SearchResult"}]],["type_",[{"values":[{"sourceSpan":{"start":[189,1],"name":".spago/purescript-toppokki/6983e07bf0aa55ab779bcef12df3df339a2b5bd9/src/Toppoki.purs","end":[198,14]},"score":0,"packageInfo":{"values":["purescript-toppokki"],"tag":"Package"},"name":"type_","moduleName":"Toppokki","info":{"values":[{"type":{"tag":"ForAll","contents":["options",{"tag":"ForAll","contents":["trash",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"options"},{"tag":"TypeVar","contents":"trash"},{"tag":"RCons","contents":["delay",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"REmpty","contents":{}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Toppokki"],"Selector"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"options"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Toppokki"],"Page"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[33,1],"name":".spago/web-dom/v5.0.0/src/Web/DOM/MutationRecord.purs","end":[33,64]},"score":3,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"type_","moduleName":"Web.DOM.MutationRecord","info":{"values":[{"type":{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"Partial"],"constraintArgs":[]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","MutationRecord"],"MutationRecord"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Web","DOM","MutationRecord"],"MutationRecordType"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[37,1],"name":".spago/web-events/v3.0.0/src/Web/Event/Event.purs","end":[37,43]},"score":2,"packageInfo":{"values":["web-events"],"tag":"Package"},"name":"type_","moduleName":"Web.Event.Event","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","Event","Internal","Types"],"Event"]}]},{"tag":"TypeConstructor","contents":[["Web","Event","Event"],"EventType"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The event type.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[42,1],"name":".spago/web-file/v3.0.0/src/Web/File/Blob.purs","end":[42,33]},"score":2,"packageInfo":{"values":["web-file"],"tag":"Package"},"name":"type_","moduleName":"Web.File.Blob","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","File","Blob"],"Blob"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","MediaType"],"MediaType"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"`MediaType` of the data contained in the `Blob`.\nReturns `Nothing` if the `MediaType` is unknown.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[22,1],"name":".spago/web-file/v3.0.0/src/Web/File/File.purs","end":[22,33]},"score":2,"packageInfo":{"values":["web-file"],"tag":"Package"},"name":"type_","moduleName":"Web.File.File","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","File","File"],"File"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","MediaType"],"MediaType"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"(Inherited from `Blob`) `MediaType` of the data contained in the `Blob`.\nReturns `Nothing` if the `MediaType` is unknown.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[49,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/Event/DataTransfer/DataTransferItem.purs","end":[49,51]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"type_","moduleName":"Web.HTML.Event.DataTransfer.DataTransferItem","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","Event","DataTransfer","DataTransferItem"],"DataTransferItem"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A Unicode string giving the type or format of the data, generally given by\na MIME type. Some values that are not MIME types are special-cased for\nlegacy reasons. The API does not enforce the use of MIME types; other\nvalues can be used as well. In all cases, however, the values are all\nconverted to ASCII lowercase by the API.\nThere is a limit of one text item per item type string.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[78,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLAnchorElement.purs","end":[78,59]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"type_","moduleName":"Web.HTML.HTMLAnchorElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLAnchorElement"],"HTMLAnchorElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[80,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLAreaElement.purs","end":[80,57]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"type_","moduleName":"Web.HTML.HTMLAreaElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLAreaElement"],"HTMLAreaElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[134,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLButtonElement.purs","end":[134,59]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"type_","moduleName":"Web.HTML.HTMLButtonElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLButtonElement"],"HTMLButtonElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[60,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLEmbedElement.purs","end":[60,58]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"type_","moduleName":"Web.HTML.HTMLEmbedElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLEmbedElement"],"HTMLEmbedElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[100,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLFieldSetElement.purs","end":[100,61]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"type_","moduleName":"Web.HTML.HTMLFieldSetElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLFieldSetElement"],"HTMLFieldSetElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[274,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLInputElement.purs","end":[274,58]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"type_","moduleName":"Web.HTML.HTMLInputElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLInputElement"],"HTMLInputElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[117,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLKeygenElement.purs","end":[117,59]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"type_","moduleName":"Web.HTML.HTMLKeygenElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLKeygenElement"],"HTMLKeygenElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[81,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLLinkElement.purs","end":[81,57]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"type_","moduleName":"Web.HTML.HTMLLinkElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLLinkElement"],"HTMLLinkElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[101,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLObjectElement.purs","end":[101,59]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"type_","moduleName":"Web.HTML.HTMLObjectElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLObjectElement"],"HTMLObjectElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLOListElement.purs","end":[63,58]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"type_","moduleName":"Web.HTML.HTMLOListElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLOListElement"],"HTMLOListElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[102,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLOutputElement.purs","end":[102,59]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"type_","moduleName":"Web.HTML.HTMLOutputElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLOutputElement"],"HTMLOutputElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[59,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLScriptElement.purs","end":[59,59]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"type_","moduleName":"Web.HTML.HTMLScriptElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLScriptElement"],"HTMLScriptElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[129,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLSelectElement.purs","end":[129,59]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"type_","moduleName":"Web.HTML.HTMLSelectElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLSelectElement"],"HTMLSelectElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[61,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLSourceElement.purs","end":[61,59]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"type_","moduleName":"Web.HTML.HTMLSourceElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLSourceElement"],"HTMLSourceElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[59,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLStyleElement.purs","end":[59,58]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"type_","moduleName":"Web.HTML.HTMLStyleElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLStyleElement"],"HTMLStyleElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[174,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLTextAreaElement.purs","end":[174,61]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"type_","moduleName":"Web.HTML.HTMLTextAreaElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLTextAreaElement"],"HTMLTextAreaElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["typecheckerror",[{"values":[{"sourceSpan":{"start":[199,1],"name":"src/Internal/Types/TypedTxOut.purs","end":[206,15]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"TypeCheckError","moduleName":"Ctl.Internal.Types.TypedTxOut","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"An error we can get while trying to type an existing transaction part.\n"}],"tag":"SearchResult"}]],["typecheckfailed",[{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"TypeCheckFailed","moduleName":"Ctl.Internal.ProcessConstraints.Error","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","TypedTxOut"],"TypeCheckError"]}]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","ProcessConstraints","Error"],"MkUnbalancedTxError"]}]},"dataDeclType":"data"}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["typedtxout",[{"values":[{"sourceSpan":{"start":[118,1],"name":"src/Internal/Types/TypedTxOut.purs","end":[119,48]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"TypedTxOut","moduleName":"Ctl.Internal.Types.TypedTxOut","info":{"values":[{"typeArguments":[["validator",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}],["datum",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["typedtxoutaddress",[{"values":[{"sourceSpan":{"start":[130,1],"name":"src/Internal/Types/TypedTxOut.purs","end":[134,13]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"typedTxOutAddress","moduleName":"Ctl.Internal.Types.TypedTxOut","info":{"values":[{"type":{"tag":"ForAll","contents":["validator",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ForAll","contents":["datum",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Ctl","Internal","Types","TypedValidator"],"DatumType"],"constraintArgs":[{"tag":"TypeVar","contents":"validator"},{"tag":"TypeVar","contents":"datum"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","TypedTxOut"],"TypedTxOut"]},{"tag":"TypeVar","contents":"validator"}]},{"tag":"TypeVar","contents":"datum"}]}]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Serialization","Address"],"Address"]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Extract the `Address` of a `TypedTxOut`\n"}],"tag":"SearchResult"}]],["typedtxoutdatumhash",[{"values":[{"sourceSpan":{"start":[138,1],"name":"src/Internal/Types/TypedTxOut.purs","end":[142,20]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"typedTxOutDatumHash","moduleName":"Ctl.Internal.Types.TypedTxOut","info":{"values":[{"type":{"tag":"ForAll","contents":["validator",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ForAll","contents":["datum",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Ctl","Internal","Types","TypedValidator"],"DatumType"],"constraintArgs":[{"tag":"TypeVar","contents":"validator"},{"tag":"TypeVar","contents":"datum"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","TypedTxOut"],"TypedTxOut"]},{"tag":"TypeVar","contents":"validator"}]},{"tag":"TypeVar","contents":"datum"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","Transaction"],"DataHash"]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Extract the `DataHash` of a `TypedTxOut`\n"}],"tag":"SearchResult"}]],["typedtxouthasnodatumhash",[{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"TypedTxOutHasNoDatumHash","moduleName":"Ctl.Internal.ProcessConstraints.Error","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Ctl","Internal","ProcessConstraints","Error"],"MkUnbalancedTxError"]},"dataDeclType":"data"}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["typedtxoutref",[{"values":[{"sourceSpan":{"start":[70,1],"name":"src/Internal/Types/TypedTxOut.purs","end":[71,77]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"TypedTxOutRef","moduleName":"Ctl.Internal.Types.TypedTxOut","info":{"values":[{"typeArguments":[["validator",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}],["datum",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A `TransactionInput` tagged by a phantom type: and the\nconnection type of the output.\nPlutus uses wraps this type with a `TxIn` data type instead with optionally\ncarries the address type. We don't include such a type in our setup.\nNote that `TypedTxOut` is implicitly constrained by its smart\nconstructor.\n"}],"tag":"SearchResult"}]],["typedtxoutrefaddress",[{"values":[{"sourceSpan":{"start":[82,1],"name":"src/Internal/Types/TypedTxOut.purs","end":[86,13]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"typedTxOutRefAddress","moduleName":"Ctl.Internal.Types.TypedTxOut","info":{"values":[{"type":{"tag":"ForAll","contents":["validator",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ForAll","contents":["datum",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Ctl","Internal","Types","TypedValidator"],"DatumType"],"constraintArgs":[{"tag":"TypeVar","contents":"validator"},{"tag":"TypeVar","contents":"datum"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","TypedTxOut"],"TypedTxOutRef"]},{"tag":"TypeVar","contents":"validator"}]},{"tag":"TypeVar","contents":"datum"}]}]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Serialization","Address"],"Address"]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Extract the `Address` of a `TypedTxOutRef`\n"}],"tag":"SearchResult"}]],["typedtxoutrefdatumhash",[{"values":[{"sourceSpan":{"start":[91,1],"name":"src/Internal/Types/TypedTxOut.purs","end":[95,20]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"typedTxOutRefDatumHash","moduleName":"Ctl.Internal.Types.TypedTxOut","info":{"values":[{"type":{"tag":"ForAll","contents":["validator",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ForAll","contents":["datum",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Ctl","Internal","Types","TypedValidator"],"DatumType"],"constraintArgs":[{"tag":"TypeVar","contents":"validator"},{"tag":"TypeVar","contents":"datum"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","TypedTxOut"],"TypedTxOutRef"]},{"tag":"TypeVar","contents":"validator"}]},{"tag":"TypeVar","contents":"datum"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","Transaction"],"DataHash"]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Extract the `DataHash` of a `TypedTxOutRef`\n"}],"tag":"SearchResult"}]],["typedtxoutrefinput",[{"values":[{"sourceSpan":{"start":[108,1],"name":"src/Internal/Types/TypedTxOut.purs","end":[112,22]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"typedTxOutRefInput","moduleName":"Ctl.Internal.Types.TypedTxOut","info":{"values":[{"type":{"tag":"ForAll","contents":["validator",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ForAll","contents":["datum",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Ctl","Internal","Types","TypedValidator"],"DatumType"],"constraintArgs":[{"tag":"TypeVar","contents":"validator"},{"tag":"TypeVar","contents":"datum"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","TypedTxOut"],"TypedTxOutRef"]},{"tag":"TypeVar","contents":"validator"}]},{"tag":"TypeVar","contents":"datum"}]}]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","Transaction"],"TransactionInput"]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Extract the `TransactionInput` of a `TypedTxOutRef`\n"}],"tag":"SearchResult"}]],["typedtxoutrefvalue",[{"values":[{"sourceSpan":{"start":[100,1],"name":"src/Internal/Types/TypedTxOut.purs","end":[104,11]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"typedTxOutRefValue","moduleName":"Ctl.Internal.Types.TypedTxOut","info":{"values":[{"type":{"tag":"ForAll","contents":["validator",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ForAll","contents":["datum",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Ctl","Internal","Types","TypedValidator"],"DatumType"],"constraintArgs":[{"tag":"TypeVar","contents":"validator"},{"tag":"TypeVar","contents":"datum"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","TypedTxOut"],"TypedTxOutRef"]},{"tag":"TypeVar","contents":"validator"}]},{"tag":"TypeVar","contents":"datum"}]}]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Cardano","Types","Value"],"Value"]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Extract the `Value` of a `TypedTxOutRef`\n"}],"tag":"SearchResult"}]],["typedtxouttxout",[{"values":[{"sourceSpan":{"start":[155,1],"name":"src/Internal/Types/TypedTxOut.purs","end":[159,23]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"typedTxOutTxOut","moduleName":"Ctl.Internal.Types.TypedTxOut","info":{"values":[{"type":{"tag":"ForAll","contents":["validator",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ForAll","contents":["datum",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Ctl","Internal","Types","TypedValidator"],"DatumType"],"constraintArgs":[{"tag":"TypeVar","contents":"validator"},{"tag":"TypeVar","contents":"datum"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","TypedTxOut"],"TypedTxOut"]},{"tag":"TypeVar","contents":"validator"}]},{"tag":"TypeVar","contents":"datum"}]}]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Cardano","Types","Transaction"],"TransactionOutput"]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Extract the `TxOut` ~ `TransactionOutput` of a `TypedTxOut`\n"}],"tag":"SearchResult"}]],["typedtxoutvalue",[{"values":[{"sourceSpan":{"start":[147,1],"name":"src/Internal/Types/TypedTxOut.purs","end":[151,11]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"typedTxOutValue","moduleName":"Ctl.Internal.Types.TypedTxOut","info":{"values":[{"type":{"tag":"ForAll","contents":["validator",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ForAll","contents":["datum",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Ctl","Internal","Types","TypedValidator"],"DatumType"],"constraintArgs":[{"tag":"TypeVar","contents":"validator"},{"tag":"TypeVar","contents":"datum"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","TypedTxOut"],"TypedTxOut"]},{"tag":"TypeVar","contents":"validator"}]},{"tag":"TypeVar","contents":"datum"}]}]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Cardano","Types","Value"],"Value"]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Extract the `Value` of a `TypedTxOut`\n"}],"tag":"SearchResult"}]],["typedvalidator",[{"values":[{"sourceSpan":{"start":[109,1],"name":"src/Internal/Types/TypedValidator.purs","end":[116,4]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"TypedValidator","moduleName":"Ctl.Internal.Types.TypedValidator","info":{"values":[{"typeArguments":[["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A typed validator script with its `ValidatorScript` and `Address`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"TypedValidator","moduleName":"Ctl.Internal.Types.TypedValidator","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["validator",{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","Scripts"],"Validator"]},{"tag":"RCons","contents":["validatorHash",{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","Scripts"],"ValidatorHash"]},{"tag":"RCons","contents":["forwardingMPS",{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","Scripts"],"MintingPolicy"]},{"tag":"RCons","contents":["forwardingMPSHash",{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","Scripts"],"MintingPolicyHash"]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","TypedValidator"],"TypedValidator"]},{"tag":"TypeVar","contents":"a"}]}]},"dataDeclType":"newtype"}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["typedvalidatorbaseaddress",[{"values":[{"sourceSpan":{"start":[163,1],"name":"src/Contract/Address.purs","end":[167,19]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"typedValidatorBaseAddress","moduleName":"Contract.Address","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Serialization","Address"],"NetworkId"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","TypedValidator"],"TypedValidator"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Plutus","Types","Address"],"Address"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Converts a Plutus `TypedValidator` to a Plutus (`BaseAddress`) `Address`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[45,1],"name":"src/Internal/Scripts.purs","end":[46,66]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"typedValidatorBaseAddress","moduleName":"Ctl.Internal.Scripts","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Serialization","Address"],"NetworkId"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","TypedValidator"],"TypedValidator"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Serialization","Address"],"Address"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Helpers for `PlutusScript` and `ScriptHash` newtype wrappers, separate from\nthe data type definitions to prevent cylic dependencies.\nConverts a Plutus-style `TypedValidator` to an `BaseAddress`\n"}],"tag":"SearchResult"}]],["typedvalidatorenterpriseaddress",[{"values":[{"sourceSpan":{"start":[176,1],"name":"src/Contract/Address.purs","end":[180,19]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"typedValidatorEnterpriseAddress","moduleName":"Contract.Address","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Serialization","Address"],"NetworkId"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","TypedValidator"],"TypedValidator"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Plutus","Types","Address"],"Address"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Converts a Plutus `TypedValidator` to a Plutus (`EnterpriseAddress`) `Address`.\nThis is likely what you will use since Plutus currently uses\n`scriptHashAddress` on non-staking addresses which is invoked in\n`validatorAddress`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[54,1],"name":"src/Internal/Scripts.purs","end":[55,66]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"typedValidatorEnterpriseAddress","moduleName":"Ctl.Internal.Scripts","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Serialization","Address"],"NetworkId"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","TypedValidator"],"TypedValidator"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Serialization","Address"],"Address"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Converts a Plutus-style `TypedValidator` to an `Address` as an\n`EnterpriseAddress`. This is likely what you will use since Plutus\ncurrently uses `scriptHashAddress` on non-staking addresses which is\ninvoked in `validatorAddress`\n"}],"tag":"SearchResult"}]],["typedvalidatorhash",[{"values":[{"sourceSpan":{"start":[152,1],"name":"src/Internal/Types/TypedValidator.purs","end":[152,76]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"typedValidatorHash","moduleName":"Ctl.Internal.Types.TypedValidator","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","TypedValidator"],"TypedValidator"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","Scripts"],"ValidatorHash"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The hash of the validator.\n"}],"tag":"SearchResult"}]],["typedvalidatorlookups",[{"values":[{"sourceSpan":{"start":[131,1],"name":"src/Internal/Types/ScriptLookups.purs","end":[131,81]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"typedValidatorLookups","moduleName":"Ctl.Internal.Types.ScriptLookups","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","TypedValidator"],"TypedValidator"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","ScriptLookups"],"ScriptLookups"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The lookup functions come in pairs with the exception of `datum`.\nIf the function cannot fail, there is another version contained in a `Maybe`\ncontext (that also does not fail).\nThis is to aid users who wish to utilise the underlying `ScriptLookups`\n`Monoid` for `foldMap` etc.\n\nOtherwise, there are lookups that may fail with `Maybe` (because of\nhashing) and an unsafe counterpart via `fromJust`.\nA script lookups value with a script instance. For convenience this also\nincludes the minting policy script that forwards all checks to the\ninstance's validator.\n"}],"tag":"SearchResult"}]],["typedvalidatorlookupsm",[{"values":[{"sourceSpan":{"start":[142,1],"name":"src/Internal/Types/ScriptLookups.purs","end":[143,69]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"typedValidatorLookupsM","moduleName":"Ctl.Internal.Types.ScriptLookups","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","TypedValidator"],"TypedValidator"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","ScriptLookups"],"ScriptLookups"]},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Same as `typedValidatorLookups` but in `Maybe` context for convenience.\nThis should not fail.\n"}],"tag":"SearchResult"}]],["typedvalidatormissing",[{"values":[{"sourceSpan":null,"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"TypedValidatorMissing","moduleName":"Ctl.Internal.ProcessConstraints.Error","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Ctl","Internal","ProcessConstraints","Error"],"MkUnbalancedTxError"]},"dataDeclType":"data"}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["typedvalidatorscript",[{"values":[{"sourceSpan":{"start":[156,1],"name":"src/Internal/Types/TypedValidator.purs","end":[156,74]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"typedValidatorScript","moduleName":"Ctl.Internal.Types.TypedValidator","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","TypedValidator"],"TypedValidator"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","Scripts"],"Validator"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The validator script itself.\n"}],"tag":"SearchResult"}]],["typeequals",[{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/type-equality/v4.0.0/src/Type/Equality.purs","end":[22,32]},"score":2,"packageInfo":{"values":["type-equality"],"tag":"Package"},"name":"TypeEquals","moduleName":"Type.Equality","info":{"values":[{"superclasses":[{"constraintClass":[["Prim","Coerce"],"Coercible"],"constraintArgs":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]}],"fundeps":[[["a"],["b"]],[["b"],["a"]]],"arguments":[["a",null],["b",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"This type class asserts that types `a` and `b`\nare equal.\n\nThe functional dependencies and the single\ninstance below will force the two type arguments\nto unify when either one is known.\n\nNote: any instance will necessarily overlap with\n`refl` below, so instances of this class should\nnot be defined in libraries.\n"}],"tag":"SearchResult"}]],["typemismatch",[{"values":[{"sourceSpan":null,"score":2,"packageInfo":{"values":["argonaut-codecs"],"tag":"Package"},"name":"TypeMismatch","moduleName":"Data.Argonaut.Decode.Error","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Decode","Error"],"JsonDecodeError"]}]},"dataDeclType":"data"}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":10,"packageInfo":{"values":["foreign"],"tag":"Package"},"name":"TypeMismatch","moduleName":"Foreign","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Foreign"],"ForeignError"]}]}]},"dataDeclType":"data"}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[24,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/ValidityState.purs","end":[24,48]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"typeMismatch","moduleName":"Web.HTML.ValidityState","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","ValidityState"],"ValidityState"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["typemustmatch",[{"values":[{"sourceSpan":{"start":[104,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/HTMLObjectElement.purs","end":[104,68]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"typeMustMatch","moduleName":"Web.HTML.HTMLObjectElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLObjectElement"],"HTMLObjectElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["typenode",[{"values":[{"sourceSpan":{"start":[48,1],"name":".spago/medea/8b215851959aa8bbf33e6708df6bd683c89d1a5a/src/Data/Medea/Analysis.purs","end":[51,26]},"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"TypeNode","moduleName":"Data.Medea.Analysis","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["typeof",[{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/medea/8b215851959aa8bbf33e6708df6bd683c89d1a5a/src/Data/Medea/JSONType.purs","end":[23,27]},"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"typeOf","moduleName":"Data.Medea.JSONType","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeConstructor","contents":[["Data","Medea","JSONType"],"JSONType"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[198,1],"name":".spago/medea/8b215851959aa8bbf33e6708df6bd683c89d1a5a/src/Data/Medea/Parser/Primitive.purs","end":[198,41]},"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"typeOf","moduleName":"Data.Medea.Parser.Primitive","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Medea","Parser","Primitive"],"PrimTypeIdentifier"]}]},{"tag":"TypeConstructor","contents":[["Data","Medea","JSONType"],"JSONType"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[101,1],"name":".spago/foreign/v6.0.1/src/Foreign.purs","end":[101,43]},"score":10,"packageInfo":{"values":["foreign"],"tag":"Package"},"name":"typeOf","moduleName":"Foreign","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Read the Javascript _type_ of a value\n"}],"tag":"SearchResult"}]],["typerelationiscyclic",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":["medea"],"tag":"Package"},"name":"TypeRelationIsCyclic","moduleName":"Data.Medea.Analysis","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Medea","Analysis"],"AnalysisError"]},"dataDeclType":"data"}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["types",[{"values":[{"sourceSpan":{"start":[42,1],"name":".spago/web-html/v3.2.0/src/Web/HTML/Event/DataTransfer.purs","end":[42,53]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"types","moduleName":"Web.HTML.Event.DataTransfer","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","Event","DataTransfer"],"DataTransfer"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns an array of data formats used in the drag operation.\nIf the drag operation included no data, then the array is empty.\n"}],"tag":"SearchResult"}]],["typestring",[{"values":[{"sourceSpan":{"start":[31,1],"name":".spago/web-dom/v5.0.0/src/Web/DOM/MutationRecord.purs","end":[31,61]},"score":3,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"typeString","moduleName":"Web.DOM.MutationRecord","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","MutationRecord"],"MutationRecord"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["typetxout",[{"values":[{"sourceSpan":{"start":[255,1],"name":"src/Internal/Types/TypedTxOut.purs","end":[262,67]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"typeTxOut","moduleName":"Ctl.Internal.Types.TypedTxOut","info":{"values":[{"type":{"tag":"ForAll","contents":["validator",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ForAll","contents":["datum",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Ctl","Internal","Types","TypedValidator"],"DatumType"],"constraintArgs":[{"tag":"TypeVar","contents":"validator"},{"tag":"TypeVar","contents":"datum"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Ctl","Internal","IsData"],"IsData"],"constraintArgs":[{"tag":"TypeVar","contents":"datum"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Serialization","Address"],"NetworkId"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","TypedValidator"],"TypedValidator"]},{"tag":"TypeVar","contents":"validator"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Cardano","Types","Transaction"],"TransactionOutput"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","TypedTxOut"],"TypeCheckError"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","TypedTxOut"],"TypedTxOut"]},{"tag":"TypeVar","contents":"validator"}]},{"tag":"TypeVar","contents":"datum"}]}}]}}]}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a `TypedTxOut` from an existing `TransactionInput` by\nchecking the types of its parts.\n"}],"tag":"SearchResult"}]],["typetxoutref",[{"values":[{"sourceSpan":{"start":[281,1],"name":"src/Internal/Types/TypedTxOut.purs","end":[289,70]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"typeTxOutRef","moduleName":"Ctl.Internal.Types.TypedTxOut","info":{"values":[{"type":{"tag":"ForAll","contents":["validator",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ForAll","contents":["datum",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Ctl","Internal","Types","TypedValidator"],"DatumType"],"constraintArgs":[{"tag":"TypeVar","contents":"validator"},{"tag":"TypeVar","contents":"datum"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Ctl","Internal","IsData"],"IsData"],"constraintArgs":[{"tag":"TypeVar","contents":"datum"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Serialization","Address"],"NetworkId"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","Transaction"],"TransactionInput"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Cardano","Types","Transaction"],"TransactionOutput"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","TypedValidator"],"TypedValidator"]},{"tag":"TypeVar","contents":"validator"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","Transaction"],"TransactionInput"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","TypedTxOut"],"TypeCheckError"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","TypedTxOut"],"TypedTxOutRef"]},{"tag":"TypeVar","contents":"validator"}]},{"tag":"TypeVar","contents":"datum"}]}}]}}]}]}]}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a `TypedTxOutRef` from an existing `TransactionInput`\nby checking the types of its parts. To do this we need to cross-reference\nagainst the validator script and be able to look up the `TransactionInput` to\nwhich this reference points.\n"}],"tag":"SearchResult"}]],["%",[{"values":[{"sourceSpan":{"start":[51,1],"name":"src/Contract/Plutarch/Types.purs","end":[51,21]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"(%)","moduleName":"Contract.Plutarch.Types","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[126,1],"name":"src/Internal/Types/Rational.purs","end":[126,21]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"(%)","moduleName":"Ctl.Internal.Types.Rational","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[58,1],"name":".spago/rationals/v5.0.0/src/Data/Ratio.purs","end":[58,21]},"score":0,"packageInfo":{"values":["rationals"],"tag":"Package"},"name":"(%)","moduleName":"Data.Ratio","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[73,1],"name":".spago/math/v3.0.0/src/Math.purs","end":[73,24]},"score":12,"packageInfo":{"values":["math"],"tag":"Package"},"name":"(%)","moduleName":"Math","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]]]