// This file was generated by purescript-docs-search.
window.DocsSearchIndex["10"] = [["pbackground",[{"values":[{"sourceSpan":{"start":[106,3],"name":".spago/ansi/v7.0.0/src/Ansi/Codes.purs","end":[106,16]},"score":2,"packageInfo":{"values":["ansi"],"tag":"Package"},"name":"PBackground","moduleName":"Ansi.Codes","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"Color"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["octal",[{"values":[{"sourceSpan":{"start":[182,1],"name":".spago/integers/v6.0.0/src/Data/Int.purs","end":[182,15]},"score":21,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"octal","moduleName":"Data.Int","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","Int"],"Radix"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The base-8 system.\n"}],"tag":"SearchResult"}]],["octdigit",[{"values":[{"sourceSpan":{"start":[66,1],"name":".spago/parsing/v10.2.0/src/Parsing/String/Basic.purs","end":[66,44]},"score":1,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"octDigit","moduleName":"Parsing.String.Basic","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Parse an octal digit.  Matches any char that satisfies `Data.CodePoint.Unicode.isOctDigit`.\n"}],"tag":"SearchResult"}]],["octdigittoint",[{"values":[{"sourceSpan":{"start":[636,1],"name":".spago/unicode/v6.0.0/src/Data/CodePoint/Unicode.purs","end":[636,40]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"octDigitToInt","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert a single digit `Char` to the corresponding `Just Int` if its argument\nsatisfies `isOctDigit` (one of `0..7`). Anything else converts to `Nothing`\n\n```\n>>> import Data.Traversable\n\n>>> traverse octDigitToInt ['0','1','2','3','4','5','6','7']\n(Just [0,1,2,3,4,5,6,7])\n\n>>> octDigitToInt '8'\nNothing\n```\n"}],"tag":"SearchResult"}]],["octet",[{"values":[{"sourceSpan":{"start":[11,1],"name":".spago/node-buffer/v8.0.0/src/Node/Buffer/Types.purs","end":[11,17]},"score":7,"packageInfo":{"values":["node-buffer"],"tag":"Package"},"name":"Octet","moduleName":"Node.Buffer.Types","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"Type synonym indicating the value should be an octet (0-255). If the value\nprovided is outside this range it will be used as modulo 256.\n"}],"tag":"SearchResult"}]],["october",[{"values":[{"sourceSpan":{"start":[56,3],"name":".spago/datetime/v6.1.0/src/Data/Date/Component.purs","end":[56,12]},"score":11,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"October","moduleName":"Data.Date.Component","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["measure",[{"values":[{"sourceSpan":{"start":[49,1],"name":"test/Utils.purs","end":[49,79]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"measure","moduleName":"Test.Ctl.Utils","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"ForAll","contents":["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["measure'",[{"values":[{"sourceSpan":{"start":[61,1],"name":"test/Utils.purs","end":[67,9]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"measure'","moduleName":"Test.Ctl.Utils","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"ForAll","contents":["d",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ForAll","contents":["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Time","Duration"],"Duration"],"constraintArgs":[{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"d"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["measurewithtimeout",[{"values":[{"sourceSpan":{"start":[52,1],"name":"test/Utils.purs","end":[58,9]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"measureWithTimeout","moduleName":"Test.Ctl.Utils","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"ForAll","contents":["d",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ForAll","contents":["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Time","Duration"],"Duration"],"constraintArgs":[{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["media",[{"values":[{"sourceSpan":{"start":[74,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLLinkElement.purs","end":[74,57]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"media","moduleName":"Web.HTML.HTMLLinkElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLLinkElement"],"HTMLLinkElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[64,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLSourceElement.purs","end":[64,59]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"media","moduleName":"Web.HTML.HTMLSourceElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLSourceElement"],"HTMLSourceElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[56,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLStyleElement.purs","end":[56,58]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"media","moduleName":"Web.HTML.HTMLStyleElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLStyleElement"],"HTMLStyleElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["mediagroup",[{"values":[{"sourceSpan":{"start":[184,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLMediaElement.purs","end":[184,63]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"mediaGroup","moduleName":"Web.HTML.HTMLMediaElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLMediaElement"],"HTMLMediaElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["medial",[{"values":[{"sourceSpan":{"start":[98,1],"name":".spago/properties/v0.2.0/src/Control/Algebra/Properties.purs","end":[98,59]},"score":1,"packageInfo":{"values":["properties"],"tag":"Package"},"name":"medial","moduleName":"Control.Algebra.Properties","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["mediatype",[{"values":[{"sourceSpan":{"start":[11,1],"name":".spago/media-types/v6.0.0/src/Data/MediaType.purs","end":[11,37]},"score":2,"packageInfo":{"values":["media-types"],"tag":"Package"},"name":"MediaType","moduleName":"Data.MediaType","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A media type (also known as a **Multipurpose Internet Mail Extensions or\nMIME type**) is a standard that indicates the nature and format of a\ndocument, file, or assortment of bytes. It is defined and standardized in\nIETF's [RFC 6838](https://tools.ietf.org/html/rfc6838).\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[11,19],"name":".spago/media-types/v6.0.0/src/Data/MediaType.purs","end":[11,37]},"score":2,"packageInfo":{"values":["media-types"],"tag":"Package"},"name":"MediaType","moduleName":"Data.MediaType","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["medium",[{"values":[{"sourceSpan":{"start":[12,19],"name":".spago/spec/v7.2.0/src/Test/Spec/Speed.purs","end":[12,27]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"Medium","moduleName":"Test.Spec.Speed","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["meet",[{"values":[{"sourceSpan":{"start":[30,3],"name":".spago/lattice/v0.3.0/src/Data/Lattice.purs","end":[30,21]},"score":0,"packageInfo":{"values":["lattice"],"tag":"Package"},"name":"meet","moduleName":"Data.Lattice","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","Lattice"],"MeetSemilattice"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Lattice"],"MeetSemilattice"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["meetsemilattice",[{"values":[{"sourceSpan":{"start":[29,1],"name":".spago/lattice/v0.3.0/src/Data/Lattice.purs","end":[30,21]},"score":0,"packageInfo":{"values":["lattice"],"tag":"Package"},"name":"MeetSemilattice","moduleName":"Data.Lattice","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["a",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"A `MeetSemilattice` must satisfy the following laws:\n\n+ Associativity of meet:\n    forall a b c, meet a (meet b c) == meet (meet a b) c\n+ Commutativity of meet:\n    forall a b,   meet a b          == meet b a\n+ Idempotency of meet:\n    forall a,     meet a a          == a\n\nMeet semilattices capture the notion of sets with a \"greatest lower bound\".\n"}],"tag":"SearchResult"}]],["member",[{"values":[{"sourceSpan":{"start":[150,1],"name":".spago/plutus-types/v1.0.1/src/Cardano/Plutus/Types/Map.purs","end":[150,74]},"score":0,"packageInfo":{"values":["plutus-types"],"tag":"Package"},"name":"member","moduleName":"Cardano.Plutus.Types.Map","info":{"values":[{"type":{"tag":"ForAll","contents":["k",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ForAll","contents":["v",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Cardano","Plutus","Types","Map"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Whether given key is a member of a `Map`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[449,1],"name":"src/Internal/Types/Interval.purs","end":[449,66]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"member","moduleName":"Ctl.Internal.Types.Interval","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","Interval"],"Interval"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Check whether a value is in an interval.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[449,1],"name":".spago/ordered-collections/v3.0.0/src/Data/Map/Internal.purs","end":[449,55]},"score":6,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"member","moduleName":"Data.Map.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["k",{"tag":"ForAll","contents":["v",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test if a key is a member of a map\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[108,1],"name":".spago/ordered-collections/v3.0.0/src/Data/Set/NonEmpty.purs","end":[108,59]},"score":6,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"member","moduleName":"Data.Set.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set","NonEmpty"],"NonEmptySet"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test if a value is a member of a set.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[121,1],"name":".spago/ordered-collections/v3.0.0/src/Data/Set.purs","end":[121,51]},"score":6,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"member","moduleName":"Data.Set","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test if a value is a member of a set\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[192,1],"name":".spago/foreign-object/v4.1.0/src/Foreign/Object.purs","end":[192,50]},"score":11,"packageInfo":{"values":["foreign-object"],"tag":"Package"},"name":"member","moduleName":"Foreign.Object","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Foreign","Object"],"Object"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test whether a `String` appears as a key in a map\n"}],"tag":"SearchResult"}]],["memoize",[{"values":[{"sourceSpan":{"start":[143,1],"name":".spago/open-memoize/v6.1.0/src/Data/Function/Memoize.purs","end":[143,56]},"score":1,"packageInfo":{"values":["open-memoize"],"tag":"Package"},"name":"memoize","moduleName":"Data.Function.Memoize","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Function","Memoize"],"Tabulate"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Memoize a function of one argument\n"}],"tag":"SearchResult"}]],["memoize2",[{"values":[{"sourceSpan":{"start":[149,1],"name":".spago/open-memoize/v6.1.0/src/Data/Function/Memoize.purs","end":[149,83]},"score":1,"packageInfo":{"values":["open-memoize"],"tag":"Package"},"name":"memoize2","moduleName":"Data.Function.Memoize","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Function","Memoize"],"Tabulate"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Function","Memoize"],"Tabulate"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Memoize a function of two arguments\n"}],"tag":"SearchResult"}]],["memoize3",[{"values":[{"sourceSpan":{"start":[155,1],"name":".spago/open-memoize/v6.1.0/src/Data/Function/Memoize.purs","end":[155,109]},"score":1,"packageInfo":{"values":["open-memoize"],"tag":"Package"},"name":"memoize3","moduleName":"Data.Function.Memoize","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["d",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Function","Memoize"],"Tabulate"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Function","Memoize"],"Tabulate"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Function","Memoize"],"Tabulate"],"constraintArgs":[{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Memoize a function of three arguments\n"}],"tag":"SearchResult"}]],["mempoolsizeandcapacity",[{"values":[{"sourceSpan":{"start":[352,1],"name":"src/Internal/QueryM/Ogmios.purs","end":[356,4]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"MempoolSizeAndCapacity","moduleName":"Ctl.Internal.QueryM.Ogmios","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The acquired snapshot’s size (in bytes), number of transactions, and capacity\n(in bytes).\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[352,32],"name":"src/Internal/QueryM/Ogmios.purs","end":[356,4]},"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"MempoolSizeAndCapacity","moduleName":"Ctl.Internal.QueryM.Ogmios","info":{"values":[{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["capacity",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"RCons","contents":["currentSize",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"RCons","contents":["numberOfTxs",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"REmpty","contents":{}}]}]}]}]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["mempoolsnapshotacquired",[{"values":[{"sourceSpan":{"start":[337,1],"name":"src/Internal/QueryM/Ogmios.purs","end":[337,53]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"MempoolSnapshotAcquired","moduleName":"Ctl.Internal.QueryM.Ogmios","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["mempoolsnapshothastx",[{"values":[{"sourceSpan":{"start":[48,1],"name":"src/Contract/Backend/Ogmios/Mempool.purs","end":[49,75]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"mempoolSnapshotHasTx","moduleName":"Contract.Backend.Ogmios.Mempool","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","QueryM","Ogmios"],"MempoolSnapshotAcquired"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","TransactionHash"],"TransactionHash"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Check to see if a TxHash is present in the current mempool snapshot.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[414,1],"name":"src/Internal/QueryM.purs","end":[417,20]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"mempoolSnapshotHasTx","moduleName":"Ctl.Internal.QueryM","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","QueryM","Ogmios"],"MempoolSnapshotAcquired"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","TransactionHash"],"TransactionHash"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","QueryM"],"QueryM"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["mempoolsnapshothastxaff",[{"values":[{"sourceSpan":{"start":[363,1],"name":"src/Internal/QueryM.purs","end":[368,17]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"mempoolSnapshotHasTxAff","moduleName":"Ctl.Internal.QueryM","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","QueryM"],"OgmiosWebSocket"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Logging"],"Logger"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","QueryM","Ogmios"],"MempoolSnapshotAcquired"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","TransactionHash"],"TransactionHash"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["mempoolsnapshothastxcall",[{"values":[{"sourceSpan":{"start":[284,1],"name":"src/Internal/QueryM/Ogmios.purs","end":[285,68]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"mempoolSnapshotHasTxCall","moduleName":"Ctl.Internal.QueryM.Ogmios","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","QueryM","Ogmios"],"MempoolSnapshotAcquired"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","QueryM","JsonRpc2"],"JsonRpc2Call"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","TransactionHash"],"TransactionHash"]}]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","QueryM","Ogmios"],"HasTxR"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["mempoolsnapshotnexttx",[{"values":[{"sourceSpan":{"start":[55,1],"name":"src/Contract/Backend/Ogmios/Mempool.purs","end":[57,34]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"mempoolSnapshotNextTx","moduleName":"Contract.Backend.Ogmios.Mempool","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","QueryM","Ogmios"],"MempoolSnapshotAcquired"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Transaction"],"Transaction"]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get the first received TX in the current mempool snapshot. This function can\nbe recursively called to traverse the finger-tree of the mempool data set.\nThis will return `Nothing` once it has reached the end of the current mempool.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[442,1],"name":"src/Internal/QueryM.purs","end":[444,46]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"mempoolSnapshotNextTx","moduleName":"Ctl.Internal.QueryM","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","QueryM","Ogmios"],"MempoolSnapshotAcquired"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","QueryM"],"QueryM"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","QueryM","Ogmios"],"MempoolTransaction"]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["mempoolsnapshotnexttxaff",[{"values":[{"sourceSpan":{"start":[396,1],"name":"src/Internal/QueryM.purs","end":[400,43]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"mempoolSnapshotNextTxAff","moduleName":"Ctl.Internal.QueryM","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","QueryM"],"OgmiosWebSocket"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Logging"],"Logger"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","QueryM","Ogmios"],"MempoolSnapshotAcquired"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","QueryM","Ogmios"],"MempoolTransaction"]}]}}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["mempoolsnapshotnexttxcall",[{"values":[{"sourceSpan":{"start":[291,1],"name":"src/Internal/QueryM/Ogmios.purs","end":[292,74]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"mempoolSnapshotNextTxCall","moduleName":"Ctl.Internal.QueryM.Ogmios","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","QueryM","Ogmios"],"MempoolSnapshotAcquired"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","QueryM","JsonRpc2"],"JsonRpc2Call"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","QueryM","Ogmios"],"MaybeMempoolTransaction"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["mempoolsnapshotsizeandcapacity",[{"values":[{"sourceSpan":{"start":[69,1],"name":"src/Contract/Backend/Ogmios/Mempool.purs","end":[70,78]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"mempoolSnapshotSizeAndCapacity","moduleName":"Contract.Backend.Ogmios.Mempool","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","QueryM","Ogmios"],"MempoolSnapshotAcquired"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","QueryM","Ogmios"],"MempoolSizeAndCapacity"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The acquired snapshot’s size (in bytes), number of transactions, and\ncapacity (in bytes).\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[424,1],"name":"src/Internal/QueryM.purs","end":[426,42]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"mempoolSnapshotSizeAndCapacity","moduleName":"Ctl.Internal.QueryM","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","QueryM","Ogmios"],"MempoolSnapshotAcquired"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","QueryM"],"QueryM"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","QueryM","Ogmios"],"MempoolSizeAndCapacity"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["mempoolsnapshotsizeandcapacityaff",[{"values":[{"sourceSpan":{"start":[375,1],"name":"src/Internal/QueryM.purs","end":[379,39]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"mempoolSnapshotSizeAndCapacityAff","moduleName":"Ctl.Internal.QueryM","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","QueryM"],"OgmiosWebSocket"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Logging"],"Logger"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","QueryM","Ogmios"],"MempoolSnapshotAcquired"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","QueryM","Ogmios"],"MempoolSizeAndCapacity"]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["mempoolsnapshotsizeandcapacitycall",[{"values":[{"sourceSpan":{"start":[298,1],"name":"src/Internal/QueryM/Ogmios.purs","end":[299,73]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"mempoolSnapshotSizeAndCapacityCall","moduleName":"Ctl.Internal.QueryM.Ogmios","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","QueryM","Ogmios"],"MempoolSnapshotAcquired"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","QueryM","JsonRpc2"],"JsonRpc2Call"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","QueryM","Ogmios"],"MempoolSizeAndCapacity"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["mempooltransaction",[{"values":[{"sourceSpan":{"start":[374,1],"name":"src/Internal/QueryM/Ogmios.purs","end":[377,4]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"MempoolTransaction","moduleName":"Ctl.Internal.QueryM.Ogmios","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[374,28],"name":"src/Internal/QueryM/Ogmios.purs","end":[377,4]},"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"MempoolTransaction","moduleName":"Ctl.Internal.QueryM.Ogmios","info":{"values":[{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["id",{"tag":"TypeConstructor","contents":[["Ctl","Internal","QueryM","Ogmios"],"OgmiosTxId"]},{"tag":"RCons","contents":["raw",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"REmpty","contents":{}}]}]}]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["mempty",[{"values":[{"sourceSpan":{"start":[47,3],"name":".spago/prelude/v6.0.1/src/Data/Monoid.purs","end":[47,14]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"mempty","moduleName":"Data.Monoid","info":{"values":[{"typeClassArguments":[["m",null]],"typeClass":[["Data","Monoid"],"Monoid"],"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"Monoid"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"m"}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["memptyrecord",[{"values":[{"sourceSpan":{"start":[104,3],"name":".spago/prelude/v6.0.1/src/Data/Monoid.purs","end":[104,49]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"memptyRecord","moduleName":"Data.Monoid","info":{"values":[{"typeClassArguments":[["rowlist",null],["row",null],["subrow",null]],"typeClass":[["Data","Monoid"],"MonoidRecord"],"type":{"tag":"ForAll","contents":["rowlist",{"tag":"ForAll","contents":["row",{"tag":"ForAll","contents":["subrow",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Monoid"],"MonoidRecord"],"constraintArgs":[{"tag":"TypeVar","contents":"rowlist"},{"tag":"TypeVar","contents":"row"},{"tag":"TypeVar","contents":"subrow"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","contents":"rowlist"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"subrow"}]}]}]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["merge",[{"values":[{"sourceSpan":{"start":[117,1],"name":".spago/record/v4.0.0/src/Record/Builder.purs","end":[122,37]},"score":6,"packageInfo":{"values":["record"],"tag":"Package"},"name":"merge","moduleName":"Record.Builder","info":{"values":[{"type":{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r3",{"tag":"ForAll","contents":["r4",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"r2"},{"tag":"TypeVar","contents":"r3"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Nub"],"constraintArgs":[{"tag":"TypeVar","contents":"r3"},{"tag":"TypeVar","contents":"r4"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r1"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Record","Builder"],"Builder"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r2"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r4"}]}}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Build by merging existing fields from another record, taking precedence\nin the case of overlaps.\n\nFor example:\n\n```purescript\nbuild (merge { x: 1, y: \"y\" }) { y: 2, z: true }\n :: { x :: Int, y :: String, z :: Boolean }\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[162,1],"name":".spago/record/v4.0.0/src/Record.purs","end":[168,15]},"score":6,"packageInfo":{"values":["record"],"tag":"Package"},"name":"merge","moduleName":"Record","info":{"values":[{"type":{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r3",{"tag":"ForAll","contents":["r4",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"r1"},{"tag":"TypeVar","contents":"r2"},{"tag":"TypeVar","contents":"r3"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Nub"],"constraintArgs":[{"tag":"TypeVar","contents":"r3"},{"tag":"TypeVar","contents":"r4"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r1"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r2"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r4"}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Merges two records with the first record's labels taking precedence in the\ncase of overlaps.\n\nFor example:\n\n```purescript\nmerge { x: 1, y: \"y\" } { y: 2, z: true }\n :: { x :: Int, y :: String, z :: Boolean }\n```\n"}],"tag":"SearchResult"}]],["meridiem",[{"values":[{"sourceSpan":{"start":[66,3],"name":".spago/formatters/v7.0.0/src/Data/Formatter/DateTime.purs","end":[66,13]},"score":0,"packageInfo":{"values":["formatters"],"tag":"Package"},"name":"Meridiem","moduleName":"Data.Formatter.DateTime","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[225,1],"name":".spago/formatters/v7.0.0/src/Data/Formatter/DateTime.purs","end":[225,24]},"score":0,"packageInfo":{"values":["formatters"],"tag":"Package"},"name":"Meridiem","moduleName":"Data.Formatter.DateTime","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["message",[{"values":[{"sourceSpan":{"start":[9,1],"name":".spago/monad-logger/v1.3.1/src/Data/Log/Message.purs","end":[14,4]},"score":0,"packageInfo":{"values":["monad-logger"],"tag":"Package"},"name":"Message","moduleName":"Data.Log.Message","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["level",{"tag":"TypeConstructor","contents":[["Data","Log","Level"],"LogLevel"]},{"tag":"RCons","contents":["timestamp",{"tag":"TypeConstructor","contents":[["Data","JSDate"],"JSDate"]},{"tag":"RCons","contents":["message",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["tags",{"tag":"TypeConstructor","contents":[["Data","Log","Tag"],"TagSet"]},{"tag":"REmpty","contents":{}}]}]}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[35,1],"name":".spago/exceptions/v6.0.0/src/Effect/Exception.purs","end":[35,42]},"score":14,"packageInfo":{"values":["exceptions"],"tag":"Package"},"name":"message","moduleName":"Effect.Exception","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get the error message from a JavaScript error\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[51,1],"name":".spago/noble-secp256k1/v2.0.0/src/Noble/Secp256k1/ECDSA.purs","end":[51,25]},"score":0,"packageInfo":{"values":["noble-secp256k1"],"tag":"Package"},"name":"Message","moduleName":"Noble.Secp256k1.ECDSA","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","ByteArray"],"ByteArray"]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/Event/ErrorEvent.purs","end":[16,47]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"message","moduleName":"Web.HTML.Event.ErrorEvent","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","Event","ErrorEvent"],"ErrorEvent"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[68,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/Event/EventTypes.purs","end":[68,21]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"message","moduleName":"Web.HTML.Event.EventTypes","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Web","Event","Event"],"EventType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["messagehash",[{"values":[{"sourceSpan":{"start":[103,1],"name":".spago/noble-secp256k1/v2.0.0/src/Noble/Secp256k1/ECDSA.purs","end":[103,44]},"score":0,"packageInfo":{"values":["noble-secp256k1"],"tag":"Package"},"name":"MessageHash","moduleName":"Noble.Secp256k1.ECDSA","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["metadatalabel",[{"values":[{"sourceSpan":{"start":[21,3],"name":"src/Internal/Metadata/MetadataType.purs","end":[21,44]},"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"metadataLabel","moduleName":"Ctl.Internal.Metadata.MetadataType","info":{"values":[{"typeClassArguments":[["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]],"typeClass":[["Ctl","Internal","Metadata","MetadataType"],"MetadataType"],"type":{"tag":"ForAll","contents":["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Ctl","Internal","Metadata","MetadataType"],"MetadataType"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","MetadataLabel"],"MetadataLabel"]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[11,1],"name":"src/Internal/Types/MetadataLabel.purs","end":[11,45]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"MetadataLabel","moduleName":"Ctl.Internal.Types.MetadataLabel","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[11,23],"name":"src/Internal/Types/MetadataLabel.purs","end":[11,45]},"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"MetadataLabel","moduleName":"Ctl.Internal.Types.MetadataLabel","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Cardano","Types","BigNum"],"BigNum"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["metadatalist",[{"values":[{"sourceSpan":{"start":[1630,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1630,41]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"MetadataList","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["metadatalist_new",[{"values":[{"sourceSpan":{"start":[1632,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1632,55]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"metadataList_new","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"MetadataList"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["metadatamap",[{"values":[{"sourceSpan":{"start":[1646,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1646,40]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"MetadataMap","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["metadatamap_geti32",[{"values":[{"sourceSpan":{"start":[1652,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1652,90]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"metadataMap_getI32","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"MetadataMap"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"TransactionMetadatum"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["metadatamap_getstr",[{"values":[{"sourceSpan":{"start":[1651,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1651,90]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"metadataMap_getStr","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"MetadataMap"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"TransactionMetadatum"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["metadatamap_has",[{"values":[{"sourceSpan":{"start":[1653,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1653,88]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"metadataMap_has","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"MetadataMap"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"TransactionMetadatum"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["metadatamap_inserti32",[{"values":[{"sourceSpan":{"start":[1650,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1650,130]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"metadataMap_insertI32","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"MetadataMap"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"TransactionMetadatum"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"TransactionMetadatum"]}]}}}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["metadatamap_insertstr",[{"values":[{"sourceSpan":{"start":[1649,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1649,130]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"metadataMap_insertStr","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"MetadataMap"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"TransactionMetadatum"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"TransactionMetadatum"]}]}}}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["metadatamap_new",[{"values":[{"sourceSpan":{"start":[1648,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1648,53]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"metadataMap_new","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"MetadataMap"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["metadatatype",[{"values":[{"sourceSpan":{"start":[20,1],"name":"src/Internal/Metadata/MetadataType.purs","end":[21,44]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"MetadataType","moduleName":"Ctl.Internal.Metadata.MetadataType","info":{"values":[{"superclasses":[{"constraintClass":[["Cardano","FromMetadata"],"FromMetadata"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"constraintClass":[["Cardano","ToMetadata"],"ToMetadata"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]}],"fundeps":[],"arguments":[["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Associates a metadata label with a type. E.g. a CIP-25 metadata type could be associated with label `721`.\n"}],"tag":"SearchResult"}]],["metavar",[{"values":[{"sourceSpan":{"start":[202,1],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Builder.purs","end":[202,57]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"metavar","moduleName":"Options.Applicative.Builder","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Options","Applicative","Builder","Internal"],"HasMetavar"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Specify a metavariable for the argument.\n\nMetavariables have no effect on the actual parser, and only serve to specify\nthe symbolic name for an argument to be displayed in the help text.\n"}],"tag":"SearchResult"}]],["method",[{"values":[{"sourceSpan":{"start":[17,1],"name":".spago/http-methods/v6.0.0/src/Data/HTTP/Method.purs","end":[38,10]},"score":2,"packageInfo":{"values":["http-methods"],"tag":"Package"},"name":"Method","moduleName":"Data.HTTP.Method","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The definition of the type is based on HTTP/1.1 with\n[RFC 2518](https://tools.ietf.org/html/rfc2518) and\n[RFC 5789](https://tools.ietf.org/html/rfc5789).\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[73,1],"name":".spago/node-http/v8.0.0/src/Node/HTTP/Client.purs","end":[73,39]},"score":1,"packageInfo":{"values":["node-http"],"tag":"Package"},"name":"method","moduleName":"Node.HTTP.Client","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"tag":"TypeConstructor","contents":[["Node","HTTP","Client"],"RequestOptions"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The HTTP request method: GET, POST, etc.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[71,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLFormElement.purs","end":[71,58]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"method","moduleName":"Web.HTML.HTMLFormElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLFormElement"],"HTMLFormElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["lfor",[{"values":[{"sourceSpan":{"start":[120,1],"name":".spago/foldable-traversable/v6.0.0/src/Data/Bitraversable.purs","end":[126,15]},"score":30,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"lfor","moduleName":"Data.Bitraversable","info":{"values":[{"type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Bitraversable"],"Bitraversable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"b"}]}}]}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["flag",[{"values":[{"sourceSpan":{"start":[297,1],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Builder.purs","end":[301,17]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"flag","moduleName":"Options.Applicative.Builder","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"FlagFields"]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Builder for a flag parser.\n\nA flag that switches from a \\\"default value\\\" to an \\\"active value\\\" when\nencountered. For a simple boolean value, use `switch` instead.\n\n**Note**: Because this parser will never fail, it can not be used with\ncombinators such as 'some' or 'many', as these combinators continue until\na failure occurs. See @flag'@.\n"}],"tag":"SearchResult"}]],["flag'",[{"values":[{"sourceSpan":{"start":[319,1],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Builder.purs","end":[322,18]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"flag'","moduleName":"Options.Applicative.Builder","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"FlagFields"]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Builder for a flag parser without a default value.\n\nSame as 'flag', but with no default value. In particular, this flag will\nnever parse successfully by itself.\n\nIt still makes sense to use it as part of a composite parser. For example\n\n> length <$> many (flag' () (short 't'))\n\nis a parser that counts the number of \"-t\" arguments on the command line,\nalternatively\n\n> flag' true (long \"on\") <|> flag' false (long \"off\")\n\nwill require the user to enter '--on' or '--off' on the command line.\n"}],"tag":"SearchResult"}]],["flagfields",[{"values":[{"sourceSpan":{"start":[43,1],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Builder/Internal.purs","end":[45,22]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"FlagFields","moduleName":"Options.Applicative.Builder.Internal","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[43,22],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Builder/Internal.purs","end":[45,22]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"FlagFields","moduleName":"Options.Applicative.Builder.Internal","info":{"values":[{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["flagNames",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptName"]}]},{"tag":"RCons","contents":["flagActive",{"tag":"TypeVar","contents":"a"},{"tag":"REmpty","contents":{}}]}]}]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["flagreader",[{"values":[{"sourceSpan":{"start":[257,3],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Types.purs","end":[257,15]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"FlagReader","moduleName":"Options.Applicative.Types","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"OptName"]}]}},{"tag":"TypeVar","contents":"a"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["flags",[{"values":[{"sourceSpan":{"start":[52,1],"name":".spago/strings/v6.0.1/src/Data/String/Regex.purs","end":[52,29]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"flags","moduleName":"Data.String.Regex","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Regex"],"Regex"]}]},{"tag":"TypeConstructor","contents":[["Data","String","Regex","Flags"],"RegexFlags"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the `RegexFlags` used to construct the given `Regex`.\n"}],"tag":"SearchResult"}]],["flap",[{"values":[{"sourceSpan":{"start":[103,1],"name":".spago/prelude/v6.0.1/src/Data/Functor.purs","end":[103,58]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"flap","moduleName":"Data.Functor","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Apply a value in a computational context to a value in no context.\n\nGeneralizes `flip`.\n\n```purescript\nlongEnough :: String -> Bool\nhasSymbol :: String -> Bool\nhasDigit :: String -> Bool\npassword :: String\n\nvalidate :: String -> Array Bool\nvalidate = flap [longEnough, hasSymbol, hasDigit]\n```\n\n```purescript\nflap (-) 3 4 == 1\nthreeve <$> Just 1 <@> 'a' <*> Just true == Just (threeve 1 'a' true)\n```\n"}],"tag":"SearchResult"}]],["flatalt",[{"values":[{"sourceSpan":{"start":[566,17],"name":".spago/optparse/v5.0.0/src/Text/PrettyPrint/Leijen.purs","end":[566,26]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"FlatAlt","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[693,1],"name":".spago/optparse/v5.0.0/src/Text/PrettyPrint/Leijen.purs","end":[693,29]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"flatAlt","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A document that is normally rendered as the first argument, but\nwhen flattened, is rendered as the second document.\n"}],"tag":"SearchResult"}]],["flatten",[{"values":[{"sourceSpan":{"start":[91,1],"name":".spago/cardano-types/v1.0.1/src/Cardano/Types/Mint.purs","end":[91,62]},"score":0,"packageInfo":{"values":["cardano-types"],"tag":"Package"},"name":"flatten","moduleName":"Cardano.Types.Mint","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Mint"],"Mint"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Tuple","Nested"],"/\\"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","ScriptHash"],"ScriptHash"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Tuple","Nested"],"/\\"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","AssetName"],"AssetName"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]}]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[96,1],"name":".spago/cardano-types/v1.0.1/src/Cardano/Types/MultiAsset.purs","end":[96,67]},"score":0,"packageInfo":{"values":["cardano-types"],"tag":"Package"},"name":"flatten","moduleName":"Cardano.Types.MultiAsset","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","MultiAsset"],"MultiAsset"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Tuple","Nested"],"/\\"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","ScriptHash"],"ScriptHash"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Tuple","Nested"],"/\\"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","AssetName"],"AssetName"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","BigNum"],"BigNum"]}]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[229,1],"name":".spago/cardano-types/v1.0.1/src/Cardano/Types/Value.purs","end":[229,44]},"score":0,"packageInfo":{"values":["cardano-types"],"tag":"Package"},"name":"flatten","moduleName":"Cardano.Types.Value","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Value"],"Value"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Tuple","Nested"],"/\\"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Asset"],"Asset"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","BigNum"],"BigNum"]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[696,1],"name":".spago/optparse/v5.0.0/src/Text/PrettyPrint/Leijen.purs","end":[696,22]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"flatten","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["flattenmultiassets",[{"values":[{"sourceSpan":{"start":[257,1],"name":".spago/plutus-types/v1.0.1/src/Cardano/Plutus/Types/Value.purs","end":[257,77]},"score":0,"packageInfo":{"values":["plutus-types"],"tag":"Package"},"name":"flattenMultiAssets","moduleName":"Cardano.Plutus.Types.Value","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Plutus","Types","Value"],"Value"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Tuple","Nested"],"/\\"]},{"tag":"TypeConstructor","contents":[["Cardano","Plutus","Types","CurrencySymbol"],"CurrencySymbol"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Tuple","Nested"],"/\\"]},{"tag":"TypeConstructor","contents":[["Cardano","Plutus","Types","TokenName"],"TokenName"]},{"tag":"TypeConstructor","contents":[["JS","BigInt"],"BigInt"]}]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Converts a value to a simple list, keeping only the non-Ada assets\nwith non-zero amounts.\n"}],"tag":"SearchResult"}]],["flattenvalue",[{"values":[{"sourceSpan":{"start":[248,1],"name":".spago/plutus-types/v1.0.1/src/Cardano/Plutus/Types/Value.purs","end":[248,71]},"score":0,"packageInfo":{"values":["plutus-types"],"tag":"Package"},"name":"flattenValue","moduleName":"Cardano.Plutus.Types.Value","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Plutus","Types","Value"],"Value"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Tuple","Nested"],"/\\"]},{"tag":"TypeConstructor","contents":[["Cardano","Plutus","Types","CurrencySymbol"],"CurrencySymbol"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Tuple","Nested"],"/\\"]},{"tag":"TypeConstructor","contents":[["Cardano","Plutus","Types","TokenName"],"TokenName"]},{"tag":"TypeConstructor","contents":[["JS","BigInt"],"BigInt"]}]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Converts a value to a simple list, keeping only the non-zero amounts.\n"}],"tag":"SearchResult"}]],["flexibleidentity",[{"values":[{"sourceSpan":{"start":[71,1],"name":".spago/properties/v0.2.0/src/Control/Algebra/Properties.purs","end":[71,61]},"score":1,"packageInfo":{"values":["properties"],"tag":"Package"},"name":"flexibleIdentity","moduleName":"Control.Algebra.Properties","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["flintconfirmaccess",[{"values":[{"sourceSpan":{"start":[272,1],"name":"src/Internal/Test/E2E/Wallets.purs","end":[272,64]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"flintConfirmAccess","moduleName":"Ctl.Internal.Test.E2E.Wallets","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Test","E2E","Types"],"ExtensionId"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Test","E2E","Types"],"RunningE2ETest"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["flintext",[{"values":[{"sourceSpan":{"start":[96,16],"name":"src/Internal/Test/E2E/Types.purs","end":[96,26]},"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"FlintExt","moduleName":"Ctl.Internal.Test.E2E.Types","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["flintsign",[{"values":[{"sourceSpan":{"start":[277,1],"name":"src/Internal/Test/E2E/Wallets.purs","end":[277,73]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"flintSign","moduleName":"Ctl.Internal.Test.E2E.Wallets","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Test","E2E","Types"],"ExtensionId"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Test","E2E","Types"],"WalletPassword"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Test","E2E","Types"],"RunningE2ETest"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["flintwallet",[{"values":[{"sourceSpan":{"start":[49,3],"name":"src/Internal/Wallet.purs","end":[49,16]},"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"FlintWallet","moduleName":"Ctl.Internal.Wallet","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["flip",[{"values":[{"sourceSpan":{"start":[28,1],"name":".spago/prelude/v6.0.1/src/Data/Function.purs","end":[28,51]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"flip","moduleName":"Data.Function","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Given a function that takes two arguments, applies the arguments\nto the function in a swapped order.\n\n```purescript\nflip append \"1\" \"2\" == append \"2\" \"1\" == \"21\"\n\nconst 1 \"two\" == 1\n\nflip const 1 \"two\" == const \"two\" 1 == \"two\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[14,1],"name":".spago/functors/v5.0.0/src/Data/Functor/Flip.purs","end":[14,34]},"score":6,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Flip","moduleName":"Data.Functor.Flip","info":{"values":[{"typeArguments":[["p",null],["a",null],["b",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Flips the order of the type arguments of a `Bifunctor`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[14,20],"name":".spago/functors/v5.0.0/src/Data/Functor/Flip.purs","end":[14,34]},"score":6,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Flip","moduleName":"Data.Functor.Flip","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[57,1],"name":".spago/record/v4.0.0/src/Record/Builder.purs","end":[57,120]},"score":6,"packageInfo":{"values":["record"],"tag":"Package"},"name":"flip","moduleName":"Record.Builder","info":{"values":[{"type":{"tag":"ForAll","contents":["r1",{"tag":"ForAll","contents":["r2",{"tag":"ForAll","contents":["r3",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r1"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Record","Builder"],"Builder"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r2"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r3"}]}}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r2"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Record","Builder"],"Builder"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r1"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r3"}]}}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Flip a function of one argument returning a builder.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/typelevel-prelude/v7.0.0/src/Type/Function.purs","end":[21,20]},"score":3,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"FLIP","moduleName":"Type.Function","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},"arguments":[["a",null],["f",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"Reversed polymorphic Type application\n\nFor example...\n```\nFLIP Int Maybe == Int # Maybe == Maybe Int\n```\n"}],"tag":"SearchResult"}]],["flipembed",[{"values":[{"sourceSpan":{"start":[110,1],"name":".spago/mmorph/v7.0.0/src/Control/Monad/Morph.purs","end":[116,11]},"score":1,"packageInfo":{"values":["mmorph"],"tag":"Package"},"name":"flipEmbed","moduleName":"Control.Monad.Morph","info":{"values":[{"type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["n",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Morph"],"MMonad"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"n"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeVar","contents":"m"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"n"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"n"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["flipped",[{"values":[{"sourceSpan":{"start":[70,1],"name":".spago/profunctor-lenses/v8.0.0/src/Data/Lens/Iso.purs","end":[70,91]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"flipped","moduleName":"Data.Lens.Iso","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Iso"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"f"}]}]}}]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["flippedcomposepull",[{"values":[{"sourceSpan":{"start":[268,1],"name":".spago/pipes/v8.0.0/src/Pipes/Core.purs","end":[273,35]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"flippedComposePull","moduleName":"Pipes.Core","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["a'",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["b'",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["c'",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"a'"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"a'"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]}}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Equivalent to ('>+>') with the arguments flipped\n"}],"tag":"SearchResult"}]],["flippedcomposepull'",[{"values":[{"sourceSpan":{"start":[304,1],"name":".spago/pipes/v8.0.0/src/Pipes/Core.purs","end":[309,35]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"flippedComposePull'","moduleName":"Pipes.Core","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["a'",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["b'",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["c'",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"a'"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"a'"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Equivalent to ('+>>') with the arguments flipped\n"}],"tag":"SearchResult"}]],["flippedcomposepush",[{"values":[{"sourceSpan":{"start":[259,1],"name":".spago/pipes/v8.0.0/src/Pipes/Core.purs","end":[264,34]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"flippedComposePush","moduleName":"Pipes.Core","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["a'",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["b'",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["c'",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"a'"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"a'"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]}}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Equivalent to ('>~>') with the arguments flipped\n"}],"tag":"SearchResult"}]],["flippedcomposepush'",[{"values":[{"sourceSpan":{"start":[295,1],"name":".spago/pipes/v8.0.0/src/Pipes/Core.purs","end":[300,34]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"flippedComposePush'","moduleName":"Pipes.Core","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["a'",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["b'",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["c'",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"a'"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"a'"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Equivalent to ('>>~') with the arguments flipped\n"}],"tag":"SearchResult"}]],["flippedcomposerequest",[{"values":[{"sourceSpan":{"start":[286,1],"name":".spago/pipes/v8.0.0/src/Pipes/Core.purs","end":[291,34]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"flippedComposeRequest","moduleName":"Pipes.Core","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["a'",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["b'",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["y",{"tag":"ForAll","contents":["y'",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"y'"}]},{"tag":"TypeVar","contents":"y"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"a'"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"y'"}]},{"tag":"TypeVar","contents":"y"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"a'"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"y'"}]},{"tag":"TypeVar","contents":"y"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"c"}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Equivalent to ('>\\\\') with the arguments flipped\n"}],"tag":"SearchResult"}]],["flippedcomposerequest'",[{"values":[{"sourceSpan":{"start":[250,1],"name":".spago/pipes/v8.0.0/src/Pipes/Core.purs","end":[255,35]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"flippedComposeRequest'","moduleName":"Pipes.Core","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["a'",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["b'",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["c'",{"tag":"ForAll","contents":["y",{"tag":"ForAll","contents":["y'",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"y'"}]},{"tag":"TypeVar","contents":"y"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"a'"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"y'"}]},{"tag":"TypeVar","contents":"y"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"a'"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"y'"}]},{"tag":"TypeVar","contents":"y"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"c"}]}]}}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Equivalent to ('\\>\\') with the arguments flipped\n"}],"tag":"SearchResult"}]],["flippedcomposeresponse",[{"values":[{"sourceSpan":{"start":[277,1],"name":".spago/pipes/v8.0.0/src/Pipes/Core.purs","end":[282,34]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"flippedComposeResponse","moduleName":"Pipes.Core","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["x'",{"tag":"ForAll","contents":["a'",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["b'",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["c'",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"x'"}]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"b'"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"x'"}]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a'"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"x'"}]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a'"}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Equivalent to ('//>') with the arguments flipped\n"}],"tag":"SearchResult"}]],["flippedcomposeresponse'",[{"values":[{"sourceSpan":{"start":[241,1],"name":".spago/pipes/v8.0.0/src/Pipes/Core.purs","end":[246,35]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"flippedComposeResponse'","moduleName":"Pipes.Core","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["x'",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["a'",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["b'",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["c'",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"x'"}]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"b'"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"x'"}]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a'"}]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"x'"}]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a'"}]}]}}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Equivalent to ('/>/') with the arguments flipped\n"}],"tag":"SearchResult"}]],["float32",[{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/arraybuffer-types/v3.0.2/src/Data/ArrayBuffer/Types.purs","end":[27,45]},"score":4,"packageInfo":{"values":["arraybuffer-types"],"tag":"Package"},"name":"Float32","moduleName":"Data.ArrayBuffer.Types","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["float32array",[{"values":[{"sourceSpan":{"start":[37,1],"name":".spago/arraybuffer-types/v3.0.2/src/Data/ArrayBuffer/Types.purs","end":[37,38]},"score":4,"packageInfo":{"values":["arraybuffer-types"],"tag":"Package"},"name":"Float32Array","moduleName":"Data.ArrayBuffer.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"ArrayView"]},{"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"Float32"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["float64",[{"values":[{"sourceSpan":{"start":[28,1],"name":".spago/arraybuffer-types/v3.0.2/src/Data/ArrayBuffer/Types.purs","end":[28,45]},"score":4,"packageInfo":{"values":["arraybuffer-types"],"tag":"Package"},"name":"Float64","moduleName":"Data.ArrayBuffer.Types","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["float64array",[{"values":[{"sourceSpan":{"start":[38,1],"name":".spago/arraybuffer-types/v3.0.2/src/Data/ArrayBuffer/Types.purs","end":[38,38]},"score":4,"packageInfo":{"values":["arraybuffer-types"],"tag":"Package"},"name":"Float64Array","moduleName":"Data.ArrayBuffer.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"ArrayView"]},{"tag":"TypeConstructor","contents":[["Data","ArrayBuffer","Types"],"Float64"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["floatbe",[{"values":[{"sourceSpan":{"start":[29,3],"name":".spago/node-buffer/v8.0.0/src/Node/Buffer/Types.purs","end":[29,12]},"score":7,"packageInfo":{"values":["node-buffer"],"tag":"Package"},"name":"FloatBE","moduleName":"Node.Buffer.Types","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["floatle",[{"values":[{"sourceSpan":{"start":[28,3],"name":".spago/node-buffer/v8.0.0/src/Node/Buffer/Types.purs","end":[28,12]},"score":7,"packageInfo":{"values":["node-buffer"],"tag":"Package"},"name":"FloatLE","moduleName":"Node.Buffer.Types","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["floor",[{"values":[{"sourceSpan":{"start":[49,1],"name":".spago/integers/v6.0.0/src/Data/Int.purs","end":[49,23]},"score":21,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"floor","moduleName":"Data.Int","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert a `Number` to an `Int`, by taking the closest integer equal to or\nless than the argument. Values outside the `Int` range are clamped, `NaN`\nand `Infinity` values return 0.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[185,1],"name":".spago/numbers/v9.0.0/src/Data/Number.purs","end":[185,41]},"score":11,"packageInfo":{"values":["numbers"],"tag":"Package"},"name":"floor","moduleName":"Data.Number","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the largest integer not larger than the argument.\n```purs\n> floor 1.5\n1.0\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[188,1],"name":".spago/uint/v7.0.0/src/Data/UInt.purs","end":[188,24]},"score":0,"packageInfo":{"values":["uint"],"tag":"Package"},"name":"floor","moduleName":"Data.UInt","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert a `Number` to an `UInt`. Takes the closest integer equal to or\nless than the argument. Values outside the `UInt` range are clamped.\n\n    > floor 27.1\n    27u\n\n    > floor 27.9\n    27u\n\n    > floor (-27.1)\n    0u\n\n    > floor (1.0e65)\n    4294967295u\n\n    > floor (-1.0e65)\n    0u\n"}],"tag":"SearchResult"}]],["embed",[{"values":[{"sourceSpan":{"start":[81,3],"name":".spago/mmorph/v7.0.0/src/Control/Monad/Morph.purs","end":[81,79]},"score":1,"packageInfo":{"values":["mmorph"],"tag":"Package"},"name":"embed","moduleName":"Control.Monad.Morph","info":{"values":[{"typeClassArguments":[["t",null]],"typeClass":[["Control","Monad","Morph"],"MMonad"],"type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["n",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Morph"],"MMonad"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"n"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"n"}]},{"tag":"TypeVar","contents":"a"}]}]},null]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"n"}]},{"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["empty",[{"values":[{"sourceSpan":{"start":[233,1],"name":".spago/plutus-types/v1.0.1/src/Cardano/Plutus/Types/Map.purs","end":[233,49]},"score":0,"packageInfo":{"values":["plutus-types"],"tag":"Package"},"name":"empty","moduleName":"Cardano.Plutus.Types.Map","info":{"values":[{"type":{"tag":"ForAll","contents":["k",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ForAll","contents":["v",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Cardano","Plutus","Types","Map"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"An empty `Map`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[41,1],"name":".spago/cardano-types/v1.0.1/src/Cardano/Types/ExUnits.purs","end":[41,17]},"score":0,"packageInfo":{"values":["cardano-types"],"tag":"Package"},"name":"empty","moduleName":"Cardano.Types.ExUnits","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Cardano","Types","ExUnits"],"ExUnits"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[58,1],"name":".spago/cardano-types/v1.0.1/src/Cardano/Types/GeneralTransactionMetadata.purs","end":[58,36]},"score":0,"packageInfo":{"values":["cardano-types"],"tag":"Package"},"name":"empty","moduleName":"Cardano.Types.GeneralTransactionMetadata","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Cardano","Types","GeneralTransactionMetadata"],"GeneralTransactionMetadata"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[72,1],"name":".spago/cardano-types/v1.0.1/src/Cardano/Types/Mint.purs","end":[72,14]},"score":0,"packageInfo":{"values":["cardano-types"],"tag":"Package"},"name":"empty","moduleName":"Cardano.Types.Mint","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Cardano","Types","Mint"],"Mint"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[87,1],"name":".spago/cardano-types/v1.0.1/src/Cardano/Types/MultiAsset.purs","end":[87,20]},"score":0,"packageInfo":{"values":["cardano-types"],"tag":"Package"},"name":"empty","moduleName":"Cardano.Types.MultiAsset","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Cardano","Types","MultiAsset"],"MultiAsset"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[53,1],"name":".spago/cardano-types/v1.0.1/src/Cardano/Types/Transaction.purs","end":[53,21]},"score":0,"packageInfo":{"values":["cardano-types"],"tag":"Package"},"name":"empty","moduleName":"Cardano.Types.Transaction","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Cardano","Types","Transaction"],"Transaction"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[102,1],"name":".spago/cardano-types/v1.0.1/src/Cardano/Types/TransactionBody.purs","end":[102,25]},"score":0,"packageInfo":{"values":["cardano-types"],"tag":"Package"},"name":"empty","moduleName":"Cardano.Types.TransactionBody","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Cardano","Types","TransactionBody"],"TransactionBody"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[107,1],"name":".spago/cardano-types/v1.0.1/src/Cardano/Types/Value.purs","end":[107,15]},"score":0,"packageInfo":{"values":["cardano-types"],"tag":"Package"},"name":"empty","moduleName":"Cardano.Types.Value","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Cardano","Types","Value"],"Value"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[24,3],"name":".spago/control/v6.0.0/src/Control/Plus.purs","end":[24,25]},"score":29,"packageInfo":{"values":["control"],"tag":"Package"},"name":"empty","moduleName":"Control.Plus","info":{"values":[{"typeClassArguments":[["f",null]],"typeClass":[["Control","Plus"],"Plus"],"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Plus"],"Plus"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[183,1],"name":"src/Internal/BalanceTx/CoinSelection.purs","end":[183,24]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"empty","moduleName":"Ctl.Internal.BalanceTx.CoinSelection","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Ctl","Internal","BalanceTx","CoinSelection"],"SelectionState"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A completely empty selection with no selected or leftover UTxOs.\n\nTaken from cardano-wallet:\nhttps://github.com/input-output-hk/cardano-wallet/blob/9d73b57e23392e25148cfc8db560cb8f656cb56a/lib/primitive/lib/Cardano/Wallet/Primitive/Types/UTxOSelection.hs#L183\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[50,1],"name":".spago/catenable-lists/v7.0.0/src/Data/CatList.purs","end":[50,29]},"score":1,"packageInfo":{"values":["catenable-lists"],"tag":"Package"},"name":"empty","moduleName":"Data.CatList","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatList"],"CatList"]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create an empty catenable list.\n\nRunning time: `O(1)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[43,1],"name":".spago/catenable-lists/v7.0.0/src/Data/CatQueue.purs","end":[43,30]},"score":1,"packageInfo":{"values":["catenable-lists"],"tag":"Package"},"name":"empty","moduleName":"Data.CatQueue","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatQueue"],"CatQueue"]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create an empty queue.\n\nRunning time: `O(1)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[211,1],"name":".spago/ordered-collections/v3.0.0/src/Data/Map/Internal.purs","end":[211,29]},"score":6,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"empty","moduleName":"Data.Map.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["k",{"tag":"ForAll","contents":["v",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"An empty map\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[95,1],"name":".spago/ordered-collections/v3.0.0/src/Data/Set.purs","end":[95,25]},"score":6,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"empty","moduleName":"Data.Set","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"An empty set\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[28,1],"name":".spago/avar/v5.0.0/src/Effect/Aff/AVar.purs","end":[28,32]},"score":2,"packageInfo":{"values":["avar"],"tag":"Package"},"name":"empty","moduleName":"Effect.Aff.AVar","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a fresh AVar.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[36,3],"name":".spago/avar/v5.0.0/src/Effect/AVar.purs","end":[36,10]},"score":2,"packageInfo":{"values":["avar"],"tag":"Package"},"name":"Empty","moduleName":"Effect.AVar","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[39,1],"name":".spago/avar/v5.0.0/src/Effect/AVar.purs","end":[39,50]},"score":2,"packageInfo":{"values":["avar"],"tag":"Package"},"name":"empty","moduleName":"Effect.AVar","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a new empty AVar.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[167,1],"name":".spago/foreign-object/v4.1.0/src/Foreign/Object.purs","end":[167,43]},"score":11,"packageInfo":{"values":["foreign-object"],"tag":"Package"},"name":"empty","moduleName":"Foreign.Object","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Foreign","Object"],"Object"]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"An empty map\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[562,17],"name":".spago/optparse/v5.0.0/src/Text/PrettyPrint/Leijen.purs","end":[562,24]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"Empty","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[620,1],"name":".spago/optparse/v5.0.0/src/Text/PrettyPrint/Leijen.purs","end":[620,13]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"empty","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The empty document is, indeed, empty. Although @empty@ has no\ncontent, it does have a \\'height\\' of 1 and behaves exactly like\n@(text \\\"\\\")@ (and is therefore not a unit of @\\<$\\>@).\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[8,3],"name":".spago/web-file/v4.0.0/src/Web/File/FileReader/ReadyState.purs","end":[8,10]},"score":3,"packageInfo":{"values":["web-file"],"tag":"Package"},"name":"EMPTY","moduleName":"Web.File.FileReader.ReadyState","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[9,3],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLMediaElement/NetworkState.purs","end":[9,10]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"Empty","moduleName":"Web.HTML.HTMLMediaElement.NetworkState","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["emptydef",[{"values":[{"sourceSpan":{"start":[69,1],"name":".spago/parsing/v10.2.0/src/Parsing/Language.purs","end":[69,24]},"score":1,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"emptyDef","moduleName":"Parsing.Language","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Parsing","Token"],"LanguageDef"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"This is the most minimal token definition. It is recommended to use\nthis definition as the basis for other definitions. `emptyDef` has\nno reserved names or operators, is case sensitive and doesn't accept\ncomments, identifiers or operators.\n"}],"tag":"SearchResult"}]],["emptyhooks",[{"values":[{"sourceSpan":{"start":[31,1],"name":"src/Internal/Contract/Hooks.purs","end":[31,20]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"emptyHooks","moduleName":"Ctl.Internal.Contract.Hooks","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Hooks"],"Hooks"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["emptyinterval",[{"values":[{"sourceSpan":{"start":[254,3],"name":"src/Internal/Types/Interval.purs","end":[254,18]},"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"EmptyInterval","moduleName":"Ctl.Internal.Types.Interval","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["emptyset",[{"values":[{"sourceSpan":{"start":[12,1],"name":".spago/lists/v7.0.0/src/Data/List/Internal.purs","end":[12,28]},"score":19,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"emptySet","moduleName":"Data.List.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["k",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Internal"],"Set"]},{"tag":"TypeVar","contents":"k"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["emptyutxoindex",[{"values":[{"sourceSpan":{"start":[124,1],"name":"src/Internal/CoinSelection/UtxoIndex.purs","end":[124,28]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"emptyUtxoIndex","moduleName":"Ctl.Internal.CoinSelection.UtxoIndex","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Ctl","Internal","CoinSelection","UtxoIndex"],"UtxoIndex"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"An index with no entries.\n"}],"tag":"SearchResult"}]],["dnsrecordaoraaaa",[{"values":[{"sourceSpan":{"start":[1203,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1203,45]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"DNSRecordAorAAAA","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["dnsrecordaoraaaa_new",[{"values":[{"sourceSpan":{"start":[1205,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1205,66]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"dnsRecordAorAAAA_new","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"DNSRecordAorAAAA"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["dnsrecordaoraaaa_record",[{"values":[{"sourceSpan":{"start":[1206,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1206,69]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"dnsRecordAorAAAA_record","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"DNSRecordAorAAAA"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["dnsrecordsrv",[{"values":[{"sourceSpan":{"start":[1219,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1219,41]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"DNSRecordSRV","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["dnsrecordsrv_new",[{"values":[{"sourceSpan":{"start":[1221,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1221,58]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"dnsRecordSRV_new","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"DNSRecordSRV"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["dnsrecordsrv_record",[{"values":[{"sourceSpan":{"start":[1222,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1222,61]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"dnsRecordSRV_record","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"DNSRecordSRV"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["coarbitrary",[{"values":[{"sourceSpan":{"start":[74,1],"name":".spago/quickcheck/v8.0.1/src/Test/QuickCheck/Arbitrary.purs","end":[75,47]},"score":14,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"Coarbitrary","moduleName":"Test.QuickCheck.Arbitrary","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["t",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `Coarbitrary` class represents types which appear on the left of\nan `Arbitrary` function arrow.\n\nTo construct an `Arbitrary` instance for the type `a -> b`, we need to\nuse the input of type `a` to _perturb_ a random generator for `b`. This\nis the role of the `coarbitrary` function.\n\n`Coarbitrary` instances can be written using the `perturbGen` function.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[75,3],"name":".spago/quickcheck/v8.0.1/src/Test/QuickCheck/Arbitrary.purs","end":[75,47]},"score":14,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"coarbitrary","moduleName":"Test.QuickCheck.Arbitrary","info":{"values":[{"typeClassArguments":[["t",null]],"typeClass":[["Test","QuickCheck","Arbitrary"],"Coarbitrary"],"type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Test","QuickCheck","Arbitrary"],"Coarbitrary"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"r"}]}]}]}]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["cochoice",[{"values":[{"sourceSpan":{"start":[7,1],"name":".spago/profunctor/v6.0.0/src/Data/Profunctor/Cochoice.purs","end":[9,64]},"score":3,"packageInfo":{"values":["profunctor"],"tag":"Package"},"name":"Cochoice","moduleName":"Data.Profunctor.Cochoice","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Profunctor"],"Profunctor"],"constraintArgs":[{"tag":"TypeVar","contents":"p"}]}],"fundeps":[],"arguments":[["p",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `Cochoice` class provides the dual operations of the `Choice` class.\n"}],"tag":"SearchResult"}]],["codeforrenderingmode",[{"values":[{"sourceSpan":{"start":[136,1],"name":".spago/ansi/v7.0.0/src/Ansi/Codes.purs","end":[136,45]},"score":2,"packageInfo":{"values":["ansi"],"tag":"Package"},"name":"codeForRenderingMode","moduleName":"Ansi.Codes","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"RenderingMode"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["codepoint",[{"values":[{"sourceSpan":{"start":[47,1],"name":".spago/strings/v6.0.1/src/Data/String/CodePoints.purs","end":[47,34]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"CodePoint","moduleName":"Data.String.CodePoints","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"CodePoint is an `Int` bounded between `0` and `0x10FFFF`, corresponding to\nUnicode code points.\n"}],"tag":"SearchResult"}]],["codepointat",[{"values":[{"sourceSpan":{"start":[160,1],"name":".spago/strings/v6.0.1/src/Data/String/CodePoints.purs","end":[160,48]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"codePointAt","moduleName":"Data.String.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the first code point of the string after dropping the given number\nof code points from the beginning, if there is such a code point. Operates\nin constant space and in time linear to the given index.\n\n```purescript\n>>> codePointAt 1 \"𝐀𝐀𝐀𝐀\"\nJust (CodePoint 0x1D400) -- represents \"𝐀\"\n-- compare to Data.String:\n>>> charAt 1 \"𝐀𝐀𝐀𝐀\"\nJust '�'\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[78,1],"name":".spago/strings/v6.0.1/src/Data/String/NonEmpty/CodePoints.purs","end":[78,56]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"codePointAt","moduleName":"Data.String.NonEmpty.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[95,1],"name":".spago/stringutils/v0.0.12/src/Data/String/Utils.purs","end":[97,32]},"score":0,"packageInfo":{"values":["stringutils"],"tag":"Package"},"name":"codePointAt","moduleName":"Data.String.Utils","info":{"values":[{"type":{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","TypeError"],"Warn"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim","TypeError"],"Text"]},{"tag":"TypeLevelString","contents":"DEPRECATED: `Data.String.Utils.codePointAt`"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"DEPRECATED: This function is now available in `purescript-strings`.\n\nReturn the Unicode code point value of the character at the given index,\nif the index is within bounds.\nNote that this function handles Unicode as you would expect.\nIf you want a simple wrapper around JavaScript's\n`String.prototype.codePointAt` method, you should use `codePointAt'`.\n\nExample:\n```purescript\ncodePointAt   0 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == Just 120792\ncodePointAt   1 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == Just 120793\ncodePointAt   2 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == Just 120794\ncodePointAt  19 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == Nothing\n\ncodePointAt'  0 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == Just 120793\ncodePointAt'  1 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == Just 57304   -- Surrogate code point\ncodePointAt'  2 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == Just 120794\ncodePointAt' 19 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == Just 57313   -- Surrogate code point\n```\n"}],"tag":"SearchResult"}]],["codepointat'",[{"values":[{"sourceSpan":{"start":[125,1],"name":".spago/stringutils/v0.0.12/src/Data/String/Utils.purs","end":[125,43]},"score":0,"packageInfo":{"values":["stringutils"],"tag":"Package"},"name":"codePointAt'","moduleName":"Data.String.Utils","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Return the Unicode code point value of the character at the given index,\nif the index is within bounds.\nThis function is a simple wrapper around JavaScript's\n`String.prototype.codePointAt` method. This means that if the index does\nnot point to the beginning of a valid surrogate pair, the code unit at\nthe index (i.e. the Unicode code point of the surrogate pair half) is\nreturned instead.\nIf you want to treat a string as an array of Unicode Code Points, use\n`codePointAt` from `purescript-strings` instead.\n\nExample:\n```purescript\ncodePointAt'  0 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == Just 120793\ncodePointAt'  1 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == Just 57304   -- Surrogate code point\ncodePointAt'  2 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == Just 120794\ncodePointAt' 19 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == Just 57313   -- Surrogate code point\n\ncodePointAt   0 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == Just 120792\ncodePointAt   1 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == Just 120793\ncodePointAt   2 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == Just 120794\ncodePointAt  19 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == Nothing\n```\n"}],"tag":"SearchResult"}]],["codepointfromchar",[{"values":[{"sourceSpan":{"start":[77,1],"name":".spago/strings/v6.0.1/src/Data/String/CodePoints.purs","end":[77,39]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"codePointFromChar","moduleName":"Data.String.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a `CodePoint` from a given `Char`.\n\n```purescript\n>>> codePointFromChar 'B'\nCodePoint 0x42 -- represents 'B'\n```\n\n"}],"tag":"SearchResult"}]],["coerce",[{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/contravariant/v6.0.0/src/Data/Functor/Contravariant.purs","end":[27,67]},"score":3,"packageInfo":{"values":["contravariant"],"tag":"Package"},"name":"coerce","moduleName":"Data.Functor.Contravariant","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor","Contravariant"],"Contravariant"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[26,1],"name":".spago/safe-coerce/v2.0.0/src/Safe/Coerce.purs","end":[26,46]},"score":2,"packageInfo":{"values":["safe-coerce"],"tag":"Package"},"name":"coerce","moduleName":"Safe.Coerce","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Coerce"],"Coercible"],"constraintArgs":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Coerce a value of one type to a value of some other type, without changing\nits runtime representation. This function behaves identically to\n`unsafeCoerce` at runtime. Unlike `unsafeCoerce`, it is safe, because the\n`Coercible` constraint prevents any use of this function from compiling\nunless the compiler can prove that the two types have the same runtime\nrepresentation.\n\nOne application for this function is to avoid doing work that you know is a\nno-op because of newtypes. For example, if you have an `Array (Conj a)` and you\nwant an `Array (Disj a)`, you could do `Data.Array.map (un Conj >>> Disj)`, but\nthis performs an unnecessary traversal of the array, with O(n) cost.\n`coerce` accomplishes the same with only O(1) cost:\n\n```purescript\nmapConjToDisj :: forall a. Array (Conj a) -> Array (Disj a)\nmapConjToDisj = coerce\n```\n"}],"tag":"SearchResult"}]],["coerced",[{"values":[{"sourceSpan":{"start":[102,1],"name":".spago/profunctor-lenses/v8.0.0/src/Data/Lens/Iso.purs","end":[102,73]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"coerced","moduleName":"Data.Lens.Iso","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Coerce"],"Coercible"],"constraintArgs":[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Coerce"],"Coercible"],"constraintArgs":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Iso"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"An `Iso` between two types that are inferred to have the\nsame representation by the compiler. One scenario that this is\nparticularly useful is the case of nested newtypes:\n\n```purescript\n newtype UserId = UserId Int\n newtype DeletedUserId = DeletedUserId UserId\n\n -- `simple` is used to aid the type inference\n deletedUser :: DeletedUserId\n deletedUser = review (simple coerced) 42\n```\n"}],"tag":"SearchResult"}]],["coercible",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Coercible","moduleName":"Prim.Coerce","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["a",{"tag":"TypeVar","contents":"k"}],["b",{"tag":"TypeVar","contents":"k"}]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Coercible is a two-parameter type class that has instances for types `a`\nand `b` if the compiler can infer that they have the same representation.\nCoercible constraints are solved according to the following rules:\n\n* _reflexivity_, any type has the same representation as itself:\n`Coercible a a` holds.\n\n* _symmetry_, if a type `a` can be coerced to some other type `b`, then `b`\ncan also be coerced back to `a`: `Coercible a b` implies `Coercible b a`.\n\n* _transitivity_, if a type `a` can be coerced to some other type `b` which\ncan be coerced to some other type `c`, then `a` can also be coerced to `c`:\n`Coercible a b` and `Coercible b c` imply `Coercible a c`.\n\n* Newtypes can be freely wrapped and unwrapped when their constructor is\nin scope:\n\n      newtype Age = Age Int\n\n`Coercible Int Age` and `Coercible Age Int` hold since `Age` has the same\nruntime representation than `Int`.\n\nNewtype constructors have to be in scope to preserve abstraction. It's\ncommon to declare a newtype to encode some invariants (non emptiness of\narrays with `Data.Array.NonEmpty.NonEmptyArray` for example), hide its\nconstructor and export smart constructors instead. Without this restriction,\nthe guarantees provided by such newtypes would be void.\n\n* If none of the above are applicable, two types of kind `Type` may be\ncoercible, but only if their heads are the same. For example,\n`Coercible (Maybe a) (Either a b)` does not hold because `Maybe` and\n`Either` are different. Those types don't share a common runtime\nrepresentation so coercing between them would be unsafe. In addition their\narguments may need to be identical or coercible, depending on the _roles_\nof the head's type parameters. Roles are documented in [the PureScript\nlanguage reference](https://github.com/purescript/documentation/blob/master/language/Roles.md).\n\nCoercible being polykinded, we can also coerce more than types of kind `Type`:\n\n* Rows are coercible when they have the same labels, when the corresponding\npairs of types are coercible and when their tails are coercible:\n`Coercible ( label :: a | r ) ( label :: b | s )` holds when\n`Coercible a b` and `Coercible r s` do. Closed rows cannot be coerced to\nopen rows.\n\n* Higher kinded types are coercible if they are coercible when fully\nsaturated: `Coercible (f :: _ -> Type) (g :: _ -> Type)` holds when\n`Coercible (f a) (g a)` does.\n\nThis rule may seem puzzling since there is no term of type `_ -> Type` to\napply `coerce` to, but it is necessary when coercing types with higher\nkinded parameters.\n"}],"tag":"SearchResult"}]],["cofree",[{"values":[{"sourceSpan":{"start":[38,1],"name":".spago/free/v7.0.0/src/Control/Comonad/Cofree.purs","end":[38,62]},"score":2,"packageInfo":{"values":["free"],"tag":"Package"},"name":"Cofree","moduleName":"Control.Comonad.Cofree","info":{"values":[{"typeArguments":[["f",null],["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The `Cofree` `Comonad` for a functor.\n\nA value of type `Cofree f a` consists of an `f`-branching\ntree, annotated with labels of type `a`.\n\nThe `Comonad` instance supports _redecoration_, recomputing\nlabels from the local context.\n"}],"tag":"SearchResult"}]],["coin",[{"values":[{"sourceSpan":{"start":[136,1],"name":".spago/plutus-types/v1.0.1/src/Cardano/Plutus/Types/Value.purs","end":[136,27]},"score":0,"packageInfo":{"values":["plutus-types"],"tag":"Package"},"name":"Coin","moduleName":"Cardano.Plutus.Types.Value","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[136,14],"name":".spago/plutus-types/v1.0.1/src/Cardano/Plutus/Types/Value.purs","end":[136,27]},"score":0,"packageInfo":{"values":["plutus-types"],"tag":"Package"},"name":"Coin","moduleName":"Cardano.Plutus.Types.Value","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["JS","BigInt"],"BigInt"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[20,1],"name":".spago/cardano-types/v1.0.1/src/Cardano/Types/Coin.purs","end":[20,27]},"score":0,"packageInfo":{"values":["cardano-types"],"tag":"Package"},"name":"Coin","moduleName":"Cardano.Types.Coin","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[20,14],"name":".spago/cardano-types/v1.0.1/src/Cardano/Types/Coin.purs","end":[20,27]},"score":0,"packageInfo":{"values":["cardano-types"],"tag":"Package"},"name":"Coin","moduleName":"Cardano.Types.Coin","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Cardano","Types","BigNum"],"BigNum"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["cointovalue",[{"values":[{"sourceSpan":{"start":[162,1],"name":".spago/plutus-types/v1.0.1/src/Cardano/Plutus/Types/Value.purs","end":[162,29]},"score":0,"packageInfo":{"values":["plutus-types"],"tag":"Package"},"name":"coinToValue","moduleName":"Cardano.Plutus.Types.Value","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Plutus","Types","Value"],"Coin"]}]},{"tag":"TypeConstructor","contents":[["Cardano","Plutus","Types","Value"],"Value"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a `Value` containing only the given `Coin`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[254,1],"name":".spago/cardano-types/v1.0.1/src/Cardano/Types/Value.purs","end":[254,29]},"score":0,"packageInfo":{"values":["cardano-types"],"tag":"Package"},"name":"coinToValue","moduleName":"Cardano.Types.Value","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Coin"],"Coin"]}]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Value"],"Value"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a `Value` containing only the given `Coin`.\n"}],"tag":"SearchResult"}]],["collateralreturnerror",[{"values":[{"sourceSpan":{"start":[79,3],"name":"src/Internal/BalanceTx/Error.purs","end":[79,26]},"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"CollateralReturnError","moduleName":"Ctl.Internal.BalanceTx.Error","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["collateralreturnminadavaluecalcerror",[{"values":[{"sourceSpan":{"start":[80,3],"name":"src/Internal/BalanceTx/Error.purs","end":[80,41]},"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"CollateralReturnMinAdaValueCalcError","moduleName":"Ctl.Internal.BalanceTx.Error","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Cardano","Types","Coin"],"Coin"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","TransactionOutput"],"TransactionOutput"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["collect",[{"values":[{"sourceSpan":{"start":[26,3],"name":".spago/distributive/v6.0.0/src/Data/Distributive.purs","end":[26,69]},"score":5,"packageInfo":{"values":["distributive"],"tag":"Package"},"name":"collect","moduleName":"Data.Distributive","info":{"values":[{"typeClassArguments":[["f",null]],"typeClass":[["Data","Distributive"],"Distributive"],"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Distributive"],"Distributive"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"b"}]}}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[300,1],"name":".spago/newtype/v5.0.0/src/Data/Newtype.purs","end":[307,7]},"score":32,"packageInfo":{"values":["newtype"],"tag":"Package"},"name":"collect","moduleName":"Data.Newtype","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Coerce"],"Coercible"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"t"}]}}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Newtype"],"Newtype"],"constraintArgs":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"t"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"t"}]}]},{"tag":"TypeVar","contents":"t"}]}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Similar to the function from the `Distributive` class, but operating within\na newtype instead.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[128,1],"name":".spago/spec/v7.2.0/src/Test/Spec.purs","end":[128,82]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"collect","moduleName":"Test.Spec","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Spec"],"SpecT"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Spec"],"SpecTree"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"i"}]}}]}}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Collects all tests, if something is focused, all unfocused tests will be discarded\n"}],"tag":"SearchResult"}]],["collectassertionfailures",[{"values":[{"sourceSpan":{"start":[365,1],"name":"src/Contract/Test/Assert.purs","end":[369,65]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"collectAssertionFailures","moduleName":"Contract.Test.Assert","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Test","Assert"],"ContractCheck"]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Test","Assert"],"ContractAssertion"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"ParensInType","contents":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Tuple","Nested"],"/\\"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Contract","Test","Assert"],"ContractAssertionFailure"]}]}]}}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Like `runChecks`, but does not throw a user-readable report, collecting\nthe exceptions instead.\n"}],"tag":"SearchResult"}]],["collectdefault",[{"values":[{"sourceSpan":{"start":[50,1],"name":".spago/distributive/v6.0.0/src/Data/Distributive.purs","end":[56,13]},"score":5,"packageInfo":{"values":["distributive"],"tag":"Package"},"name":"collectDefault","moduleName":"Data.Distributive","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["g",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Distributive"],"Distributive"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"b"}]}}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A default implementation of `collect`, based on `distribute`.\n"}],"tag":"SearchResult"}]],["collectof",[{"values":[{"sourceSpan":{"start":[44,1],"name":".spago/profunctor-lenses/v8.0.0/src/Data/Lens/Grate.purs","end":[44,97]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"collectOf","moduleName":"Data.Lens.Grate","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Optic"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Costar"],"Costar"]},{"tag":"TypeVar","contents":"f"}]}}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"s"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"t"}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["colno",[{"values":[{"sourceSpan":{"start":[22,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/Event/ErrorEvent.purs","end":[22,42]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"colNo","moduleName":"Web.HTML.Event.ErrorEvent","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","Event","ErrorEvent"],"ErrorEvent"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["colon",[{"values":[{"sourceSpan":{"start":[318,1],"name":".spago/optparse/v5.0.0/src/Text/PrettyPrint/Leijen.purs","end":[318,13]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"colon","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The document @colon@ contains a colon, \\\":\\\".\n"}],"tag":"SearchResult"}]],["color",[{"values":[{"sourceSpan":{"start":[147,1],"name":".spago/ansi/v7.0.0/src/Ansi/Codes.purs","end":[163,16]},"score":2,"packageInfo":{"values":["ansi"],"tag":"Package"},"name":"Color","moduleName":"Ansi.Codes","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The standard set of 16 ANSI colors.\n"}],"tag":"SearchResult"}]],["colorcode",[{"values":[{"sourceSpan":{"start":[171,1],"name":".spago/ansi/v7.0.0/src/Ansi/Codes.purs","end":[171,26]},"score":2,"packageInfo":{"values":["ansi"],"tag":"Package"},"name":"colorCode","moduleName":"Ansi.Codes","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"Color"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["colorsuffix",[{"values":[{"sourceSpan":{"start":[17,1],"name":".spago/ansi/v7.0.0/src/Ansi/Codes.purs","end":[17,22]},"score":2,"packageInfo":{"values":["ansi"],"tag":"Package"},"name":"colorSuffix","moduleName":"Ansi.Codes","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Prim"],"String"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The suffix for escape codes; note that this is only required for colors.\n"}],"tag":"SearchResult"}]],["cols",[{"values":[{"sourceSpan":{"start":[136,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLTextAreaElement.purs","end":[136,57]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"cols","moduleName":"Web.HTML.HTMLTextAreaElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLTextAreaElement"],"HTMLTextAreaElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["colspan",[{"values":[{"sourceSpan":{"start":[56,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLTableCellElement.purs","end":[56,61]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"colSpan","moduleName":"Web.HTML.HTMLTableCellElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLTableCellElement"],"HTMLTableCellElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["column",[{"values":[{"sourceSpan":{"start":[571,17],"name":".spago/optparse/v5.0.0/src/Text/PrettyPrint/Leijen.purs","end":[571,25]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"Column","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[674,1],"name":".spago/optparse/v5.0.0/src/Text/PrettyPrint/Leijen.purs","end":[674,30]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"column","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["columns",[{"values":[{"sourceSpan":{"start":[502,1],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Builder.purs","end":[502,27]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"columns","moduleName":"Options.Applicative.Builder","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"PrefsMod"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Set the maximum width of the generated help text.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[572,17],"name":".spago/optparse/v5.0.0/src/Text/PrettyPrint/Leijen.purs","end":[572,26]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"Columns","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[680,1],"name":".spago/optparse/v5.0.0/src/Text/PrettyPrint/Leijen.purs","end":[680,37]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"columns","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["comma",[{"values":[{"sourceSpan":{"start":[321,1],"name":".spago/optparse/v5.0.0/src/Text/PrettyPrint/Leijen.purs","end":[321,13]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"comma","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The document @comma@ contains a comma, \\\",\\\".\n"}],"tag":"SearchResult"}]],["command",[{"values":[{"sourceSpan":{"start":[235,1],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Builder.purs","end":[235,67]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"command","moduleName":"Options.Applicative.Builder","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserInfo"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"CommandFields"]}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Add a command to a subparser option.\n\nSuggested usage for multiple commands is to add them to a single subparser. e.g.\n\n```purescript\nsample :: Parser Sample\nsample = subparser\n       ( command \"hello\"\n         (info hello (progDesc \"Print greeting\"))\n      <> command \"goodbye\"\n         (info goodbye (progDesc \"Say goodbye\"))\n       )\n```\n"}],"tag":"SearchResult"}]],["commandfields",[{"values":[{"sourceSpan":{"start":[48,1],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Builder/Internal.purs","end":[50,31]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"CommandFields","moduleName":"Options.Applicative.Builder.Internal","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[48,25],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Builder/Internal.purs","end":[50,31]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"CommandFields","moduleName":"Options.Applicative.Builder.Internal","info":{"values":[{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["cmdCommands",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserInfo"]},{"tag":"TypeVar","contents":"a"}]}}]}}]},{"tag":"RCons","contents":["cmdGroup",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"REmpty","contents":{}}]}]}]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["commandgroup",[{"values":[{"sourceSpan":{"start":[245,1],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Builder.purs","end":[245,56]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"commandGroup","moduleName":"Options.Applicative.Builder","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"CommandFields"]}]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Add a description to a group of commands.\n\nAdvanced feature for separating logical groups of commands on the parse line.\n\nIf using the same `metavar` for each group of commands, it may yield a more\nattractive usage text combined with `hidden` for some groups.\n"}],"tag":"SearchResult"}]],["commandnotfound",[{"values":[{"sourceSpan":{"start":[32,3],"name":".spago/exitcodes/v4.0.0/src/ExitCodes.purs","end":[32,20]},"score":1,"packageInfo":{"values":["exitcodes"],"tag":"Package"},"name":"CommandNotFound","moduleName":"ExitCodes","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["commands",[{"values":[{"sourceSpan":{"start":[160,1],"name":"src/Internal/Test/E2E/Options.purs","end":[160,30]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"commands","moduleName":"Ctl.Internal.Test.E2E.Options","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Test","E2E","Options"],"E2ECommand"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["comment",[{"values":[{"sourceSpan":{"start":[12,1],"name":".spago/web-dom/v6.0.0/src/Web/DOM/Comment.purs","end":[12,36]},"score":4,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"Comment","moduleName":"Web.DOM.Comment","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["commentnode",[{"values":[{"sourceSpan":{"start":[15,3],"name":".spago/web-dom/v6.0.0/src/Web/DOM/NodeType.purs","end":[15,16]},"score":4,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"CommentNode","moduleName":"Web.DOM.NodeType","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["commonoptions_",[{"values":[{"sourceSpan":{"start":[114,1],"name":"src/Internal/Test/E2E/Options.purs","end":[122,4]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"CommonOptions_","moduleName":"Ctl.Internal.Test.E2E.Options","info":{"values":[{"type":{"tag":"RCons","contents":["browser",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Test","E2E","Types"],"Browser"]}]},{"tag":"RCons","contents":["wallets",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Test","E2E","Types"],"WalletExt"]}]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Test","E2E","Options"],"ExtensionOptions"]}]},{"tag":"RCons","contents":["chromeUserDataDir",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Test","E2E","Types"],"ChromeUserDataDir"]}]},{"tag":"RCons","contents":["tmpDir",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Test","E2E","Types"],"TmpDir"]}]},{"tag":"RCons","contents":["settingsArchive",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Test","E2E","Types"],"SettingsArchive"]}]},{"tag":"RCons","contents":["settingsArchiveUrl",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Test","E2E","Types"],"SettingsArchiveUrl"]}]},{"tag":"RCons","contents":["extraBrowserArgs",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Test","E2E","Types"],"BrowserArg"]}]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]}]},"arguments":[["r",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Row"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"CLI options for both E2E tests and the `browser` command\n"}],"tag":"SearchResult"}]],["commutative",[{"values":[{"sourceSpan":{"start":[46,1],"name":".spago/properties/v0.2.0/src/Control/Algebra/Properties.purs","end":[46,58]},"score":1,"packageInfo":{"values":["properties"],"tag":"Package"},"name":"commutative","moduleName":"Control.Algebra.Properties","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["commutativering",[{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/prelude/v6.0.1/src/Data/CommutativeRing.purs","end":[23,34]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"CommutativeRing","moduleName":"Data.CommutativeRing","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Ring"],"Ring"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]}],"fundeps":[],"arguments":[["a",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `CommutativeRing` class is for rings where multiplication is\ncommutative.\n\nInstances must satisfy the following law in addition to the `Ring`\nlaws:\n\n- Commutative multiplication: `a * b = b * a`\n"}],"tag":"SearchResult"}]],["commutativeringrecord",[{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/prelude/v6.0.1/src/Data/CommutativeRing.purs","end":[34,100]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"CommutativeRingRecord","moduleName":"Data.CommutativeRing","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Ring"],"RingRecord"],"constraintArgs":[{"tag":"TypeVar","contents":"rowlist"},{"tag":"TypeVar","contents":"row"},{"tag":"TypeVar","contents":"subrow"}]}],"fundeps":[[["rowlist"],["subrow"]]],"arguments":[["rowlist",null],["row",null],["subrow",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"A class for records where all fields have `CommutativeRing` instances, used\nto implement the `CommutativeRing` instance for records.\n"}],"tag":"SearchResult"}]],["comonad",[{"values":[{"sourceSpan":{"start":[20,1],"name":".spago/control/v6.0.0/src/Control/Comonad.purs","end":[21,32]},"score":29,"packageInfo":{"values":["control"],"tag":"Package"},"name":"Comonad","moduleName":"Control.Comonad","info":{"values":[{"superclasses":[{"constraintClass":[["Control","Extend"],"Extend"],"constraintArgs":[{"tag":"TypeVar","contents":"w"}]}],"fundeps":[],"arguments":[["w",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"`Comonad` extends the `Extend` class with the `extract` function\nwhich extracts a value, discarding the comonadic context.\n\n`Comonad` is the dual of `Monad`, and `extract` is the dual of `pure`.\n\nLaws:\n\n- Left Identity: `extract <<= xs = xs`\n- Right Identity: `extract (f <<= xs) = f xs`\n"}],"tag":"SearchResult"}]],["comonadask",[{"values":[{"sourceSpan":{"start":[14,1],"name":".spago/transformers/v6.0.0/src/Control/Comonad/Env/Class.purs","end":[15,28]},"score":23,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"ComonadAsk","moduleName":"Control.Comonad.Env.Class","info":{"values":[{"superclasses":[{"constraintClass":[["Control","Comonad"],"Comonad"],"constraintArgs":[{"tag":"TypeVar","contents":"w"}]}],"fundeps":[[["w"],["e"]]],"arguments":[["e",null],["w",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `ComonadEnv` type class represents those comonads which support a\nglobal environment that can be provided via the `ask` function.\n\nAn implementation is provided for `EnvT`.\n"}],"tag":"SearchResult"}]],["comonadcofree",[{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/free/v7.0.0/src/Control/Comonad/Cofree/Class.purs","end":[17,43]},"score":2,"packageInfo":{"values":["free"],"tag":"Package"},"name":"ComonadCofree","moduleName":"Control.Comonad.Cofree.Class","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"constraintClass":[["Control","Comonad"],"Comonad"],"constraintArgs":[{"tag":"TypeVar","contents":"w"}]}],"fundeps":[[["w"],["f"]]],"arguments":[["f",null],["w",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Based on <http://hackage.haskell.org/package/free/docs/Control-Comonad-Cofree-Class.html>\n"}],"tag":"SearchResult"}]],["comonadenv",[{"values":[{"sourceSpan":{"start":[32,1],"name":".spago/transformers/v6.0.0/src/Control/Comonad/Env/Class.purs","end":[33,44]},"score":23,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"ComonadEnv","moduleName":"Control.Comonad.Env.Class","info":{"values":[{"superclasses":[{"constraintClass":[["Control","Comonad","Env","Class"],"ComonadAsk"],"constraintArgs":[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"w"}]}],"fundeps":[[["w"],["e"]]],"arguments":[["e",null],["w",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `ComonadEnv` type class extends `ComonadAsk` with a function\n`local f x` that allows the value of the local context to be modified for\nthe duration of the execution of action `x`.\n\nAn implementation is provided for `EnvT`.\n\nLaws:\n\n- `ask (local f x) = f (ask x)`\n- `extract (local _ x) = extract a`\n- `extend g (local f x) = extend (g <<< local f) x`\n"}],"tag":"SearchResult"}]],["comonadstore",[{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/transformers/v6.0.0/src/Control/Comonad/Store/Class.purs","end":[36,34]},"score":23,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"ComonadStore","moduleName":"Control.Comonad.Store.Class","info":{"values":[{"superclasses":[{"constraintClass":[["Control","Comonad"],"Comonad"],"constraintArgs":[{"tag":"TypeVar","contents":"w"}]}],"fundeps":[[["w"],["s"]]],"arguments":[["s",null],["w",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `ComonadStore` type class represents those monads which support local position information via\n`pos` and `peek`.\n\n- `pos` reads the current position.\n- `peek` reads the value at the specified position in the specified context.\n\nAn implementation is provided for `StoreT`.\n\nLaws:\n\n- `pos (extend _ x) = pos x`\n- `peek (pos x) x = extract x`\n\nFor example:\n\n```purescript\nblur :: forall w. (ComonadStore Number w) -> w Number -> w Number\nblur = extend \\r -> (peeks (\\n -> n - 1) r + peeks (\\n -> n + 1) r) / 2)\n```\n"}],"tag":"SearchResult"}]],["comonadtraced",[{"values":[{"sourceSpan":{"start":[29,1],"name":".spago/transformers/v6.0.0/src/Control/Comonad/Traced/Class.purs","end":[30,35]},"score":23,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"ComonadTraced","moduleName":"Control.Comonad.Traced.Class","info":{"values":[{"superclasses":[{"constraintClass":[["Control","Comonad"],"Comonad"],"constraintArgs":[{"tag":"TypeVar","contents":"w"}]}],"fundeps":[[["w"],["t"]]],"arguments":[["t",null],["w",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `ComonadTraced` type class represents those monads which support relative (monoidal)\nposition information via `track`.\n\n- `track` extracts a value at the specified relative position.\n\nAn implementation is provided for `TracedT`.\n\nLaws:\n\n- `track mempty = extract`\n- `(track s =<= track t) x = track (s <> t) x`\n\nFor example:\n\n```purescript\nblur :: forall w. (ComonadTraced (Additive Number) w) -> w Number -> w Number\nblur = extend \\r -> (track (Additive (-1)) r + track (Additive 1) r) / 2\n```\n"}],"tag":"SearchResult"}]],["comonadtrans",[{"values":[{"sourceSpan":{"start":[22,1],"name":".spago/transformers/v6.0.0/src/Control/Comonad/Trans/Class.purs","end":[23,49]},"score":23,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"ComonadTrans","moduleName":"Control.Comonad.Trans.Class","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["f",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `ComonadTrans` type class represents _comonad transformers_.\n\nA comonad transformer is a type constructor of kind `(* -> *) -> * -> *`, which\ntakes a `Comonad` as its first argument, and returns another `Comonad`.\n\nThis allows us to extend a comonad to provide additional context. By iterating this\nprocess, we create comonad transformer _stacks_, which contain all of the contextual information\nrequired for a particular computation.\n\nThe laws state that `lower` is a `Comonad` morphism.\n\nLaws:\n\n- `extract (lower a) = extract a`\n- `lower (extend w (f <<< lower)) = extend (lower w) f`\n"}],"tag":"SearchResult"}]],["compare",[{"values":[{"sourceSpan":{"start":[49,3],"name":".spago/prelude/v6.0.1/src/Data/Ord.purs","end":[49,32]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"compare","moduleName":"Data.Ord","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","Ord"],"Ord"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Compare","moduleName":"Prim.Int","info":{"values":[{"superclasses":[],"fundeps":[[["left","right"],["ordering"]]],"arguments":[["left",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}],["right",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}],["ordering",{"tag":"TypeConstructor","contents":[["Prim","Ordering"],"Ordering"]}]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Compiler solved type class for comparing two type-level `Int`s.\nProduces an `Ordering`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Compare","moduleName":"Prim.Symbol","info":{"values":[{"superclasses":[],"fundeps":[[["left","right"],["ordering"]]],"arguments":[["left",{"tag":"TypeConstructor","contents":[["Prim"],"Symbol"]}],["right",{"tag":"TypeConstructor","contents":[["Prim"],"Symbol"]}],["ordering",{"tag":"TypeConstructor","contents":[["Prim","Ordering"],"Ordering"]}]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Compiler solved type class for comparing two `Symbol`s.\nProduces an `Ordering`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[17,1],"name":".spago/typelevel-prelude/v7.0.0/src/Type/Data/Symbol.purs","end":[17,72]},"score":3,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"compare","moduleName":"Type.Data.Symbol","info":{"values":[{"type":{"tag":"ForAll","contents":["l",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["o",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Symbol"],"Compare"],"constraintArgs":[{"tag":"TypeVar","contents":"l"},{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","contents":"l"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","contents":"o"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["compare1",[{"values":[{"sourceSpan":{"start":[232,3],"name":".spago/prelude/v6.0.1/src/Data/Ord.purs","end":[232,56]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"compare1","moduleName":"Data.Ord","info":{"values":[{"typeClassArguments":[["f",null]],"typeClass":[["Data","Ord"],"Ord1"],"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord1"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}]}]}]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["comparedocumentpositionbits",[{"values":[{"sourceSpan":{"start":[161,1],"name":".spago/web-dom/v6.0.0/src/Web/DOM/Node.purs","end":[161,73]},"score":4,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"compareDocumentPositionBits","moduleName":"Web.DOM.Node","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Node"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Node"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Compares the position of two nodes in the document.\n"}],"tag":"SearchResult"}]],["comparerecord",[{"values":[{"sourceSpan":{"start":[239,3],"name":".spago/prelude/v6.0.1/src/Data/Ord.purs","end":[239,73]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"compareRecord","moduleName":"Data.Ord","info":{"values":[{"typeClassArguments":[["rowlist",null],["row",null]],"typeClass":[["Data","Ord"],"OrdRecord"],"type":{"tag":"ForAll","contents":["rowlist",{"tag":"ForAll","contents":["row",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"OrdRecord"],"constraintArgs":[{"tag":"TypeVar","contents":"rowlist"},{"tag":"TypeVar","contents":"row"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","contents":"rowlist"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"row"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"row"}]}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}]}]}]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["compareviacslbytes",[{"values":[{"sourceSpan":{"start":[47,1],"name":".spago/cardano-types/v1.0.1/src/Cardano/Types/Internal/Helpers.purs","end":[55,14]},"score":0,"packageInfo":{"values":["cardano-types"],"tag":"Package"},"name":"compareViaCslBytes","moduleName":"Cardano.Types.Internal.Helpers","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Cardano","Serialization","Lib","Internal"],"IsCsl"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Cardano","Serialization","Lib","Internal"],"IsBytes"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Cardano","Serialization","Lib","Internal"],"IsCsl"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Cardano","Serialization","Lib","Internal"],"IsBytes"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[354,1],"name":"src/Internal/Helpers.purs","end":[362,14]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"compareViaCslBytes","moduleName":"Ctl.Internal.Helpers","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Cardano","Serialization","Lib","Internal"],"IsCsl"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Cardano","Serialization","Lib","Internal"],"IsBytes"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Cardano","Serialization","Lib","Internal"],"IsCsl"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Cardano","Serialization","Lib","Internal"],"IsBytes"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["comparing",[{"values":[{"sourceSpan":{"start":[165,1],"name":".spago/prelude/v6.0.1/src/Data/Ord.purs","end":[165,67]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"comparing","moduleName":"Data.Ord","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}]}}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Compares two values by mapping them to a type with an `Ord` instance.\n"}],"tag":"SearchResult"}]],["comparison",[{"values":[{"sourceSpan":{"start":[10,1],"name":".spago/contravariant/v6.0.0/src/Data/Comparison.purs","end":[10,55]},"score":3,"packageInfo":{"values":["contravariant"],"tag":"Package"},"name":"Comparison","moduleName":"Data.Comparison","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"An adaptor allowing `>$<` to map over the inputs of a comparison function.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[10,22],"name":".spago/contravariant/v6.0.0/src/Data/Comparison.purs","end":[10,55]},"score":3,"packageInfo":{"values":["contravariant"],"tag":"Package"},"name":"Comparison","moduleName":"Data.Comparison","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Ordering"],"Ordering"]}]}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["comparisonequivalence",[{"values":[{"sourceSpan":{"start":[30,1],"name":".spago/contravariant/v6.0.0/src/Data/Equivalence.purs","end":[30,65]},"score":3,"packageInfo":{"values":["contravariant"],"tag":"Package"},"name":"comparisonEquivalence","moduleName":"Data.Equivalence","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Comparison"],"Comparison"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Equivalence"],"Equivalence"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"An equivalence relation for any `Comparison`.\n"}],"tag":"SearchResult"}]],["compatmode",[{"values":[{"sourceSpan":{"start":[88,1],"name":".spago/web-dom/v6.0.0/src/Web/DOM/Document.purs","end":[88,55]},"score":4,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"compatMode","moduleName":"Web.DOM.Document","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Document"],"Document"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["complement",[{"values":[{"sourceSpan":{"start":[37,1],"name":".spago/integers/v6.0.0/src/Data/Int/Bits.purs","end":[37,40]},"score":21,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"complement","moduleName":"Data.Int.Bits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Bitwise NOT.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[306,1],"name":".spago/uint/v7.0.0/src/Data/UInt.purs","end":[306,42]},"score":0,"packageInfo":{"values":["uint"],"tag":"Package"},"name":"complement","moduleName":"Data.UInt","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]},{"tag":"TypeConstructor","contents":[["Data","UInt"],"UInt"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Bitwise NOT.\n\n    > complement (fromInt 0xFF...)\n    0u\n"}],"tag":"SearchResult"}]],["complete",[{"values":[{"sourceSpan":{"start":[10,3],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLDocument/ReadyState.purs","end":[10,13]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"Complete","moduleName":"Web.HTML.HTMLDocument.ReadyState","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[179,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLImageElement.purs","end":[179,62]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"complete","moduleName":"Web.HTML.HTMLImageElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLImageElement"],"HTMLImageElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["completed",[{"values":[{"sourceSpan":{"start":[63,3],"name":".spago/fork/v6.0.0/src/Control/Monad/Fork/Class.purs","end":[63,14]},"score":1,"packageInfo":{"values":["fork"],"tag":"Package"},"name":"Completed","moduleName":"Control.Monad.Fork.Class","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"a"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["completer",[{"values":[{"sourceSpan":{"start":[58,1],"name":".spago/node-readline/v7.0.0/src/Node/ReadLine.purs","end":[63,8]},"score":0,"packageInfo":{"values":["node-readline"],"tag":"Package"},"name":"Completer","moduleName":"Node.ReadLine","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["completions",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"RCons","contents":["matched",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"REmpty","contents":{}}]}]}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A function which performs tab completion.\n\nThis function takes the partial command as input, and returns a collection of\ncompletions, as well as the matched portion of the input string.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[45,1],"name":".spago/node-readline/v7.0.0/src/Node/ReadLine.purs","end":[45,47]},"score":0,"packageInfo":{"values":["node-readline"],"tag":"Package"},"name":"completer","moduleName":"Node.ReadLine","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"tag":"TypeConstructor","contents":[["Node","ReadLine"],"InterfaceOptions"]}]},{"tag":"TypeConstructor","contents":[["Node","ReadLine"],"Completer"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[264,1],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Builder.purs","end":[264,64]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"completer","moduleName":"Options.Applicative.Builder","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Options","Applicative","Builder","Internal"],"HasCompleter"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Completer"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Add a completer to an argument.\n\nA completer is a function `String -> Effect String` which, given a partial\nargument, returns all possible completions for that argument.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[415,1],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Types.purs","end":[415,64]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"Completer","moduleName":"Options.Applicative.Types","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"optparse-applicative supplies a rich completion system for bash,\nzsh, and fish shells.\n\n'Completer' functions are used for option and argument to complete\ntheir values.\n\nUse the 'completer' builder to use these.\nThe 'action' and 'completeWith' builders are also provided for\nconvenience, to use 'bashCompleter' and 'listCompleter' as a 'Mod'.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[415,19],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Types.purs","end":[415,64]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"Completer","moduleName":"Options.Applicative.Types","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["completewith",[{"values":[{"sourceSpan":{"start":[250,1],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Builder.purs","end":[250,70]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"completeWith","moduleName":"Options.Applicative.Builder","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Options","Applicative","Builder","Internal"],"HasCompleter"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Add a list of possible completion values.\n"}],"tag":"SearchResult"}]],["completion",[{"values":[{"sourceSpan":{"start":[141,1],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Internal.purs","end":[142,70]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"Completion","moduleName":"Options.Applicative.Internal","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["completioninvoked",[{"values":[{"sourceSpan":{"start":[451,3],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Types.purs","end":[451,22]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"CompletionInvoked","moduleName":"Options.Applicative.Types","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"CompletionResult"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["completionresult",[{"values":[{"sourceSpan":{"start":[428,1],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Types.purs","end":[429,48]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"CompletionResult","moduleName":"Options.Applicative.Types","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[428,26],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Types.purs","end":[429,48]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"CompletionResult","moduleName":"Options.Applicative.Types","info":{"values":[{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["execCompletion",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"tag":"REmpty","contents":{}}]}]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["compose",[{"values":[{"sourceSpan":{"start":[14,3],"name":".spago/prelude/v6.0.1/src/Control/Semigroupoid.purs","end":[14,51]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"compose","moduleName":"Control.Semigroupoid","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Control","Semigroupoid"],"Semigroupoid"],"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Semigroupoid"],"Semigroupoid"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"d"}]}]}]}]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[15,1],"name":".spago/functors/v5.0.0/src/Data/Functor/Compose.purs","end":[15,42]},"score":6,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Compose","moduleName":"Data.Functor.Compose","info":{"values":[{"typeArguments":[["f",null],["g",null],["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"`Compose f g` is the composition of the two functors `f` and `g`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[15,23],"name":".spago/functors/v5.0.0/src/Data/Functor/Compose.purs","end":[15,42]},"score":6,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Compose","moduleName":"Data.Functor.Compose","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"a"}]}}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["composecokleisli",[{"values":[{"sourceSpan":{"start":[44,1],"name":".spago/control/v6.0.0/src/Control/Extend.purs","end":[44,85]},"score":29,"packageInfo":{"values":["control"],"tag":"Package"},"name":"composeCoKleisli","moduleName":"Control.Extend","info":{"values":[{"type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["c",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Extend"],"Extend"],"constraintArgs":[{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"c"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"c"}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Forwards co-Kleisli composition.\n"}],"tag":"SearchResult"}]],["composecokleisliflipped",[{"values":[{"sourceSpan":{"start":[50,1],"name":".spago/control/v6.0.0/src/Control/Extend.purs","end":[50,92]},"score":29,"packageInfo":{"values":["control"],"tag":"Package"},"name":"composeCoKleisliFlipped","moduleName":"Control.Extend","info":{"values":[{"type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["c",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Extend"],"Extend"],"constraintArgs":[{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"c"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"c"}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Backwards co-Kleisli composition.\n"}],"tag":"SearchResult"}]],["composeflipped",[{"values":[{"sourceSpan":{"start":[22,1],"name":".spago/prelude/v6.0.1/src/Control/Semigroupoid.purs","end":[22,76]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"composeFlipped","moduleName":"Control.Semigroupoid","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["d",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Semigroupoid"],"Semigroupoid"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"d"}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Forwards composition, or `compose` with its arguments reversed.\n"}],"tag":"SearchResult"}]],["composekleisli",[{"values":[{"sourceSpan":{"start":[129,1],"name":".spago/prelude/v6.0.1/src/Control/Bind.purs","end":[129,81]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"composeKleisli","moduleName":"Control.Bind","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Bind"],"Bind"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"c"}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Forwards Kleisli composition.\n\nFor example:\n\n```purescript\nimport Data.Array (head, tail)\n\nthird = tail >=> tail >=> head\n```\n"}],"tag":"SearchResult"}]],["composekleisliflipped",[{"values":[{"sourceSpan":{"start":[135,1],"name":".spago/prelude/v6.0.1/src/Control/Bind.purs","end":[135,88]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"composeKleisliFlipped","moduleName":"Control.Bind","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Bind"],"Bind"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"c"}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Backwards Kleisli composition.\n"}],"tag":"SearchResult"}]],["composekleislileft",[{"values":[{"sourceSpan":{"start":[101,1],"name":".spago/mmorph/v7.0.0/src/Control/Monad/Morph.purs","end":[107,16]},"score":1,"packageInfo":{"values":["mmorph"],"tag":"Package"},"name":"composeKleisliLeft","moduleName":"Control.Monad.Morph","info":{"values":[{"type":{"tag":"ForAll","contents":["m1",{"tag":"ForAll","contents":["m2",{"tag":"ForAll","contents":["m3",{"tag":"ForAll","contents":["t",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Morph"],"MMonad"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m3"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeVar","contents":"m2"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"m3"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeVar","contents":"m1"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"m2"}]}]}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeVar","contents":"m1"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"m3"}]}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["composekleisliright",[{"values":[{"sourceSpan":{"start":[92,1],"name":".spago/mmorph/v7.0.0/src/Control/Monad/Morph.purs","end":[98,16]},"score":1,"packageInfo":{"values":["mmorph"],"tag":"Package"},"name":"composeKleisliRight","moduleName":"Control.Monad.Morph","info":{"values":[{"type":{"tag":"ForAll","contents":["m1",{"tag":"ForAll","contents":["m2",{"tag":"ForAll","contents":["m3",{"tag":"ForAll","contents":["t",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Morph"],"MMonad"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m3"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeVar","contents":"m1"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"m2"}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeVar","contents":"m2"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"m3"}]}]}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeVar","contents":"m1"},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"m3"}]}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["composeloopbodies",[{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/pipes/v8.0.0/src/Pipes.purs","end":[32,33]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"composeLoopBodies","moduleName":"Pipes","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["a'",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["b'",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["c'",{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["x'",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"x'"}]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a'"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"x'"}]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"b'"}]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"x'"}]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a'"}]}]}}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["composeloopbodies'",[{"values":[{"sourceSpan":{"start":[36,1],"name":".spago/pipes/v8.0.0/src/Pipes.purs","end":[41,33]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"composeLoopBodies'","moduleName":"Pipes","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["a'",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["b'",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["c'",{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["x'",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"x'"}]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"b'"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"x'"}]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a'"}]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"x'"}]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a'"}]}]}}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["composepipes",[{"values":[{"sourceSpan":{"start":[69,1],"name":".spago/pipes/v8.0.0/src/Pipes.purs","end":[74,29]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"composePipes","moduleName":"Pipes","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["a'",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["c'",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"a'"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"a'"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["composepipes'",[{"values":[{"sourceSpan":{"start":[78,1],"name":".spago/pipes/v8.0.0/src/Pipes.purs","end":[83,29]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"composePipes'","moduleName":"Pipes","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["a'",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["c'",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"a'"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"a'"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["composepull",[{"values":[{"sourceSpan":{"start":[183,1],"name":".spago/pipes/v8.0.0/src/Pipes/Core.purs","end":[188,36]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"composePull","moduleName":"Pipes.Core","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["a'",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["b'",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["c'",{"tag":"ForAll","contents":["_c'",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"a'"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"_c'"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"_c'"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"a'"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]}}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["composepull'",[{"values":[{"sourceSpan":{"start":[191,1],"name":".spago/pipes/v8.0.0/src/Pipes/Core.purs","end":[196,34]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"composePull'","moduleName":"Pipes.Core","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["a'",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["b'",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["c'",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"a'"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"a'"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["composepush",[{"values":[{"sourceSpan":{"start":[208,1],"name":".spago/pipes/v8.0.0/src/Pipes/Core.purs","end":[213,35]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"composePush","moduleName":"Pipes.Core","info":{"values":[{"type":{"tag":"ForAll","contents":["_a",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["a'",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["b'",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["c'",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"_a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"a'"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"_a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"a'"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]}}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["composepush'",[{"values":[{"sourceSpan":{"start":[216,1],"name":".spago/pipes/v8.0.0/src/Pipes/Core.purs","end":[221,33]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"composePush'","moduleName":"Pipes.Core","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["a'",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["b'",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["c'",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"a'"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"a'"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["composerequest",[{"values":[{"sourceSpan":{"start":[155,1],"name":".spago/pipes/v8.0.0/src/Pipes/Core.purs","end":[160,32]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"composeRequest","moduleName":"Pipes.Core","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["a'",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["b'",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["y",{"tag":"ForAll","contents":["y'",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"a'"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"y'"}]},{"tag":"TypeVar","contents":"y"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"y'"}]},{"tag":"TypeVar","contents":"y"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"a'"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"y'"}]},{"tag":"TypeVar","contents":"y"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"c"}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["composerequest'",[{"values":[{"sourceSpan":{"start":[170,1],"name":".spago/pipes/v8.0.0/src/Pipes/Core.purs","end":[175,33]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"composeRequest'","moduleName":"Pipes.Core","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["a'",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["b'",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["c'",{"tag":"ForAll","contents":["y",{"tag":"ForAll","contents":["y'",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"a'"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"y'"}]},{"tag":"TypeVar","contents":"y"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"y'"}]},{"tag":"TypeVar","contents":"y"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"c"}]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"a'"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"y'"}]},{"tag":"TypeVar","contents":"y"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"c"}]}]}}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["composeresponse",[{"values":[{"sourceSpan":{"start":[129,1],"name":".spago/pipes/v8.0.0/src/Pipes/Core.purs","end":[134,34]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"composeResponse","moduleName":"Pipes.Core","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["x'",{"tag":"ForAll","contents":["a'",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["b'",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["c'",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"x'"}]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a'"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"x'"}]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"b'"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"x'"}]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a'"}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["composeresponse'",[{"values":[{"sourceSpan":{"start":[143,1],"name":".spago/pipes/v8.0.0/src/Pipes/Core.purs","end":[148,35]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"composeResponse'","moduleName":"Pipes.Core","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["x'",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["a'",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["b'",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["c'",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"x'"}]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a'"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"x'"}]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"b'"}]}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"x'"}]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeVar","contents":"c'"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a'"}]}]}}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["computationtype",[{"values":[{"sourceSpan":{"start":[112,1],"name":".spago/spec/v7.2.0/src/Test/Spec.purs","end":[112,95]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"ComputationType","moduleName":"Test.Spec","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["concat",[{"values":[{"sourceSpan":{"start":[316,1],"name":".spago/arrays/v7.1.0/src/Data/Array/NonEmpty.purs","end":[316,71]},"score":20,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"concat","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[638,1],"name":".spago/arrays/v7.1.0/src/Data/Array.purs","end":[638,62]},"score":20,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"concat","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Flatten an array of arrays, creating a new array.\n\n```purescript\nconcat [[1, 2, 3], [], [4, 5, 6]] = [1, 2, 3, 4, 5, 6]\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[400,1],"name":".spago/lists/v7.0.0/src/Data/List/Lazy.purs","end":[400,44]},"score":19,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"concat","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Flatten a list of lists.\n\nRunning time: `O(n)`, where `n` is the total number of elements.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[223,1],"name":".spago/lists/v7.0.0/src/Data/List/NonEmpty.purs","end":[223,68]},"score":19,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"concat","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[374,1],"name":".spago/lists/v7.0.0/src/Data/List.purs","end":[374,44]},"score":19,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"concat","moduleName":"Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Flatten a list of lists.\n\nRunning time: `O(n)`, where `n` is the total number of elements.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[104,3],"name":".spago/node-buffer/v8.0.0/src/Node/Buffer/Class.purs","end":[104,31]},"score":7,"packageInfo":{"values":["node-buffer"],"tag":"Package"},"name":"concat","moduleName":"Node.Buffer.Class","info":{"values":[{"typeClassArguments":[["buf",null],["m",null]],"typeClass":[["Node","Buffer","Class"],"MutableBuffer"],"type":{"tag":"ForAll","contents":["buf",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Node","Buffer","Class"],"MutableBuffer"],"constraintArgs":[{"tag":"TypeVar","contents":"buf"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"buf"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"buf"}]}]}]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":"Concatenates a list of buffers.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[99,1],"name":".spago/node-buffer/v8.0.0/src/Node/Buffer/Immutable.purs","end":[99,66]},"score":7,"packageInfo":{"values":["node-buffer"],"tag":"Package"},"name":"concat","moduleName":"Node.Buffer.Immutable","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Node","Buffer","Immutable"],"ImmutableBuffer"]}]}]},{"tag":"TypeConstructor","contents":[["Node","Buffer","Immutable"],"ImmutableBuffer"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Concatenates a list of buffers.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[102,1],"name":".spago/node-buffer/v8.0.0/src/Node/Buffer/Internal.purs","end":[102,43]},"score":7,"packageInfo":{"values":["node-buffer"],"tag":"Package"},"name":"concat","moduleName":"Node.Buffer.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["buf",{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"buf"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"buf"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[15,1],"name":".spago/node-path/v5.0.0/src/Node/Path.purs","end":[15,52]},"score":2,"packageInfo":{"values":["node-path"],"tag":"Package"},"name":"concat","moduleName":"Node.Path","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]}]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Concatenates multiple path segments together and normalizes the resulting path.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[139,1],"name":".spago/pipes/v8.0.0/src/Pipes/Prelude.purs","end":[139,68]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"concat","moduleName":"Pipes.Prelude","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Core"],"Pipe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Flatten all 'Foldable' elements flowing downstream\n"}],"tag":"SearchResult"}]],["concat'",[{"values":[{"sourceSpan":{"start":[108,3],"name":".spago/node-buffer/v8.0.0/src/Node/Buffer/Class.purs","end":[108,39]},"score":7,"packageInfo":{"values":["node-buffer"],"tag":"Package"},"name":"concat'","moduleName":"Node.Buffer.Class","info":{"values":[{"typeClassArguments":[["buf",null],["m",null]],"typeClass":[["Node","Buffer","Class"],"MutableBuffer"],"type":{"tag":"ForAll","contents":["buf",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Node","Buffer","Class"],"MutableBuffer"],"constraintArgs":[{"tag":"TypeVar","contents":"buf"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"buf"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"buf"}]}]}]}]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":"Concatenates a list of buffers, combining them into a new buffer of the\nspecified length.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[103,1],"name":".spago/node-buffer/v8.0.0/src/Node/Buffer/Immutable.purs","end":[103,59]},"score":7,"packageInfo":{"values":["node-buffer"],"tag":"Package"},"name":"concat'","moduleName":"Node.Buffer.Immutable","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Node","Buffer","Immutable"],"ImmutableBuffer"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Node","Buffer","Immutable"],"ImmutableBuffer"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Concatenates a list of buffers, combining them into a new buffer of the\nspecified length.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[105,1],"name":".spago/node-buffer/v8.0.0/src/Node/Buffer/Internal.purs","end":[105,62]},"score":7,"packageInfo":{"values":["node-buffer"],"tag":"Package"},"name":"concat'","moduleName":"Node.Buffer.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["buf",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"buf"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"buf"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["concatmap",[{"values":[{"sourceSpan":{"start":[319,1],"name":".spago/arrays/v7.1.0/src/Data/Array/NonEmpty.purs","end":[319,86]},"score":20,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"concatMap","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[648,1],"name":".spago/arrays/v7.1.0/src/Data/Array.purs","end":[648,62]},"score":20,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"concatMap","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Apply a function to each element in an array, and flatten the results\ninto a single, new array.\n\n```purescript\nconcatMap (split $ Pattern \" \") [\"Hello World\", \"other thing\"]\n   = [\"Hello\", \"World\", \"other\", \"thing\"]\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[83,1],"name":".spago/lists/v7.0.0/src/Data/List/Lazy/NonEmpty.purs","end":[83,83]},"score":19,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"concatMap","moduleName":"Data.List.Lazy.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[407,1],"name":".spago/lists/v7.0.0/src/Data/List/Lazy.purs","end":[407,59]},"score":19,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"concatMap","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Apply a function to each element in a list, and flatten the results\ninto a single, new list.\n\nRunning time: `O(n)`, where `n` is the total number of elements.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[226,1],"name":".spago/lists/v7.0.0/src/Data/List/NonEmpty.purs","end":[226,83]},"score":19,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"concatMap","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[381,1],"name":".spago/lists/v7.0.0/src/Data/List.purs","end":[381,59]},"score":19,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"concatMap","moduleName":"Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Apply a function to each element in a list, and flatten the results\ninto a single, new list.\n\nRunning time: `O(n)`, where `n` is the total number of elements.\n"}],"tag":"SearchResult"}]],["concatpaths",[{"values":[{"sourceSpan":{"start":[335,1],"name":"src/Internal/Helpers.purs","end":[335,42]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"concatPaths","moduleName":"Ctl.Internal.Helpers","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Concat two strings with \"/\" in the middle, but stripping multiple slashes.\n"}],"tag":"SearchResult"}]],["config",[{"values":[{"sourceSpan":{"start":[17,1],"name":"test/Plutip/Common.purs","end":[17,23]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"config","moduleName":"Test.Ctl.Plutip.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Ctl","Internal","Plutip","Types"],"PlutipConfig"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[52,1],"name":".spago/spec/v7.2.0/src/Test/Spec/Runner.purs","end":[56,4]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"Config","moduleName":"Test.Spec.Runner","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["slow",{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]},{"tag":"RCons","contents":["timeout",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]}]},{"tag":"RCons","contents":["exit",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"REmpty","contents":{}}]}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["configs",[{"values":[{"sourceSpan":{"start":[32,1],"name":"templates/ctl-scaffold/test/E2E.purs","end":[32,66]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"configs","moduleName":"Scaffold.Test.E2E.Serve","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Test","E2E","Route"],"E2EConfigName"]}]},{"tag":"ParensInType","contents":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Tuple","Nested"],"/\\"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"ContractParams"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Wallet","Cip30Mock"],"WalletMock"]}]}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["configurationerror",[{"values":[{"sourceSpan":{"start":[30,3],"name":".spago/exitcodes/v4.0.0/src/ExitCodes.purs","end":[30,23]},"score":1,"packageInfo":{"values":["exitcodes"],"tag":"Package"},"name":"ConfigurationError","moduleName":"ExitCodes","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["confirm",[{"values":[{"sourceSpan":{"start":[77,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/Window.purs","end":[77,61]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"confirm","moduleName":"Web.HTML.Window","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","Window"],"Window"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["confirmaccess",[{"values":[{"sourceSpan":{"start":[30,3],"name":"src/Internal/Test/E2E/Feedback.purs","end":[30,18]},"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ConfirmAccess","moduleName":"Ctl.Internal.Test.E2E.Feedback","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["congruent",[{"values":[{"sourceSpan":{"start":[49,1],"name":".spago/properties/v0.2.0/src/Control/Algebra/Properties.purs","end":[49,50]},"score":1,"packageInfo":{"values":["properties"],"tag":"Package"},"name":"congruent","moduleName":"Control.Algebra.Properties","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["conj",[{"values":[{"sourceSpan":{"start":[56,3],"name":".spago/prelude/v6.0.1/src/Data/HeytingAlgebra.purs","end":[56,22]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"conj","moduleName":"Data.HeytingAlgebra","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[15,1],"name":".spago/prelude/v6.0.1/src/Data/Monoid/Conj.purs","end":[15,24]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Conj","moduleName":"Data.Monoid.Conj","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Monoid and semigroup for conjunction.\n\n``` purescript\nConj x <> Conj y == Conj (x && y)\n(mempty :: Conj _) == Conj tt\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[15,16],"name":".spago/prelude/v6.0.1/src/Data/Monoid/Conj.purs","end":[15,24]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Conj","moduleName":"Data.Monoid.Conj","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"a"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/quickcheck-combinators/v0.1.3/src/Test/QuickCheck/Combinators.purs","end":[16,35]},"score":0,"packageInfo":{"values":["quickcheck-combinators"],"tag":"Package"},"name":"conj","moduleName":"Test.QuickCheck.Combinators","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Combine two results with \"And\" logic, and with `\", and \"` as the failure message separator\n"}],"tag":"SearchResult"}]],["conj'",[{"values":[{"sourceSpan":{"start":[20,1],"name":".spago/quickcheck-combinators/v0.1.3/src/Test/QuickCheck/Combinators.purs","end":[20,46]},"score":0,"packageInfo":{"values":["quickcheck-combinators"],"tag":"Package"},"name":"conj'","moduleName":"Test.QuickCheck.Combinators","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Combine two results with \"And\" logic, and with a failure message separator\n"}],"tag":"SearchResult"}]],["conjmodifying",[{"values":[{"sourceSpan":{"start":[137,1],"name":".spago/profunctor-lenses/v8.0.0/src/Data/Lens/Setter.purs","end":[137,96]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"conjModifying","moduleName":"Data.Lens.Setter","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","State","Class"],"MonadState"],"constraintArgs":[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Setter'"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["conjover",[{"values":[{"sourceSpan":{"start":[103,1],"name":".spago/profunctor-lenses/v8.0.0/src/Data/Lens/Setter.purs","end":[103,76]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"conjOver","moduleName":"Data.Lens.Setter","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Setter"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["conjrecord",[{"values":[{"sourceSpan":{"start":[115,3],"name":".spago/prelude/v6.0.1/src/Data/HeytingAlgebra.purs","end":[115,75]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"conjRecord","moduleName":"Data.HeytingAlgebra","info":{"values":[{"typeClassArguments":[["rowlist",null],["row",null],["subrow",null]],"typeClass":[["Data","HeytingAlgebra"],"HeytingAlgebraRecord"],"type":{"tag":"ForAll","contents":["rowlist",{"tag":"ForAll","contents":["row",{"tag":"ForAll","contents":["subrow",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebraRecord"],"constraintArgs":[{"tag":"TypeVar","contents":"rowlist"},{"tag":"TypeVar","contents":"row"},{"tag":"TypeVar","contents":"subrow"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","contents":"rowlist"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"row"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"row"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"subrow"}]}]}]}]}]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["connect",[{"values":[{"sourceSpan":{"start":[26,3],"name":".spago/http-methods/v6.0.0/src/Data/HTTP/Method.purs","end":[26,12]},"score":2,"packageInfo":{"values":["http-methods"],"tag":"Package"},"name":"CONNECT","moduleName":"Data.HTTP.Method","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[120,1],"name":".spago/node-net/v4.0.0/src/Node/Net/Socket.purs","end":[120,74]},"score":1,"packageInfo":{"values":["node-net"],"tag":"Package"},"name":"connect","moduleName":"Node.Net.Socket","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Options"],"Options"]},{"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"ConnectOptions"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a custom ICP or TCP connection on the `Socket`.\nNormally, `createConnection` should be used to create the socket.\n"}],"tag":"SearchResult"}]],["connected",[{"values":[{"sourceSpan":{"start":[125,1],"name":".spago/node-child-process/v9.0.0/src/Node/ChildProcess.purs","end":[125,44]},"score":0,"packageInfo":{"values":["node-child-process"],"tag":"Package"},"name":"connected","moduleName":"Node.ChildProcess","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","ChildProcess"],"ChildProcess"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Indicates whether it is still possible to send and receive\nmessages from the child process.\n"}],"tag":"SearchResult"}]],["connectfamily",[{"values":[{"sourceSpan":{"start":[126,1],"name":".spago/node-net/v4.0.0/src/Node/Net/Socket.purs","end":[126,43]},"score":1,"packageInfo":{"values":["node-net"],"tag":"Package"},"name":"connectFamily","moduleName":"Node.Net.Socket","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"ConnectOptions"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Version of IP stack, either `4` or `6`.\nDefaults to `4`.\n"}],"tag":"SearchResult"}]],["connecthints",[{"values":[{"sourceSpan":{"start":[130,1],"name":".spago/node-net/v4.0.0/src/Node/Net/Socket.purs","end":[130,42]},"score":1,"packageInfo":{"values":["node-net"],"tag":"Package"},"name":"connectHints","moduleName":"Node.Net.Socket","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"ConnectOptions"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"DNS lookup hints.\n"}],"tag":"SearchResult"}]],["connecthost",[{"values":[{"sourceSpan":{"start":[137,1],"name":".spago/node-net/v4.0.0/src/Node/Net/Socket.purs","end":[137,44]},"score":1,"packageInfo":{"values":["node-net"],"tag":"Package"},"name":"connectHost","moduleName":"Node.Net.Socket","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"ConnectOptions"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The host to configure TCP `Socket`s.\n\nDetermines the host the `Socket` will attempt to connect to.\nDefaults to `localhost`.\n"}],"tag":"SearchResult"}]],["connecticp",[{"values":[{"sourceSpan":{"start":[142,1],"name":".spago/node-net/v4.0.0/src/Node/Net/Socket.purs","end":[142,61]},"score":1,"packageInfo":{"values":["node-net"],"tag":"Package"},"name":"connectICP","moduleName":"Node.Net.Socket","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a custom ICP connection on the `Socket`.\nNormally, `createConnectionICP` should be used to create the socket.\n"}],"tag":"SearchResult"}]],["connecting",[{"values":[{"sourceSpan":{"start":[181,1],"name":".spago/node-net/v4.0.0/src/Node/Net/Socket.purs","end":[181,39]},"score":1,"packageInfo":{"values":["node-net"],"tag":"Package"},"name":"connecting","moduleName":"Node.Net.Socket","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns `true` if `connect` was called, but the `'connect'` event hasn't\nbeen emitted yet.\nReturns `false` any other time.\n"}],"tag":"SearchResult"}]],["connectlocaladdress",[{"values":[{"sourceSpan":{"start":[147,1],"name":".spago/node-net/v4.0.0/src/Node/Net/Socket.purs","end":[147,52]},"score":1,"packageInfo":{"values":["node-net"],"tag":"Package"},"name":"connectLocalAddress","moduleName":"Node.Net.Socket","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"ConnectOptions"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Address the `Socket` should connect from.\n"}],"tag":"SearchResult"}]],["connectlocalport",[{"values":[{"sourceSpan":{"start":[151,1],"name":".spago/node-net/v4.0.0/src/Node/Net/Socket.purs","end":[151,46]},"score":1,"packageInfo":{"values":["node-net"],"tag":"Package"},"name":"connectLocalPort","moduleName":"Node.Net.Socket","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"ConnectOptions"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Port the `Socket` should connect from.\n"}],"tag":"SearchResult"}]],["connectoptions",[{"values":[{"sourceSpan":{"start":[80,1],"name":".spago/node-net/v4.0.0/src/Node/Net/Socket.purs","end":[80,20]},"score":1,"packageInfo":{"values":["node-net"],"tag":"Package"},"name":"ConnectOptions","moduleName":"Node.Net.Socket","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Options to configure the connecting side of a `Socket`.\nThese options decide whether the `Socket` is ICP or TCP.\n\nOne of `path` or `port` must be set.\nSetting `path` will make the `Socket` ICP.\nSetting `port` will make the `Socket` TCP.\n"}],"tag":"SearchResult"}]],["connectorpunctuation",[{"values":[{"sourceSpan":{"start":[122,3],"name":".spago/unicode/v6.0.0/src/Data/CodePoint/Unicode.purs","end":[122,25]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"ConnectorPunctuation","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["connectpath",[{"values":[{"sourceSpan":{"start":[157,1],"name":".spago/node-net/v4.0.0/src/Node/Net/Socket.purs","end":[157,44]},"score":1,"packageInfo":{"values":["node-net"],"tag":"Package"},"name":"connectPath","moduleName":"Node.Net.Socket","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"ConnectOptions"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The path to configure ICP `Socket`s.\n\nDetermines the ICP endpoint the `Socket` will attempt to connect to.\n"}],"tag":"SearchResult"}]],["connectport",[{"values":[{"sourceSpan":{"start":[163,1],"name":".spago/node-net/v4.0.0/src/Node/Net/Socket.purs","end":[163,41]},"score":1,"packageInfo":{"values":["node-net"],"tag":"Package"},"name":"connectPort","moduleName":"Node.Net.Socket","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"ConnectOptions"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The port to configure TCP `Server`s.\n\nDetermines the TCP endpoint the `Server` will attempt to listen on.\n"}],"tag":"SearchResult"}]],["connecttcp",[{"values":[{"sourceSpan":{"start":[168,1],"name":".spago/node-net/v4.0.0/src/Node/Net/Socket.purs","end":[168,68]},"score":1,"packageInfo":{"values":["node-net"],"tag":"Package"},"name":"connectTCP","moduleName":"Node.Net.Socket","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a custom TCP connection on the `Socket`.\nNormally, `createConnectionTCP` should be used to create the socket.\n"}],"tag":"SearchResult"}]],["connecttoeternl",[{"values":[{"sourceSpan":{"start":[111,3],"name":"src/Internal/Wallet/Spec.purs","end":[111,20]},"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ConnectToEternl","moduleName":"Ctl.Internal.Wallet.Spec","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["connecttoflint",[{"values":[{"sourceSpan":{"start":[110,3],"name":"src/Internal/Wallet/Spec.purs","end":[110,19]},"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ConnectToFlint","moduleName":"Ctl.Internal.Wallet.Spec","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["connecttogenericcip30",[{"values":[{"sourceSpan":{"start":[115,3],"name":"src/Internal/Wallet/Spec.purs","end":[115,26]},"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ConnectToGenericCip30","moduleName":"Ctl.Internal.Wallet.Spec","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["connecttogero",[{"values":[{"sourceSpan":{"start":[109,3],"name":"src/Internal/Wallet/Spec.purs","end":[109,18]},"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ConnectToGero","moduleName":"Ctl.Internal.Wallet.Spec","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["connecttolace",[{"values":[{"sourceSpan":{"start":[114,3],"name":"src/Internal/Wallet/Spec.purs","end":[114,18]},"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ConnectToLace","moduleName":"Ctl.Internal.Wallet.Spec","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["connecttolode",[{"values":[{"sourceSpan":{"start":[112,3],"name":"src/Internal/Wallet/Spec.purs","end":[112,18]},"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ConnectToLode","moduleName":"Ctl.Internal.Wallet.Spec","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["connecttonami",[{"values":[{"sourceSpan":{"start":[108,3],"name":"src/Internal/Wallet/Spec.purs","end":[108,18]},"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ConnectToNami","moduleName":"Ctl.Internal.Wallet.Spec","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["connecttonufi",[{"values":[{"sourceSpan":{"start":[113,3],"name":"src/Internal/Wallet/Spec.purs","end":[113,18]},"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ConnectToNuFi","moduleName":"Ctl.Internal.Wallet.Spec","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["conquer",[{"values":[{"sourceSpan":{"start":[13,3],"name":".spago/contravariant/v6.0.0/src/Data/Divisible.purs","end":[13,27]},"score":3,"packageInfo":{"values":["contravariant"],"tag":"Package"},"name":"conquer","moduleName":"Data.Divisible","info":{"values":[{"typeClassArguments":[["f",null]],"typeClass":[["Data","Divisible"],"Divisible"],"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Divisible"],"Divisible"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["cons",[{"values":[{"sourceSpan":{"start":[87,1],"name":".spago/transformers/v6.0.0/src/Control/Monad/List/Trans.purs","end":[87,77]},"score":23,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"cons","moduleName":"Control.Monad.List.Trans","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lazy"],"Lazy"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attach an element to the front of a list.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[219,1],"name":".spago/arrays/v7.1.0/src/Data/Array/NonEmpty.purs","end":[219,58]},"score":20,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"cons","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[246,1],"name":".spago/arrays/v7.1.0/src/Data/Array.purs","end":[246,42]},"score":20,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"cons","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attaches an element to the front of an array, creating a new array.\n\n```purescript\ncons 1 [2, 3, 4] = [1, 2, 3, 4]\n```\n\nNote, the running time of this function is `O(n)`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[77,1],"name":".spago/catenable-lists/v7.0.0/src/Data/CatList.purs","end":[77,46]},"score":1,"packageInfo":{"values":["catenable-lists"],"tag":"Package"},"name":"cons","moduleName":"Data.CatList","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatList"],"CatList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatList"],"CatList"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Append an element to the beginning of the catenable list, creating a new\ncatenable list.\n\nRunning time: `O(1)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[68,1],"name":".spago/catenable-lists/v7.0.0/src/Data/CatQueue.purs","end":[68,48]},"score":1,"packageInfo":{"values":["catenable-lists"],"tag":"Package"},"name":"cons","moduleName":"Data.CatQueue","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatQueue"],"CatQueue"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatQueue"],"CatQueue"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Append an element to the beginning of the queue, creating a new queue.\n\nRunning time: `O(1)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[73,1],"name":".spago/lists/v7.0.0/src/Data/List/Lazy/NonEmpty.purs","end":[73,56]},"score":19,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"cons","moduleName":"Data.List.Lazy.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[34,19],"name":".spago/lists/v7.0.0/src/Data/List/Lazy/Types.purs","end":[34,25]},"score":19,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"Cons","moduleName":"Data.List.Lazy.Types","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"a"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[53,1],"name":".spago/lists/v7.0.0/src/Data/List/Lazy/Types.purs","end":[53,40]},"score":19,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"cons","moduleName":"Data.List.Lazy.Types","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attach an element to the front of a lazy list.\n\nRunning time: `O(1)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[131,1],"name":".spago/lists/v7.0.0/src/Data/List/NonEmpty.purs","end":[131,56]},"score":19,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"cons","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[35,19],"name":".spago/lists/v7.0.0/src/Data/List/Types.purs","end":[35,25]},"score":19,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"Cons","moduleName":"Data.List.Types","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"a"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[67,1],"name":".spago/ordered-collections/v3.0.0/src/Data/Set/NonEmpty.purs","end":[67,55]},"score":6,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"cons","moduleName":"Data.Set.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set","NonEmpty"],"NonEmptySet"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a `NonEmptySet` from an item and a `Set`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/strings/v6.0.1/src/Data/String/NonEmpty/CodePoints.purs","end":[63,46]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"cons","moduleName":"Data.String.NonEmpty.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[79,1],"name":".spago/strings/v6.0.1/src/Data/String/NonEmpty/CodeUnits.purs","end":[79,41]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"cons","moduleName":"Data.String.NonEmpty.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a `NonEmptyString` from a string by prepending a character.\n\n```purescript\ncons 'a' \"bc\" = NonEmptyString \"abc\"\ncons 'a' \"\" = NonEmptyString \"a\"\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Cons","moduleName":"Prim.Row","info":{"values":[{"superclasses":[],"fundeps":[[["label","a","tail"],["row"]],[["label","row"],["a","tail"]]],"arguments":[["label",{"tag":"TypeConstructor","contents":[["Prim"],"Symbol"]}],["a",{"tag":"TypeVar","contents":"k"}],["tail",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Row"]},{"tag":"TypeVar","contents":"k"}]}],["row",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Row"]},{"tag":"TypeVar","contents":"k"}]}]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The Cons type class is a 4-way relation which asserts that one row of\ntypes can be obtained from another by inserting a new label/type pair on\nthe left.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Cons","moduleName":"Prim.RowList","info":{"values":[{"kind":{"tag":"ForAll","contents":["k",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Symbol"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim","RowList"],"RowList"]},{"tag":"TypeVar","contents":"k"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim","RowList"],"RowList"]},{"tag":"TypeVar","contents":"k"}]}]}]}]},null]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"Constructs a new `RowList` from a label, a type, and an existing tail\n`RowList`.  E.g: `Cons \"x\" Int (Cons \"y\" Int Nil)`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Cons","moduleName":"Prim.Symbol","info":{"values":[{"superclasses":[],"fundeps":[[["head","tail"],["symbol"]],[["symbol"],["head","tail"]]],"arguments":[["head",{"tag":"TypeConstructor","contents":[["Prim"],"Symbol"]}],["tail",{"tag":"TypeConstructor","contents":[["Prim"],"Symbol"]}],["symbol",{"tag":"TypeConstructor","contents":[["Prim"],"Symbol"]}]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Compiler solved type class for either splitting up a symbol into its\nhead and tail or for combining a head and tail into a new symbol.\nRequires the head to be a single character and the combined string\ncannot be empty.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[718,13],"name":".spago/optparse/v5.0.0/src/Text/PrettyPrint/Leijen.purs","end":[718,19]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"Cons","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Docs"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["cons'",[{"values":[{"sourceSpan":{"start":[224,1],"name":".spago/arrays/v7.1.0/src/Data/Array/NonEmpty.purs","end":[224,51]},"score":20,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"cons'","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[134,1],"name":".spago/lists/v7.0.0/src/Data/List/NonEmpty.purs","end":[134,51]},"score":19,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"cons'","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["consecutivepairs",[{"values":[{"sourceSpan":{"start":[124,1],"name":"test/CoinSelection/RoundRobin.purs","end":[124,54]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"consecutivePairs","moduleName":"Test.Ctl.CoinSelection.RoundRobin","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","contents":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Tuple","Nested"],"/\\"]},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"a"}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["consi",[{"values":[{"sourceSpan":{"start":[29,1],"name":".spago/cardano-plutus-data-schema/v1.0.0/src/Cardano/Plutus/DataSchema/Indexed.purs","end":[30,72]},"score":0,"packageInfo":{"values":["cardano-plutus-data-schema"],"tag":"Package"},"name":"ConsI","moduleName":"Cardano.Plutus.DataSchema.Indexed","info":{"values":[{"typeArguments":[["t0",null],["t1",null],["t2",null],["t3",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["consolemessage",[{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/toppokki/5992e93396a734c980ef61c74df5b6ab46108920/src/Toppoki.purs","end":[23,43]},"score":0,"packageInfo":{"values":["toppokki"],"tag":"Package"},"name":"ConsoleMessage","moduleName":"Toppokki","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["consolemessagetext",[{"values":[{"sourceSpan":{"start":[328,1],"name":".spago/toppokki/5992e93396a734c980ef61c74df5b6ab46108920/src/Toppoki.purs","end":[328,51]},"score":0,"packageInfo":{"values":["toppokki"],"tag":"Package"},"name":"consoleMessageText","moduleName":"Toppokki","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Toppokki"],"ConsoleMessage"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["consolereporter",[{"values":[{"sourceSpan":{"start":[39,1],"name":"src/Internal/Test/ConsoleReporter.purs","end":[39,28]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"consoleReporter","moduleName":"Ctl.Internal.Test.ConsoleReporter","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Test","Spec","Runner"],"Reporter"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[30,1],"name":".spago/spec/v7.2.0/src/Test/Spec/Reporter/Console.purs","end":[30,28]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"consoleReporter","moduleName":"Test.Spec.Reporter.Console","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Test","Spec","Runner"],"Reporter"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[40,1],"name":".spago/mote-testplan/v1.0.0/src/ConsoleReporter.purs","end":[40,28]},"score":0,"packageInfo":{"values":["mote-testplan"],"tag":"Package"},"name":"consoleReporter","moduleName":"Test.Spec.Reporter.ConsoleReporter","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Test","Spec","Runner"],"Reporter"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["const",[{"values":[{"sourceSpan":{"start":[18,1],"name":".spago/const/v6.0.0/src/Data/Const.purs","end":[18,28]},"score":6,"packageInfo":{"values":["const"],"tag":"Package"},"name":"Const","moduleName":"Data.Const","info":{"values":[{"typeArguments":[["a",null],["b",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The `Const` type constructor, which wraps its first type argument\nand ignores its second. That is, `Const a b` is isomorphic to `a`\nfor any `b`.\n\n`Const` has some useful instances. For example, the `Applicative`\ninstance allows us to collect results using a `Monoid` while\nignoring return values.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[18,19],"name":".spago/const/v6.0.0/src/Data/Const.purs","end":[18,28]},"score":6,"packageInfo":{"values":["const"],"tag":"Package"},"name":"Const","moduleName":"Data.Const","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"a"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[42,1],"name":".spago/prelude/v6.0.1/src/Data/Function.purs","end":[42,33]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"const","moduleName":"Data.Function","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns its first argument and ignores its second.\n\n```purescript\nconst 1 \"hello\" = 1\n```\n\nIt can also be thought of as creating a function that ignores its argument:\n\n```purescript\nconst 1 = \\_ -> 1\n```\n"}],"tag":"SearchResult"}]],["constaesoncases",[{"values":[{"sourceSpan":{"start":[337,1],"name":".spago/aeson/v2.0.1/src/Aeson.purs","end":[337,57]},"score":0,"packageInfo":{"values":["aeson"],"tag":"Package"},"name":"constAesonCases","moduleName":"Aeson","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Aeson"],"AesonCases"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["constantdelay",[{"values":[{"sourceSpan":{"start":[136,1],"name":".spago/aff-retry/v2.0.0/src/Effect/Aff/Retry.purs","end":[136,54]},"score":0,"packageInfo":{"values":["aff-retry"],"tag":"Package"},"name":"constantDelay","moduleName":"Effect.Aff.Retry","info":{"values":[{"type":{"tag":"ForAll","contents":["d",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Time","Duration"],"Duration"],"constraintArgs":[{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeConstructor","contents":[["Effect","Aff","Retry"],"RetryPolicy"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Cconstant delay with unlimited retries\n"}],"tag":"SearchResult"}]],["constfolding",[{"values":[{"sourceSpan":{"start":[39,1],"name":".spago/heterogeneous/v0.6.0/src/Heterogeneous/Folding.purs","end":[39,40]},"score":0,"packageInfo":{"values":["heterogeneous"],"tag":"Package"},"name":"ConstFolding","moduleName":"Heterogeneous.Folding","info":{"values":[{"typeArguments":[["f",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[39,24],"name":".spago/heterogeneous/v0.6.0/src/Heterogeneous/Folding.purs","end":[39,40]},"score":0,"packageInfo":{"values":["heterogeneous"],"tag":"Package"},"name":"ConstFolding","moduleName":"Heterogeneous.Folding","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"f"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["constmapping",[{"values":[{"sourceSpan":{"start":[30,1],"name":".spago/heterogeneous/v0.6.0/src/Heterogeneous/Mapping.purs","end":[30,40]},"score":0,"packageInfo":{"values":["heterogeneous"],"tag":"Package"},"name":"ConstMapping","moduleName":"Heterogeneous.Mapping","info":{"values":[{"typeArguments":[["f",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[30,24],"name":".spago/heterogeneous/v0.6.0/src/Heterogeneous/Mapping.purs","end":[30,40]},"score":0,"packageInfo":{"values":["heterogeneous"],"tag":"Package"},"name":"ConstMapping","moduleName":"Heterogeneous.Mapping","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"f"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["constr",[{"values":[{"sourceSpan":{"start":[72,3],"name":".spago/cardano-types/v1.0.1/src/Cardano/Types/PlutusData.purs","end":[72,11]},"score":0,"packageInfo":{"values":["cardano-types"],"tag":"Package"},"name":"Constr","moduleName":"Cardano.Types.PlutusData","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Cardano","Types","BigNum"],"BigNum"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","PlutusData"],"PlutusData"]}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["constraint",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Constraint","moduleName":"Prim","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"`Constraint` is the kind of type class constraints.\nFor example, a type class declaration like this:\n\n    class Semigroup a where\n      append :: a -> a -> a\n\nhas the kind signature:\n\n    class Semigroup :: Type -> Constraint\n"}],"tag":"SearchResult"}]],["constraintprocessingstate",[{"values":[{"sourceSpan":{"start":[50,1],"name":"src/Internal/ProcessConstraints/State.purs","end":[70,4]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ConstraintProcessingState","moduleName":"Ctl.Internal.ProcessConstraints.State","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["transaction",{"tag":"TypeConstructor","contents":[["Cardano","Types","Transaction"],"Transaction"]},{"tag":"RCons","contents":["usedUtxos",{"tag":"TypeConstructor","contents":[["Cardano","Types","UtxoMap"],"UtxoMap"]},{"tag":"RCons","contents":["valueSpentBalancesInputs",{"tag":"TypeConstructor","contents":[["Ctl","Internal","ProcessConstraints","State"],"ValueSpentBalances"]},{"tag":"RCons","contents":["valueSpentBalancesOutputs",{"tag":"TypeConstructor","contents":[["Ctl","Internal","ProcessConstraints","State"],"ValueSpentBalances"]},{"tag":"RCons","contents":["datums",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","PlutusData"],"PlutusData"]}]},{"tag":"RCons","contents":["redeemers",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","BalanceTx","RedeemerIndex"],"UnindexedRedeemer"]}]},{"tag":"RCons","contents":["lookups",{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","ScriptLookups"],"ScriptLookups"]},{"tag":"RCons","contents":["refScriptsUtxoMap",{"tag":"TypeConstructor","contents":[["Cardano","Types","UtxoMap"],"UtxoMap"]},{"tag":"RCons","contents":["costModels",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Language"],"Language"]}]},{"tag":"TypeConstructor","contents":[["Cardano","Types","CostModel"],"CostModel"]}]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]}]}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["constraintsm",[{"values":[{"sourceSpan":{"start":[46,1],"name":"src/Internal/ProcessConstraints/State.purs","end":[47,46]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ConstraintsM","moduleName":"Ctl.Internal.ProcessConstraints.State","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","ProcessConstraints","State"],"ConstraintProcessingState"]}]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]}]},{"tag":"TypeVar","contents":"a"}]},"arguments":[["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["constrplutusdata",[{"values":[{"sourceSpan":{"start":[1144,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1144,45]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"ConstrPlutusData","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["constrplutusdata_alternative",[{"values":[{"sourceSpan":{"start":[1146,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1146,74]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"constrPlutusData_alternative","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"ConstrPlutusData"]}]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"BigNum"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["constrplutusdata_data",[{"values":[{"sourceSpan":{"start":[1147,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1147,71]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"constrPlutusData_data","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"ConstrPlutusData"]}]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"PlutusList"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["constrplutusdata_new",[{"values":[{"sourceSpan":{"start":[1148,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1148,80]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"constrPlutusData_new","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"BigNum"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"PlutusList"]}]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"ConstrPlutusData"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["constructor",[{"values":[{"sourceSpan":{"start":[44,1],"name":".spago/prelude/v6.0.1/src/Data/Generic/Rep.purs","end":[44,55]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Constructor","moduleName":"Data.Generic.Rep","info":{"values":[{"typeArguments":[["name",{"tag":"TypeConstructor","contents":[["Prim"],"Symbol"]}],["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A representation for constructors which includes the data constructor name\nas a type-level string.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[44,40],"name":".spago/prelude/v6.0.1/src/Data/Generic/Rep.purs","end":[44,55]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Constructor","moduleName":"Data.Generic.Rep","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"a"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["consume",[{"values":[{"sourceSpan":{"start":[401,1],"name":".spago/parsing/v10.2.0/src/Parsing.purs","end":[401,40]},"score":1,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"consume","moduleName":"Parsing","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Set the consumed flag.\n\nSetting the consumed flag means that we're committed to this parsing branch\nof an alternative (`<|>`), so that if this branch fails then we want to\nfail the entire parse instead of trying the other alternative.\n"}],"tag":"SearchResult"}]],["consumer",[{"values":[{"sourceSpan":{"start":[82,1],"name":".spago/pipes/v8.0.0/src/Pipes/Core.purs","end":[82,39]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"Consumer","moduleName":"Pipes.Core","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"X"]}]},"arguments":[["a",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["consumer_",[{"values":[{"sourceSpan":{"start":[88,1],"name":".spago/pipes/v8.0.0/src/Pipes/Core.purs","end":[88,68]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"Consumer_","moduleName":"Pipes.Core","info":{"values":[{"type":{"tag":"ForAll","contents":["y'",{"tag":"ForAll","contents":["y",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"y'"}]},{"tag":"TypeVar","contents":"y"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]},null]},null]},"arguments":[["a",null],["m",null],["r",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["consumewith",[{"values":[{"sourceSpan":{"start":[280,1],"name":".spago/parsing/v10.2.0/src/Parsing/String.purs","end":[283,24]},"score":1,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"consumeWith","moduleName":"Parsing.String","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["value",{"tag":"TypeVar","contents":"a"},{"tag":"RCons","contents":["consumed",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["remainder",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Consume a portion of the input string while yielding a value.\n\nTakes a consumption function which takes the remaining input `String`\nas its argument and returns either an error message, or three fields:\n\n* `value` is the value to return.\n* `consumed` is the input `String` that was consumed. It is used to update the parser position.\n  If the `consumed` `String` is non-empty then the `consumed` flag will\n  be set to true. (Confusing terminology.)\n* `remainder` is the new remaining input `String`.\n\nThis function is used internally to construct primitive `String` parsers.\n"}],"tag":"SearchResult"}]],["cont",[{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/transformers/v6.0.0/src/Control/Monad/Cont.purs","end":[23,31]},"score":23,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"Cont","moduleName":"Control.Monad.Cont","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont","Trans"],"ContT"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},"arguments":[["r",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"The `Cont` monad is a synonym for the `ContT` monad transformer applied to\nthe `Identity` monad.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[26,1],"name":".spago/transformers/v6.0.0/src/Control/Monad/Cont.purs","end":[26,48]},"score":23,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"cont","moduleName":"Control.Monad.Cont","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont"],"Cont"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a computation in the `Cont` monad.\n"}],"tag":"SearchResult"}]],["containerhelper",[{"values":[{"sourceSpan":{"start":[39,1],"name":"src/Internal/FfiHelpers.purs","end":[39,44]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ContainerHelper","moduleName":"Ctl.Internal.FfiHelpers","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[47,1],"name":"src/Internal/FfiHelpers.purs","end":[47,35]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"containerHelper","moduleName":"Ctl.Internal.FfiHelpers","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Ctl","Internal","FfiHelpers"],"ContainerHelper"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["contains",[{"values":[{"sourceSpan":{"start":[518,1],"name":"src/Internal/Types/Interval.purs","end":[518,77]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"contains","moduleName":"Ctl.Internal.Types.Interval","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","Interval"],"Interval"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","Interval"],"Interval"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"`a` `contains` `b` is `true` if the `Interval b` is entirely contained in\n`a`. That is, `a `contains` `b` if for every entry `s`, if `member s b` then\n`member s a`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[70,1],"name":".spago/strings/v6.0.1/src/Data/String/CodeUnits.purs","end":[70,41]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"contains","moduleName":"Data.String.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Pattern"],"Pattern"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Checks whether the pattern appears in the given string.\n\n```purescript\ncontains (Pattern \"needle\") \"haystack with needle\" == true\ncontains (Pattern \"needle\") \"haystack\" == false\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[133,1],"name":".spago/strings/v6.0.1/src/Data/String/NonEmpty/Internal.purs","end":[133,49]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"contains","moduleName":"Data.String.NonEmpty.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","Pattern"],"Pattern"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Checks whether the pattern appears in the given string.\n\n```purescript\ncontains (Pattern \"needle\") (NonEmptyString \"haystack with needle\") == true\ncontains (Pattern \"needle\") (NonEmptyString \"haystack\") == false\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/web-dom/v6.0.0/src/Web/DOM/DOMTokenList.purs","end":[23,68]},"score":4,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"contains","moduleName":"Web.DOM.DOMTokenList","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","DOMTokenList"],"DOMTokenList"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[164,1],"name":".spago/web-dom/v6.0.0/src/Web/DOM/Node.purs","end":[164,58]},"score":4,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"contains","moduleName":"Web.DOM.Node","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Node"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Node"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Checks whether the second node is contained within the first\n"}],"tag":"SearchResult"}]],["containsnegativevalue",[{"values":[{"sourceSpan":{"start":[38,3],"name":".spago/datetime/v6.1.0/src/Data/Interval/Duration/Iso.purs","end":[38,26]},"score":11,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"ContainsNegativeValue","moduleName":"Data.Interval.Duration.Iso","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Data","Interval","Duration"],"DurationComponent"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["content",[{"values":[{"sourceSpan":{"start":[88,1],"name":".spago/toppokki/5992e93396a734c980ef61c74df5b6ab46108920/src/Toppoki.purs","end":[88,30]},"score":0,"packageInfo":{"values":["toppokki"],"tag":"Package"},"name":"content","moduleName":"Toppokki","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Toppokki"],"Page"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[62,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLMetaElement.purs","end":[62,59]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"content","moduleName":"Web.HTML.HTMLMetaElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLMetaElement"],"HTMLMetaElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[56,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLTemplateElement.purs","end":[56,73]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"content","moduleName":"Web.HTML.HTMLTemplateElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLTemplateElement"],"HTMLTemplateElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Web","DOM","DocumentFragment"],"DocumentFragment"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["contentdocument",[{"values":[{"sourceSpan":{"start":[108,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLIFrameElement.purs","end":[108,64]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"contentDocument","moduleName":"Web.HTML.HTMLIFrameElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLIFrameElement"],"HTMLIFrameElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Document"],"Document"]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[123,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLObjectElement.purs","end":[123,64]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"contentDocument","moduleName":"Web.HTML.HTMLObjectElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLObjectElement"],"HTMLObjectElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Document"],"Document"]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["contenteditable",[{"values":[{"sourceSpan":{"start":[114,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLElement.purs","end":[114,63]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"contentEditable","moduleName":"Web.HTML.HTMLElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLElement"],"HTMLElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["contenttype",[{"values":[{"sourceSpan":{"start":[10,3],"name":".spago/affjax/v13.0.0/src/Affjax/RequestHeader.purs","end":[10,16]},"score":0,"packageInfo":{"values":["affjax"],"tag":"Package"},"name":"ContentType","moduleName":"Affjax.RequestHeader","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Data","MediaType"],"MediaType"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[90,1],"name":".spago/web-dom/v6.0.0/src/Web/DOM/Document.purs","end":[90,56]},"score":4,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"contentType","moduleName":"Web.DOM.Document","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Document"],"Document"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["contentwindow",[{"values":[{"sourceSpan":{"start":[111,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLIFrameElement.purs","end":[111,60]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"contentWindow","moduleName":"Web.HTML.HTMLIFrameElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLIFrameElement"],"HTMLIFrameElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Web","HTML","Window"],"Window"]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["context",[{"values":[{"sourceSpan":{"start":[192,1],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Types.purs","end":[192,50]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"Context","moduleName":"Options.Applicative.Types","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Subparser context, containing the 'name' of the subparser, and its parser info.\nUsed by parserFailure to display relevant usage information when parsing inside a subparser fails.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[192,14],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Types.purs","end":[192,23]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"Context","moduleName":"Options.Applicative.Types","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Exists"],"Exists"]},{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserInfo"]}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["contextnames",[{"values":[{"sourceSpan":{"start":[83,1],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Internal.purs","end":[83,46]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"contextNames","moduleName":"Options.Applicative.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Context"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["contract",[{"values":[{"sourceSpan":{"start":[60,1],"name":"examples/AdditionalUtxos.purs","end":[60,37]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"contract","moduleName":"Ctl.Examples.AdditionalUtxos","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[30,1],"name":"examples/AlwaysMints.purs","end":[30,26]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"contract","moduleName":"Ctl.Examples.AlwaysMints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[51,1],"name":"examples/AlwaysSucceeds.purs","end":[51,26]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"contract","moduleName":"Ctl.Examples.AlwaysSucceeds","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[29,1],"name":"examples/AwaitTxConfirmedWithTimeout.purs","end":[29,26]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"contract","moduleName":"Ctl.Examples.AwaitTxConfirmedWithTimeout","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[125,1],"name":"examples/BalanceTxConstraints.purs","end":[125,44]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"contract","moduleName":"Ctl.Examples.BalanceTxConstraints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Examples","BalanceTxConstraints"],"ContractParams"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[58,1],"name":"examples/Cip30.purs","end":[58,26]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"contract","moduleName":"Ctl.Examples.Cip30","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[34,1],"name":"examples/Datums.purs","end":[34,26]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"contract","moduleName":"Ctl.Examples.Datums","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[29,1],"name":"examples/DropTokens.purs","end":[29,26]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"contract","moduleName":"Ctl.Examples.DropTokens","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[62,1],"name":"examples/ECDSA.purs","end":[62,26]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"contract","moduleName":"Ctl.Examples.ECDSA","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[38,1],"name":"examples/ExUnits.purs","end":[38,26]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"contract","moduleName":"Ctl.Examples.ExUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[39,1],"name":"examples/ManyAssets.purs","end":[39,26]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"contract","moduleName":"Ctl.Examples.ManyAssets","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[36,1],"name":"examples/MintsMultipleTokens.purs","end":[36,26]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"contract","moduleName":"Ctl.Examples.MintsMultipleTokens","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[40,1],"name":"examples/MultipleRedeemers.purs","end":[40,26]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"contract","moduleName":"Ctl.Examples.MultipleRedeemers","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[29,1],"name":"examples/NativeScriptMints.purs","end":[29,26]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"contract","moduleName":"Ctl.Examples.NativeScriptMints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[77,1],"name":"examples/OneShotMinting.purs","end":[77,26]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"contract","moduleName":"Ctl.Examples.OneShotMinting","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[65,1],"name":"examples/PaysWithDatum.purs","end":[65,26]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"contract","moduleName":"Ctl.Examples.PaysWithDatum","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[25,1],"name":"examples/Pkh2Pkh.purs","end":[25,26]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"contract","moduleName":"Ctl.Examples.Pkh2Pkh","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[28,1],"name":"examples/PlutusV2/AlwaysSucceeds.purs","end":[28,26]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"contract","moduleName":"Ctl.Examples.PlutusV2.AlwaysSucceeds","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[37,1],"name":"examples/PlutusV2/OneShotMinting.purs","end":[37,26]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"contract","moduleName":"Ctl.Examples.PlutusV2.OneShotMinting","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[53,1],"name":"examples/PlutusV2/ReferenceInputs.purs","end":[53,26]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"contract","moduleName":"Ctl.Examples.PlutusV2.ReferenceInputs","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[68,1],"name":"examples/PlutusV2/ReferenceInputsAndScripts.purs","end":[68,26]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"contract","moduleName":"Ctl.Examples.PlutusV2.ReferenceInputsAndScripts","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[52,1],"name":"examples/PlutusV2/ReferenceScripts.purs","end":[52,26]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"contract","moduleName":"Ctl.Examples.PlutusV2.ReferenceScripts","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[61,1],"name":"examples/Schnorr.purs","end":[61,26]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"contract","moduleName":"Ctl.Examples.Schnorr","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[39,1],"name":"examples/SendsToken.purs","end":[39,26]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"contract","moduleName":"Ctl.Examples.SendsToken","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[23,1],"name":"examples/SignData.purs","end":[23,26]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"contract","moduleName":"Ctl.Examples.SignData","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[54,1],"name":"examples/SignMultiple.purs","end":[54,26]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"contract","moduleName":"Ctl.Examples.SignMultiple","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[44,1],"name":"examples/TxChaining.purs","end":[44,26]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"contract","moduleName":"Ctl.Examples.TxChaining","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[52,1],"name":"examples/Utxos.purs","end":[52,26]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"contract","moduleName":"Ctl.Examples.Utxos","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[14,1],"name":"examples/Wallet.purs","end":[14,26]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"contract","moduleName":"Ctl.Examples.Wallet","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[107,1],"name":"src/Internal/Contract/Monad.purs","end":[107,68]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"Contract","moduleName":"Ctl.Internal.Contract.Monad","info":{"values":[{"typeArguments":[["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The `Contract` monad is a newtype wrapper over `ReaderT` on `ContractEnv`\nover asynchronous effects, `Aff`. Throwing and catching errors can\ntherefore be implemented with native JavaScript `Effect.Exception.Error`s\nand `Effect.Class.Console.log` replaces the `Writer` monad. `Aff` enables\nthe user to make effectful calls inside this `Contract` monad.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[107,30],"name":"src/Internal/Contract/Monad.purs","end":[107,68]},"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"Contract","moduleName":"Ctl.Internal.Contract.Monad","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Trans"],"ReaderT"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"ContractEnv"]}]},{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]}]},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[438,1],"name":".spago/variant/v8.0.0/src/Data/Functor/Variant.purs","end":[443,22]},"score":2,"packageInfo":{"values":["variant"],"tag":"Package"},"name":"contract","moduleName":"Data.Functor.Variant","info":{"values":[{"type":{"tag":"ForAll","contents":["lt",{"tag":"ForAll","contents":["gt",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Alternative"],"Alternative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Variant","Internal"],"Contractable"],"constraintArgs":[{"tag":"TypeVar","contents":"gt"},{"tag":"TypeVar","contents":"lt"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"gt"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Variant"],"VariantF"]},{"tag":"TypeVar","contents":"lt"}]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A `VariantF gt a` can be cast to some `VariantF lt a`, where `lt` is is a subset\nof `gt`, as long as there is proof that the `VariantF`'s runtime tag is\nwithin the subset of `lt`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[320,1],"name":".spago/variant/v8.0.0/src/Data/Variant.purs","end":[325,19]},"score":2,"packageInfo":{"values":["variant"],"tag":"Package"},"name":"contract","moduleName":"Data.Variant","info":{"values":[{"type":{"tag":"ForAll","contents":["lt",{"tag":"ForAll","contents":["gt",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Alternative"],"Alternative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Variant","Internal"],"Contractable"],"constraintArgs":[{"tag":"TypeVar","contents":"gt"},{"tag":"TypeVar","contents":"lt"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"gt"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"lt"}]}}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A `Variant gt` can be cast to some `Variant lt`, where `lt` is is a subset\nof `gt`, as long as there is proof that the `Variant`'s runtime tag is\nwithin the subset of `lt`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[11,1],"name":"templates/ctl-scaffold/src/Scaffold.purs","end":[11,26]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"contract","moduleName":"Scaffold","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[265,1],"name":"test/ApplyArgs.purs","end":[265,26]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"contract","moduleName":"Test.Ctl.ApplyArgs","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["contractable",[{"values":[{"sourceSpan":{"start":[312,1],"name":".spago/variant/v8.0.0/src/Data/Variant/Internal.purs","end":[313,95]},"score":2,"packageInfo":{"values":["variant"],"tag":"Package"},"name":"Contractable","moduleName":"Data.Variant.Internal","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["gt",null],["lt",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["contractassertion",[{"values":[{"sourceSpan":{"start":[122,1],"name":"src/Contract/Test/Assert.purs","end":[123,59]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ContractAssertion","moduleName":"Contract.Test.Assert","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Trans"],"ReaderT"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Ref"],"Ref"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","contents":[["Contract","Test","Assert"],"ContractAssertionFailure"]}]}}]}}]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]}]},{"tag":"TypeVar","contents":"a"}]},"arguments":[["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"Monad allowing for accumulation of assertion failures.\n"}],"tag":"SearchResult"}]],["contractassertionfailure",[{"values":[{"sourceSpan":{"start":[129,1],"name":"src/Contract/Test/Assert.purs","end":[144,23]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ContractAssertionFailure","moduleName":"Contract.Test.Assert","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["contractcheck",[{"values":[{"sourceSpan":{"start":[299,1],"name":"src/Contract/Test/Assert.purs","end":[301,71]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ContractCheck","moduleName":"Contract.Test.Assert","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Test","Assert"],"ContractAssertion"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Test","Assert"],"ContractAssertion"]},{"tag":"ParensInType","contents":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Tuple","Nested"],"/\\"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Test","Assert"],"ContractAssertion"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Test","Assert"],"ContractAssertion"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]}]},"arguments":[["a",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A check that can run some initialization code before the `Contract` is run\nand check the results afterwards. It is used to implement assertions that\nrequire state monitoring, e.g. checking gains at address.\n"}],"tag":"SearchResult"}]],["contractenv",[{"values":[{"sourceSpan":{"start":[185,1],"name":"src/Internal/Contract/Monad.purs","end":[201,4]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ContractEnv","moduleName":"Ctl.Internal.Contract.Monad","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["backend",{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","QueryBackend"],"QueryBackend"]},{"tag":"RCons","contents":["handle",{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","QueryHandle","Type"],"QueryHandle"]},{"tag":"RCons","contents":["networkId",{"tag":"TypeConstructor","contents":[["Cardano","Types","NetworkId"],"NetworkId"]},{"tag":"RCons","contents":["logLevel",{"tag":"TypeConstructor","contents":[["Data","Log","Level"],"LogLevel"]},{"tag":"RCons","contents":["customLogger",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Log","Level"],"LogLevel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Log","Message"],"Message"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}]},{"tag":"RCons","contents":["suppressLogs",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["hooks",{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Hooks"],"Hooks"]},{"tag":"RCons","contents":["wallet",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Wallet"],"Wallet"]}]},{"tag":"RCons","contents":["usedTxOuts",{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","UsedTxOuts"],"UsedTxOuts"]},{"tag":"RCons","contents":["ledgerConstants",{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"LedgerConstants"]},{"tag":"RCons","contents":["timeParams",{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"ContractTimeParams"]},{"tag":"RCons","contents":["synchronizationParams",{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"ContractSynchronizationParams"]},{"tag":"RCons","contents":["knownTxs",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["backend",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Ref"],"Ref"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","TransactionHash"],"TransactionHash"]}]}}]},{"tag":"REmpty","contents":{}}]}]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]}]}]}]}]}]}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A record containing `Contract` environment - everything a `Contract` needs\nto run. It is recommended to use one environment per application to save\non websocket connections and to keep track of `UsedTxOuts`.\n"}],"tag":"SearchResult"}]],["contractparams",[{"values":[{"sourceSpan":{"start":[63,1],"name":"examples/BalanceTxConstraints.purs","end":[66,4]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ContractParams","moduleName":"Ctl.Examples.BalanceTxConstraints","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[63,24],"name":"examples/BalanceTxConstraints.purs","end":[66,4]},"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ContractParams","moduleName":"Ctl.Examples.BalanceTxConstraints","info":{"values":[{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["aliceKeyWallet",{"tag":"TypeConstructor","contents":[["Ctl","Internal","Wallet","Key"],"KeyWallet"]},{"tag":"RCons","contents":["bobKeyWallet",{"tag":"TypeConstructor","contents":[["Ctl","Internal","Wallet","Key"],"KeyWallet"]},{"tag":"REmpty","contents":{}}]}]}]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[68,1],"name":"examples/ContractTestUtils.purs","end":[75,4]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ContractParams","moduleName":"Ctl.Examples.ContractTestUtils","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["receiverPkh",{"tag":"TypeConstructor","contents":[["Cardano","Types","PaymentPubKeyHash"],"PaymentPubKeyHash"]},{"tag":"RCons","contents":["receiverSkh",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","StakePubKeyHash"],"StakePubKeyHash"]}]},{"tag":"RCons","contents":["adaToSend",{"tag":"TypeConstructor","contents":[["Cardano","Types","Coin"],"Coin"]},{"tag":"RCons","contents":["mintingPolicy",{"tag":"TypeConstructor","contents":[["Cardano","Types","PlutusScript"],"PlutusScript"]},{"tag":"RCons","contents":["tokensToMint",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple3"]},{"tag":"TypeConstructor","contents":[["Contract","Value"],"CurrencySymbol"]}]},{"tag":"TypeConstructor","contents":[["Contract","Value"],"TokenName"]}]},{"tag":"TypeConstructor","contents":[["Cardano","Types","BigNum"],"BigNum"]}]},{"tag":"RCons","contents":["datumToAttach",{"tag":"TypeConstructor","contents":[["Contract","PlutusData"],"Datum"]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[422,1],"name":"src/Internal/Contract/Monad.purs","end":[433,4]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ContractParams","moduleName":"Ctl.Internal.Contract.Monad","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["backendParams",{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","QueryBackend"],"QueryBackendParams"]},{"tag":"RCons","contents":["networkId",{"tag":"TypeConstructor","contents":[["Cardano","Types","NetworkId"],"NetworkId"]},{"tag":"RCons","contents":["logLevel",{"tag":"TypeConstructor","contents":[["Data","Log","Level"],"LogLevel"]},{"tag":"RCons","contents":["walletSpec",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Wallet","Spec"],"WalletSpec"]}]},{"tag":"RCons","contents":["customLogger",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Log","Level"],"LogLevel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Log","Message"],"Message"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}]},{"tag":"RCons","contents":["suppressLogs",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["hooks",{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Hooks"],"Hooks"]},{"tag":"RCons","contents":["timeParams",{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"ContractTimeParams"]},{"tag":"RCons","contents":["synchronizationParams",{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"ContractSynchronizationParams"]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]}]}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"Options to construct an environment for a `Contract` to run.\n\nSee `Contract.Config` for pre-defined values for testnet and mainnet.\n\nUse `runContract` to run a `Contract` within an implicity constructed\n`ContractEnv` environment, or use `withContractEnv` if your application\ncontains multiple contracts that can reuse the same environment.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[47,1],"name":"test/Blockfrost/GenerateFixtures/Helpers.purs","end":[47,40]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"contractParams","moduleName":"Test.Ctl.Blockfrost.GenerateFixtures.Helpers","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"ContractParams"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["contractsynchronizationparams",[{"values":[{"sourceSpan":{"start":[403,1],"name":"src/Internal/Contract/Monad.purs","end":[413,4]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ContractSynchronizationParams","moduleName":"Ctl.Internal.Contract.Monad","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["syncBackendWithWallet",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["errorOnTimeout",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["beforeCip30Methods",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["beforeBalancing",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"REmpty","contents":{}}]}]}]}]},{"tag":"RCons","contents":["syncWalletWithTxInputs",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["errorOnTimeout",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["beforeCip30Sign",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"REmpty","contents":{}}]}]}]},{"tag":"RCons","contents":["syncWalletWithTransaction",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["errorOnTimeout",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["beforeTxConfirmed",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"REmpty","contents":{}}]}]}]},{"tag":"REmpty","contents":{}}]}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["contracttest",[{"values":[{"sourceSpan":{"start":[26,1],"name":"src/Internal/Test/ContractTest.purs","end":[32,4]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ContractTest","moduleName":"Ctl.Internal.Test.ContractTest","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Represents a `Contract` test suite that depend on *some* wallet\n`UtxoDistribution`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[26,22],"name":"src/Internal/Test/ContractTest.purs","end":[32,4]},"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ContractTest","moduleName":"Ctl.Internal.Test.ContractTest","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"ForAll","contents":["r",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"ForAll","contents":["distr",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ForAll","contents":["wallets",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Test","ContractTest"],"ContractTestHandler"]},{"tag":"TypeVar","contents":"distr"}]},{"tag":"TypeVar","contents":"wallets"}]},{"tag":"TypeVar","contents":"r"}]},null]},null]}}]},{"tag":"TypeVar","contents":"r"}]},null]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["contracttesthandler",[{"values":[{"sourceSpan":{"start":[58,1],"name":"src/Internal/Test/ContractTest.purs","end":[59,77]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ContractTestHandler","moduleName":"Ctl.Internal.Test.ContractTest","info":{"values":[{"type":{"tag":"ConstrainedType","contents":[{"constraintClass":[["Ctl","Internal","Test","UtxoDistribution"],"UtxoDistribution"],"constraintArgs":[{"tag":"TypeVar","contents":"distr"},{"tag":"TypeVar","contents":"wallets"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"distr"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"wallets"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeVar","contents":"r"}]}]}]},"arguments":[["distr",null],["wallets",null],["r",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A runner for a test suite that supports funds distribution.\n"}],"tag":"SearchResult"}]],["contracttestplan",[{"values":[{"sourceSpan":{"start":[65,1],"name":"src/Internal/Test/ContractTest.purs","end":[71,4]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ContractTestPlan","moduleName":"Ctl.Internal.Test.ContractTest","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Represents `Contract`s in `TestPlanM` that depend on *some* wallet `UtxoDistribution`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[65,26],"name":"src/Internal/Test/ContractTest.purs","end":[71,4]},"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ContractTestPlan","moduleName":"Ctl.Internal.Test.ContractTest","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"ForAll","contents":["r",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"ForAll","contents":["distr",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ForAll","contents":["wallets",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Test","ContractTest"],"ContractTestPlanHandler"]},{"tag":"TypeVar","contents":"distr"}]},{"tag":"TypeVar","contents":"wallets"}]},{"tag":"TypeVar","contents":"r"}]},null]},null]}}]},{"tag":"TypeVar","contents":"r"}]},null]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["contracttestplanhandler",[{"values":[{"sourceSpan":{"start":[77,1],"name":"src/Internal/Test/ContractTest.purs","end":[81,7]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ContractTestPlanHandler","moduleName":"Ctl.Internal.Test.ContractTest","info":{"values":[{"type":{"tag":"ConstrainedType","contents":[{"constraintClass":[["Ctl","Internal","Test","UtxoDistribution"],"UtxoDistribution"],"constraintArgs":[{"tag":"TypeVar","contents":"distr"},{"tag":"TypeVar","contents":"wallets"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"distr"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Mote","TestPlanM"],"TestPlanM"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"wallets"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeVar","contents":"r"}]}]}]},"arguments":[["distr",null],["wallets",null],["r",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"Same as `ContractTestHandler`, but wrapped in a `TestPlanM`.\nIt is used for the reconstruction of the `MoteT` value.\nSee the `Ctl.Internal.Plutip.execDistribution` function for more info.\n"}],"tag":"SearchResult"}]],["contracttimeparams",[{"values":[{"sourceSpan":{"start":[396,1],"name":"src/Internal/Contract/Monad.purs","end":[401,4]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ContractTimeParams","moduleName":"Ctl.Internal.Contract.Monad","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["awaitTxConfirmed",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["delay",{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]},{"tag":"RCons","contents":["timeout",{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Seconds"]},{"tag":"REmpty","contents":{}}]}]}]},{"tag":"RCons","contents":["waitUntilSlot",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["delay",{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]},{"tag":"REmpty","contents":{}}]}]},{"tag":"RCons","contents":["syncWallet",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["delay",{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]},{"tag":"RCons","contents":["timeout",{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Seconds"]},{"tag":"REmpty","contents":{}}]}]}]},{"tag":"RCons","contents":["syncBackend",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["delay",{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Milliseconds"]},{"tag":"RCons","contents":["timeout",{"tag":"TypeConstructor","contents":[["Data","Time","Duration"],"Seconds"]},{"tag":"REmpty","contents":{}}]}]}]},{"tag":"REmpty","contents":{}}]}]}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"Delays and timeouts for internal query functions.\n\n- `awaitTxConfirmed.delay` - how frequently should we query for Tx in\n`Contract.Transaction.awaitTxConfirmed`\n\n- For info on `syncBackend` and syncWallet` see `doc/query-layers.md`\n"}],"tag":"SearchResult"}]],["contractwith",[{"values":[{"sourceSpan":{"start":[313,3],"name":".spago/variant/v8.0.0/src/Data/Variant/Internal.purs","end":[313,95]},"score":2,"packageInfo":{"values":["variant"],"tag":"Package"},"name":"contractWith","moduleName":"Data.Variant.Internal","info":{"values":[{"typeClassArguments":[["gt",null],["lt",null]],"typeClass":[["Data","Variant","Internal"],"Contractable"],"type":{"tag":"ForAll","contents":["gt",{"tag":"ForAll","contents":["lt",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["proxy2",{"tag":"ForAll","contents":["proxy1",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Variant","Internal"],"Contractable"],"constraintArgs":[{"tag":"TypeVar","contents":"gt"},{"tag":"TypeVar","contents":"lt"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Alternative"],"Alternative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"proxy1"},{"tag":"TypeVar","contents":"gt"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"proxy2"},{"tag":"TypeVar","contents":"lt"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["contractwithmintredeemers",[{"values":[{"sourceSpan":{"start":[65,1],"name":"examples/MultipleRedeemers.purs","end":[65,43]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"contractWithMintRedeemers","moduleName":"Ctl.Examples.MultipleRedeemers","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["contravariant",[{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/contravariant/v6.0.0/src/Data/Functor/Contravariant.purs","end":[17,45]},"score":3,"packageInfo":{"values":["contravariant"],"tag":"Package"},"name":"Contravariant","moduleName":"Data.Functor.Contravariant","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["f",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"A `Contravariant` functor can be seen as a way of changing the input type\nof a consumer of input, in contrast to the standard covariant `Functor`\nthat can be seen as a way of changing the output type of a producer of\noutput.\n\n`Contravariant` instances should satisfy the following laws:\n\n- Identity `cmap id = id`\n- Composition `cmap f <<< cmap g = cmap (g <<< f)`\n"}],"tag":"SearchResult"}]],["control",[{"values":[{"sourceSpan":{"start":[136,3],"name":".spago/unicode/v6.0.0/src/Data/CodePoint/Unicode.purs","end":[136,12]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"Control","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[87,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLLabelElement.purs","end":[87,58]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"control","moduleName":"Web.HTML.HTMLLabelElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLLabelElement"],"HTMLLabelElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLElement"],"HTMLElement"]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["controls",[{"values":[{"sourceSpan":{"start":[189,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLMediaElement.purs","end":[189,62]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"controls","moduleName":"Web.HTML.HTMLMediaElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLMediaElement"],"HTMLMediaElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["contt",[{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/transformers/v6.0.0/src/Control/Monad/Cont/Trans.purs","end":[23,48]},"score":23,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"ContT","moduleName":"Control.Monad.Cont.Trans","info":{"values":[{"typeArguments":[["r",null],["m",null],["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The CPS monad transformer.\n\nThis monad transformer extends the base monad with the operation `callCC`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[23,21],"name":".spago/transformers/v6.0.0/src/Control/Monad/Cont/Trans.purs","end":[23,48]},"score":23,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"ContT","moduleName":"Control.Monad.Cont.Trans","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"r"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"r"}]}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["convchars",[{"values":[{"sourceSpan":{"start":[4238,1],"name":".spago/unicode/v6.0.0/src/Data/CodePoint/Unicode/Internal.purs","end":[4238,29]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"convchars","moduleName":"Data.CodePoint.Unicode.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Data","CodePoint","Unicode","Internal"],"CharBlock"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["conversionrule",[{"values":[{"sourceSpan":{"start":[81,1],"name":".spago/unicode/v6.0.0/src/Data/CodePoint/Unicode/Internal.purs","end":[88,4]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"ConversionRule","moduleName":"Data.CodePoint.Unicode.Internal","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[81,24],"name":".spago/unicode/v6.0.0/src/Data/CodePoint/Unicode/Internal.purs","end":[88,4]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"ConversionRule","moduleName":"Data.CodePoint.Unicode.Internal","info":{"values":[{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["category",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"RCons","contents":["unicodeCat",{"tag":"TypeConstructor","contents":[["Data","CodePoint","Unicode","Internal"],"UnicodeCategory"]},{"tag":"RCons","contents":["possible",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"RCons","contents":["updist",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"RCons","contents":["lowdist",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"RCons","contents":["titledist",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]}]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["convertduration",[{"values":[{"sourceSpan":{"start":[93,1],"name":".spago/datetime/v6.1.0/src/Data/Time/Duration.purs","end":[93,66]},"score":11,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"convertDuration","moduleName":"Data.Time.Duration","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Time","Duration"],"Duration"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Time","Duration"],"Duration"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Converts directly between durations of differing types.\n"}],"tag":"SearchResult"}]],["convertplutusv1costmodel",[{"values":[{"sourceSpan":{"start":[266,1],"name":"src/Internal/Types/ProtocolParameters.purs","end":[266,60]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"convertPlutusV1CostModel","moduleName":"Ctl.Internal.Types.ProtocolParameters","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","ProtocolParameters"],"CostModelV1"]}]}]},{"tag":"TypeConstructor","contents":[["Cardano","Types","CostModel"],"CostModel"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["convertplutusv2costmodel",[{"values":[{"sourceSpan":{"start":[269,1],"name":"src/Internal/Types/ProtocolParameters.purs","end":[269,60]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"convertPlutusV2CostModel","moduleName":"Ctl.Internal.Types.ProtocolParameters","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","ProtocolParameters"],"CostModelV2"]}]}]},{"tag":"TypeConstructor","contents":[["Cardano","Types","CostModel"],"CostModel"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["coords",[{"values":[{"sourceSpan":{"start":[60,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLAreaElement.purs","end":[60,58]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"coords","moduleName":"Web.HTML.HTMLAreaElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLAreaElement"],"HTMLAreaElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["coproduct",[{"values":[{"sourceSpan":{"start":[15,1],"name":".spago/functors/v5.0.0/src/Data/Functor/Coproduct.purs","end":[15,57]},"score":6,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Coproduct","moduleName":"Data.Functor.Coproduct","info":{"values":[{"typeArguments":[["f",null],["g",null],["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"`Coproduct f g` is the coproduct of two functors `f` and `g`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[15,25],"name":".spago/functors/v5.0.0/src/Data/Functor/Coproduct.purs","end":[15,57]},"score":6,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Coproduct","moduleName":"Data.Functor.Coproduct","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"a"}]}}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/functors/v5.0.0/src/Data/Functor/Coproduct.purs","end":[27,78]},"score":6,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"coproduct","moduleName":"Data.Functor.Coproduct","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct"],"Coproduct"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Eliminate a coproduct by providing eliminators for the left and\nright components\n"}],"tag":"SearchResult"}]],["coproduct1",[{"values":[{"sourceSpan":{"start":[11,1],"name":".spago/functors/v5.0.0/src/Data/Functor/Coproduct/Nested.purs","end":[11,38]},"score":6,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Coproduct1","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"C2"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]}}]},"arguments":[["a",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[135,1],"name":".spago/functors/v5.0.0/src/Data/Functor/Coproduct/Nested.purs","end":[135,42]},"score":6,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"coproduct1","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"Coproduct1"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["coproduct10",[{"values":[{"sourceSpan":{"start":[29,1],"name":".spago/functors/v5.0.0/src/Data/Functor/Coproduct/Nested.purs","end":[29,76]},"score":6,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Coproduct10","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"C11"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"j"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]}}]},"arguments":[["a",null],["b",null],["c",null],["d",null],["e",null],["f",null],["g",null],["h",null],["i",null],["j",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[252,1],"name":".spago/functors/v5.0.0/src/Data/Functor/Coproduct/Nested.purs","end":[252,226]},"score":6,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"coproduct10","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["j",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"b"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"c"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"h"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"i"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"j"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"Coproduct10"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"j"}]},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["coproduct2",[{"values":[{"sourceSpan":{"start":[13,1],"name":".spago/functors/v5.0.0/src/Data/Functor/Coproduct/Nested.purs","end":[13,42]},"score":6,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Coproduct2","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"C3"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]}}]},"arguments":[["a",null],["b",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[140,1],"name":".spago/functors/v5.0.0/src/Data/Functor/Coproduct/Nested.purs","end":[140,80]},"score":6,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"coproduct2","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"b"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"Coproduct2"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["coproduct3",[{"values":[{"sourceSpan":{"start":[15,1],"name":".spago/functors/v5.0.0/src/Data/Functor/Coproduct/Nested.purs","end":[15,46]},"score":6,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Coproduct3","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"C4"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]}}]},"arguments":[["a",null],["b",null],["c",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[147,1],"name":".spago/functors/v5.0.0/src/Data/Functor/Coproduct/Nested.purs","end":[147,98]},"score":6,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"coproduct3","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"b"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"c"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"Coproduct3"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["coproduct4",[{"values":[{"sourceSpan":{"start":[17,1],"name":".spago/functors/v5.0.0/src/Data/Functor/Coproduct/Nested.purs","end":[17,50]},"score":6,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Coproduct4","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"C5"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]}}]},"arguments":[["a",null],["b",null],["c",null],["d",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[156,1],"name":".spago/functors/v5.0.0/src/Data/Functor/Coproduct/Nested.purs","end":[156,116]},"score":6,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"coproduct4","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["d",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"b"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"c"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"Coproduct4"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["coproduct5",[{"values":[{"sourceSpan":{"start":[19,1],"name":".spago/functors/v5.0.0/src/Data/Functor/Coproduct/Nested.purs","end":[19,54]},"score":6,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Coproduct5","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"C6"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]}}]},"arguments":[["a",null],["b",null],["c",null],["d",null],["e",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[167,1],"name":".spago/functors/v5.0.0/src/Data/Functor/Coproduct/Nested.purs","end":[167,134]},"score":6,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"coproduct5","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"b"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"c"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"Coproduct5"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["coproduct6",[{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/functors/v5.0.0/src/Data/Functor/Coproduct/Nested.purs","end":[21,58]},"score":6,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Coproduct6","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"C7"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]}}]},"arguments":[["a",null],["b",null],["c",null],["d",null],["e",null],["f",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[180,1],"name":".spago/functors/v5.0.0/src/Data/Functor/Coproduct/Nested.purs","end":[180,152]},"score":6,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"coproduct6","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["f",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"b"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"c"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"Coproduct6"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["coproduct7",[{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/functors/v5.0.0/src/Data/Functor/Coproduct/Nested.purs","end":[23,62]},"score":6,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Coproduct7","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"C8"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]}}]},"arguments":[["a",null],["b",null],["c",null],["d",null],["e",null],["f",null],["g",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[195,1],"name":".spago/functors/v5.0.0/src/Data/Functor/Coproduct/Nested.purs","end":[195,170]},"score":6,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"coproduct7","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["g",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"b"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"c"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"Coproduct7"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["coproduct8",[{"values":[{"sourceSpan":{"start":[25,1],"name":".spago/functors/v5.0.0/src/Data/Functor/Coproduct/Nested.purs","end":[25,66]},"score":6,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Coproduct8","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"C9"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]}}]},"arguments":[["a",null],["b",null],["c",null],["d",null],["e",null],["f",null],["g",null],["h",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[212,1],"name":".spago/functors/v5.0.0/src/Data/Functor/Coproduct/Nested.purs","end":[212,188]},"score":6,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"coproduct8","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["h",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"b"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"c"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"h"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"Coproduct8"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["coproduct9",[{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/functors/v5.0.0/src/Data/Functor/Coproduct/Nested.purs","end":[27,71]},"score":6,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Coproduct9","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"C10"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Const"],"Const"]},{"tag":"TypeConstructor","contents":[["Data","Void"],"Void"]}]}}]},"arguments":[["a",null],["b",null],["c",null],["d",null],["e",null],["f",null],["g",null],["h",null],["i",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[231,1],"name":".spago/functors/v5.0.0/src/Data/Functor/Coproduct/Nested.purs","end":[231,206]},"score":6,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"coproduct9","moduleName":"Data.Functor.Coproduct.Nested","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["x",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["d",{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["i",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"b"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"c"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"d"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"h"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"i"},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct","Nested"],"Coproduct9"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"d"}]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"x"}]}]},{"tag":"TypeVar","contents":"r"}]}]}]}]}]}]}]}]}]}]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["copy",[{"values":[{"sourceSpan":{"start":[32,3],"name":".spago/http-methods/v6.0.0/src/Data/HTTP/Method.purs","end":[32,9]},"score":2,"packageInfo":{"values":["http-methods"],"tag":"Package"},"name":"COPY","moduleName":"Data.HTTP.Method","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[112,3],"name":".spago/node-buffer/v8.0.0/src/Node/Buffer/Class.purs","end":[112,60]},"score":7,"packageInfo":{"values":["node-buffer"],"tag":"Package"},"name":"copy","moduleName":"Node.Buffer.Class","info":{"values":[{"typeClassArguments":[["buf",null],["m",null]],"typeClass":[["Node","Buffer","Class"],"MutableBuffer"],"type":{"tag":"ForAll","contents":["buf",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Node","Buffer","Class"],"MutableBuffer"],"constraintArgs":[{"tag":"TypeVar","contents":"buf"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Buffer","Types"],"Offset"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Buffer","Types"],"Offset"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"buf"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Buffer","Types"],"Offset"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"buf"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]}]}]}]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":"Copies a section of a source buffer into a target buffer at the specified\noffset, and returns the number of octets copied.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[108,1],"name":".spago/node-buffer/v8.0.0/src/Node/Buffer/Internal.purs","end":[108,87]},"score":7,"packageInfo":{"values":["node-buffer"],"tag":"Package"},"name":"copy","moduleName":"Node.Buffer.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["buf",{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Buffer","Types"],"Offset"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Buffer","Types"],"Offset"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"buf"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Buffer","Types"],"Offset"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"buf"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[78,17],"name":".spago/web-html/v4.1.0/src/Web/HTML/Event/DataTransfer.purs","end":[78,23]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"Copy","moduleName":"Web.HTML.Event.DataTransfer","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[35,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/Event/EventTypes.purs","end":[35,18]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"copy","moduleName":"Web.HTML.Event.EventTypes","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Web","Event","Event"],"EventType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["copyall",[{"values":[{"sourceSpan":{"start":[54,1],"name":".spago/node-buffer/v8.0.0/src/Node/Buffer/Internal.purs","end":[54,53]},"score":7,"packageInfo":{"values":["node-buffer"],"tag":"Package"},"name":"copyAll","moduleName":"Node.Buffer.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["buf",{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"buf"}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["cork",[{"values":[{"sourceSpan":{"start":[290,1],"name":".spago/node-streams/v7.0.0/src/Node/Stream.purs","end":[290,59]},"score":6,"packageInfo":{"values":["node-streams"],"tag":"Package"},"name":"cork","moduleName":"Node.Stream","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","Stream"],"Writable"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Force buffering of writes.\n"}],"tag":"SearchResult"}]],["corsmode",[{"values":[{"sourceSpan":{"start":[10,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLImageElement/CORSMode.purs","end":[12,19]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"CORSMode","moduleName":"Web.HTML.HTMLImageElement.CORSMode","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["cos",[{"values":[{"sourceSpan":{"start":[171,1],"name":".spago/numbers/v9.0.0/src/Data/Number.purs","end":[171,39]},"score":11,"packageInfo":{"values":["numbers"],"tag":"Package"},"name":"cos","moduleName":"Data.Number","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the cosine of the argument, where the argument is in radians.\n```purs\n> cos (pi / 4.0) == sqrt2 / 2.0\ntrue\n```\n"}],"tag":"SearchResult"}]],["cosekey",[{"values":[{"sourceSpan":{"start":[192,1],"name":"test/Wallet/Cip30/SignData.purs","end":[192,36]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"COSEKey","moduleName":"Test.Ctl.Wallet.Cip30.SignData","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["cosesign1",[{"values":[{"sourceSpan":{"start":[182,1],"name":"test/Wallet/Cip30/SignData.purs","end":[182,38]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"COSESign1","moduleName":"Test.Ctl.Wallet.Cip30.SignData","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["costar",[{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/functors/v5.0.0/src/Data/Functor/Costar.purs","end":[21,41]},"score":6,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Costar","moduleName":"Data.Functor.Costar","info":{"values":[{"typeArguments":[["f",null],["b",null],["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"`Costar` turns a `Functor` into a `Profunctor` \"backwards\".\n\n`Costar f` is also the co-Kleisli category for `f`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[21,22],"name":".spago/functors/v5.0.0/src/Data/Functor/Costar.purs","end":[21,41]},"score":6,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"Costar","moduleName":"Data.Functor.Costar","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["costmdls",[{"values":[{"sourceSpan":{"start":[1185,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1185,37]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"Costmdls","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["costmdls_new",[{"values":[{"sourceSpan":{"start":[1187,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1187,47]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"costmdls_new","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"Costmdls"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["costmdls_retainlanguageversions",[{"values":[{"sourceSpan":{"start":[1188,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1188,84]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"costmdls_retainLanguageVersions","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"Costmdls"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"Languages"]}]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"Costmdls"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["costmodel",[{"values":[{"sourceSpan":{"start":[1160,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1160,38]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"CostModel","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[26,1],"name":".spago/cardano-types/v1.0.1/src/Cardano/Types/CostModel.purs","end":[26,46]},"score":0,"packageInfo":{"values":["cardano-types"],"tag":"Package"},"name":"CostModel","moduleName":"Cardano.Types.CostModel","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[26,19],"name":".spago/cardano-types/v1.0.1/src/Cardano/Types/CostModel.purs","end":[26,46]},"score":0,"packageInfo":{"values":["cardano-types"],"tag":"Package"},"name":"CostModel","moduleName":"Cardano.Types.CostModel","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["costmodel_free",[{"values":[{"sourceSpan":{"start":[1162,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1162,60]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"costModel_free","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"CostModel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["costmodel_frombytes",[{"values":[{"sourceSpan":{"start":[1164,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1164,70]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"costModel_fromBytes","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","ByteArray"],"ByteArray"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"CostModel"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["costmodel_fromhex",[{"values":[{"sourceSpan":{"start":[1166,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1166,65]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"costModel_fromHex","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"CostModel"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["costmodel_fromjson",[{"values":[{"sourceSpan":{"start":[1168,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1168,66]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"costModel_fromJson","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Nullable"],"Nullable"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"CostModel"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["costmodel_get",[{"values":[{"sourceSpan":{"start":[1171,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1171,66]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"costModel_get","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"CostModel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"Int"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["costmodel_len",[{"values":[{"sourceSpan":{"start":[1172,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1172,59]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"costModel_len","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"CostModel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["costmodel_new",[{"values":[{"sourceSpan":{"start":[1169,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1169,49]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"costModel_new","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"CostModel"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["costmodel_set",[{"values":[{"sourceSpan":{"start":[1170,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1170,73]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"costModel_set","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"CostModel"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"Int"]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["costmodel_tobytes",[{"values":[{"sourceSpan":{"start":[1163,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1163,59]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"costModel_toBytes","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"CostModel"]}]},{"tag":"TypeConstructor","contents":[["Data","ByteArray"],"ByteArray"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["costmodel_tohex",[{"values":[{"sourceSpan":{"start":[1165,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1165,54]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"costModel_toHex","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"CostModel"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["costmodel_tojson",[{"values":[{"sourceSpan":{"start":[1167,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1167,55]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"costModel_toJson","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"CostModel"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["costmodelsfixture1",[{"values":[{"sourceSpan":{"start":[17,1],"name":"test/Fixtures/CostModels.purs","end":[17,45]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"costModelsFixture1","moduleName":"Test.Ctl.Fixtures.CostModels","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Language"],"Language"]}]},{"tag":"TypeConstructor","contents":[["Cardano","Types","CostModel"],"CostModel"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["costmodelv1",[{"values":[{"sourceSpan":{"start":[66,1],"name":"src/Internal/Types/ProtocolParameters.purs","end":[233,4]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"CostModelV1","moduleName":"Ctl.Internal.Types.ProtocolParameters","info":{"values":[{"type":{"tag":"RCons","contents":["addInteger-cpu-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["addInteger-cpu-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["addInteger-memory-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["addInteger-memory-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["appendByteString-cpu-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["appendByteString-cpu-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["appendByteString-memory-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["appendByteString-memory-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["appendString-cpu-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["appendString-cpu-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["appendString-memory-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["appendString-memory-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["bData-cpu-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["bData-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["blake2b_256-cpu-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["blake2b_256-cpu-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["blake2b_256-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["cekApplyCost-exBudgetCPU",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["cekApplyCost-exBudgetMemory",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["cekBuiltinCost-exBudgetCPU",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["cekBuiltinCost-exBudgetMemory",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["cekConstCost-exBudgetCPU",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["cekConstCost-exBudgetMemory",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["cekDelayCost-exBudgetCPU",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["cekDelayCost-exBudgetMemory",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["cekForceCost-exBudgetCPU",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["cekForceCost-exBudgetMemory",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["cekLamCost-exBudgetCPU",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["cekLamCost-exBudgetMemory",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["cekStartupCost-exBudgetCPU",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["cekStartupCost-exBudgetMemory",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["cekVarCost-exBudgetCPU",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["cekVarCost-exBudgetMemory",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["chooseData-cpu-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["chooseData-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["chooseList-cpu-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["chooseList-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["chooseUnit-cpu-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["chooseUnit-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["consByteString-cpu-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["consByteString-cpu-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["consByteString-memory-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["consByteString-memory-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["constrData-cpu-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["constrData-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["decodeUtf8-cpu-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["decodeUtf8-cpu-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["decodeUtf8-memory-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["decodeUtf8-memory-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["divideInteger-cpu-arguments-constant",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["divideInteger-cpu-arguments-model-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["divideInteger-cpu-arguments-model-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["divideInteger-memory-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["divideInteger-memory-arguments-minimum",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["divideInteger-memory-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["encodeUtf8-cpu-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["encodeUtf8-cpu-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["encodeUtf8-memory-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["encodeUtf8-memory-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["equalsByteString-cpu-arguments-constant",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["equalsByteString-cpu-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["equalsByteString-cpu-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["equalsByteString-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["equalsData-cpu-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["equalsData-cpu-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["equalsData-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["equalsInteger-cpu-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["equalsInteger-cpu-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["equalsInteger-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["equalsString-cpu-arguments-constant",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["equalsString-cpu-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["equalsString-cpu-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["equalsString-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["fstPair-cpu-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["fstPair-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["headList-cpu-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["headList-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["iData-cpu-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["iData-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["ifThenElse-cpu-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["ifThenElse-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["indexByteString-cpu-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["indexByteString-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["lengthOfByteString-cpu-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["lengthOfByteString-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["lessThanByteString-cpu-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["lessThanByteString-cpu-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["lessThanByteString-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["lessThanEqualsByteString-cpu-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["lessThanEqualsByteString-cpu-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["lessThanEqualsByteString-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["lessThanEqualsInteger-cpu-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["lessThanEqualsInteger-cpu-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["lessThanEqualsInteger-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["lessThanInteger-cpu-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["lessThanInteger-cpu-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["lessThanInteger-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["listData-cpu-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["listData-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["mapData-cpu-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["mapData-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["mkCons-cpu-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["mkCons-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["mkNilData-cpu-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["mkNilData-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["mkNilPairData-cpu-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["mkNilPairData-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["mkPairData-cpu-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["mkPairData-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["modInteger-cpu-arguments-constant",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["modInteger-cpu-arguments-model-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["modInteger-cpu-arguments-model-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["modInteger-memory-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["modInteger-memory-arguments-minimum",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["modInteger-memory-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["multiplyInteger-cpu-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["multiplyInteger-cpu-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["multiplyInteger-memory-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["multiplyInteger-memory-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["nullList-cpu-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["nullList-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["quotientInteger-cpu-arguments-constant",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["quotientInteger-cpu-arguments-model-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["quotientInteger-cpu-arguments-model-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["quotientInteger-memory-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["quotientInteger-memory-arguments-minimum",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["quotientInteger-memory-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["remainderInteger-cpu-arguments-constant",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["remainderInteger-cpu-arguments-model-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["remainderInteger-cpu-arguments-model-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["remainderInteger-memory-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["remainderInteger-memory-arguments-minimum",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["remainderInteger-memory-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["sha2_256-cpu-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["sha2_256-cpu-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["sha2_256-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["sha3_256-cpu-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["sha3_256-cpu-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["sha3_256-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["sliceByteString-cpu-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["sliceByteString-cpu-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["sliceByteString-memory-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["sliceByteString-memory-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["sndPair-cpu-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["sndPair-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["subtractInteger-cpu-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["subtractInteger-cpu-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["subtractInteger-memory-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["subtractInteger-memory-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["tailList-cpu-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["tailList-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["trace-cpu-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["trace-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["unBData-cpu-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["unBData-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["unConstrData-cpu-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["unConstrData-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["unIData-cpu-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["unIData-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["unListData-cpu-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["unListData-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["unMapData-cpu-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["unMapData-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["verifyEd25519Signature-cpu-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["verifyEd25519Signature-cpu-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["verifyEd25519Signature-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A type that represents a JSON-encoded Costmodel in format used by Ogmios\n"}],"tag":"SearchResult"}]],["costmodelv2",[{"values":[{"sourceSpan":{"start":[235,1],"name":"src/Internal/Types/ProtocolParameters.purs","end":[246,4]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"CostModelV2","moduleName":"Ctl.Internal.Types.ProtocolParameters","info":{"values":[{"type":{"tag":"RCons","contents":["serialiseData-cpu-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["serialiseData-cpu-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["serialiseData-memory-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["serialiseData-memory-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["verifyEcdsaSecp256k1Signature-cpu-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["verifyEcdsaSecp256k1Signature-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["verifySchnorrSecp256k1Signature-cpu-arguments-intercept",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["verifySchnorrSecp256k1Signature-cpu-arguments-slope",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"RCons","contents":["verifySchnorrSecp256k1Signature-memory-arguments",{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","ProtocolParameters"],"CostModelV1"]}]}]}]}]}]}]}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["costrong",[{"values":[{"sourceSpan":{"start":[7,1],"name":".spago/profunctor/v6.0.0/src/Data/Profunctor/Costrong.purs","end":[9,63]},"score":3,"packageInfo":{"values":["profunctor"],"tag":"Package"},"name":"Costrong","moduleName":"Data.Profunctor.Costrong","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Profunctor"],"Profunctor"],"constraintArgs":[{"tag":"TypeVar","contents":"p"}]}],"fundeps":[],"arguments":[["p",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `Costrong` class provides the dual operations of the `Strong` class.\n"}],"tag":"SearchResult"}]],["cotraverse",[{"values":[{"sourceSpan":{"start":[60,1],"name":".spago/distributive/v6.0.0/src/Data/Distributive.purs","end":[66,9]},"score":5,"packageInfo":{"values":["distributive"],"tag":"Package"},"name":"cotraverse","moduleName":"Data.Distributive","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["g",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Distributive"],"Distributive"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Zip an arbitrary collection of containers and summarize the results\n"}],"tag":"SearchResult"}]],["cotraversed",[{"values":[{"sourceSpan":{"start":[35,1],"name":".spago/profunctor-lenses/v8.0.0/src/Data/Lens/Grate.purs","end":[35,69]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"cotraversed","moduleName":"Data.Lens.Grate","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Distributive"],"Distributive"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Grate"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["couldnotconvertscriptoutputtotxinput",[{"values":[{"sourceSpan":{"start":[75,3],"name":"src/Internal/BalanceTx/Error.purs","end":[75,41]},"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"CouldNotConvertScriptOutputToTxInput","moduleName":"Ctl.Internal.BalanceTx.Error","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["couldnotgetcollateral",[{"values":[{"sourceSpan":{"start":[76,3],"name":"src/Internal/BalanceTx/Error.purs","end":[76,26]},"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"CouldNotGetCollateral","moduleName":"Ctl.Internal.BalanceTx.Error","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["couldnotgettxbyhash",[{"values":[{"sourceSpan":{"start":[130,3],"name":"src/Contract/Test/Assert.purs","end":[130,24]},"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"CouldNotGetTxByHash","moduleName":"Contract.Test.Assert","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Cardano","Types","TransactionHash"],"TransactionHash"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["couldnotgetutxos",[{"values":[{"sourceSpan":{"start":[78,3],"name":"src/Internal/BalanceTx/Error.purs","end":[78,21]},"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"CouldNotGetUtxos","moduleName":"Ctl.Internal.BalanceTx.Error","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["couldnotparsemetadata",[{"values":[{"sourceSpan":{"start":[131,3],"name":"src/Contract/Test/Assert.purs","end":[131,26]},"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"CouldNotParseMetadata","moduleName":"Contract.Test.Assert","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Contract","Test","Assert"],"Label"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["count",[{"values":[{"sourceSpan":{"start":[15,17],"name":".spago/spec/v7.2.0/src/Test/Spec/Summary.purs","end":[15,73]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"Count","moduleName":"Test.Spec.Summary","info":{"values":[{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["passed",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"RCons","contents":["failed",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"RCons","contents":["pending",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"REmpty","contents":{}}]}]}]}]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["countprefix",[{"values":[{"sourceSpan":{"start":[227,1],"name":".spago/strings/v6.0.1/src/Data/String/CodePoints.purs","end":[227,55]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"countPrefix","moduleName":"Data.String.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the number of code points in the leading sequence of code points\nwhich all match the given predicate. Operates in constant space and in\ntime linear to the length of the string.\n\n```purescript\n>>> countPrefix (\\c -> fromEnum c == 0x1D400) \"𝐀𝐀 b c 𝐀\"\n2\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[159,1],"name":".spago/strings/v6.0.1/src/Data/String/CodeUnits.purs","end":[159,65]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"countPrefix","moduleName":"Data.String.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the number of contiguous characters at the beginning\nof the string for which the predicate holds.\n\n```purescript\ncountPrefix (_ /= ' ') \"Hello World\" == 5 -- since length \"Hello\" == 5\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[129,1],"name":".spago/strings/v6.0.1/src/Data/String/NonEmpty/CodePoints.purs","end":[129,63]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"countPrefix","moduleName":"Data.String.NonEmpty.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[292,1],"name":".spago/strings/v6.0.1/src/Data/String/NonEmpty/CodeUnits.purs","end":[292,58]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"countPrefix","moduleName":"Data.String.NonEmpty.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the number of contiguous characters at the beginning of the string\nfor which the predicate holds.\n\n```purescript\ncountPrefix (_ /= 'o') (NonEmptyString \"Hello World\") == 4\n```\n"}],"tag":"SearchResult"}]],["counttests",[{"values":[{"sourceSpan":{"start":[84,1],"name":".spago/spec/v7.2.0/src/Test/Spec/Tree.purs","end":[84,50]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"countTests","moduleName":"Test.Spec.Tree","info":{"values":[{"type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["t",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Spec","Tree"],"Tree"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"t"}]}}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Count the total number of tests in a spec\n"}],"tag":"SearchResult"}]],["coyoneda",[{"values":[{"sourceSpan":{"start":[50,1],"name":".spago/free/v7.0.0/src/Data/Coyoneda.purs","end":[50,57]},"score":2,"packageInfo":{"values":["free"],"tag":"Package"},"name":"Coyoneda","moduleName":"Data.Coyoneda","info":{"values":[{"typeArguments":[["f",null],["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The `Coyoneda` `Functor`.\n\n`Coyoneda f` is a `Functor` for any type constructor `f`. In fact,\nit is the _free_ `Functor` for `f`, i.e. any natural transformation\n`nat :: f ~> g`, can be factor through `liftCoyoneda`.  The natural\ntransformation from `Coyoneda f ~> g` is given by `lowerCoyoneda <<<\nhoistCoyoneda nat`:\n```purescript\nlowerCoyoneda <<< hoistCoyoneda nat <<< liftCoyoneda $ fi\n= lowerCoyoneda (hoistCoyoneda nat (Coyoneda $ mkExists $ CoyonedaF identity fi))    (by definition of liftCoyoneda)\n= lowerCoyoneda (coyoneda identity (nat fi))                                         (by definition of hoistCoyoneda)\n= unCoyoneda map (coyoneda identity (nat fi))                                        (by definition of lowerCoyoneda)\n= unCoyoneda map (Coyoneda $ mkExists $ CoyonedaF  identity (nat fi))                (by definition of coyoneda)\n= map identity (nat fi)                                                              (by definition of unCoyoneda)\n= nat fi                                                                       (since g is a Functor)\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[50,22],"name":".spago/free/v7.0.0/src/Data/Coyoneda.purs","end":[50,57]},"score":2,"packageInfo":{"values":["free"],"tag":"Package"},"name":"Coyoneda","moduleName":"Data.Coyoneda","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Exists"],"Exists"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Coyoneda"],"CoyonedaF"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]}}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[139,1],"name":".spago/free/v7.0.0/src/Data/Coyoneda.purs","end":[139,58]},"score":2,"packageInfo":{"values":["free"],"tag":"Package"},"name":"coyoneda","moduleName":"Data.Coyoneda","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Coyoneda"],"Coyoneda"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Construct a value of type `Coyoneda f b` from a mapping function and a\nvalue of type `f a`.\n"}],"tag":"SearchResult"}]],["coyonedaf",[{"values":[{"sourceSpan":{"start":[32,1],"name":".spago/free/v7.0.0/src/Data/Coyoneda.purs","end":[32,48]},"score":2,"packageInfo":{"values":["free"],"tag":"Package"},"name":"CoyonedaF","moduleName":"Data.Coyoneda","info":{"values":[{"typeArguments":[["f",null],["a",null],["i",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"`Coyoneda` is encoded as an existential type using `Data.Exists`.\n\nThis type constructor encodes the contents of the existential package.\n"}],"tag":"SearchResult"}]],["_screenshot",[{"values":[{"sourceSpan":{"start":[342,1],"name":".spago/toppokki/5992e93396a734c980ef61c74df5b6ab46108920/src/Toppoki.purs","end":[342,92]},"score":0,"packageInfo":{"values":["toppokki"],"tag":"Package"},"name":"_screenshot","moduleName":"Toppokki","info":{"values":[{"type":{"tag":"ForAll","contents":["options",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn2"]},{"tag":"TypeVar","contents":"options"}]},{"tag":"TypeConstructor","contents":[["Toppokki"],"Page"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Promise"],"Promise"]},{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]}}]}}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_scriptdatahash",[{"values":[{"sourceSpan":{"start":[102,1],"name":"src/Internal/Lens.purs","end":[102,64]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"_scriptDataHash","moduleName":"Ctl.Internal.Lens","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","TransactionBody"],"TransactionBody"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","ScriptDataHash"],"ScriptDataHash"]}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_scriptref",[{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/plutus-types/v1.0.1/src/Cardano/Plutus/Types/TransactionOutputWithRefScript.purs","end":[27,69]},"score":0,"packageInfo":{"values":["plutus-types"],"tag":"Package"},"name":"_scriptRef","moduleName":"Cardano.Plutus.Types.TransactionOutputWithRefScript","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"TypeConstructor","contents":[["Cardano","Plutus","Types","TransactionOutputWithRefScript"],"TransactionOutputWithRefScript"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","ScriptRef"],"ScriptRef"]}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[152,1],"name":"src/Internal/Lens.purs","end":[152,56]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"_scriptRef","moduleName":"Ctl.Internal.Lens","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","TransactionOutput"],"TransactionOutput"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","ScriptRef"],"ScriptRef"]}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_select",[{"values":[{"sourceSpan":{"start":[346,1],"name":".spago/toppokki/5992e93396a734c980ef61c74df5b6ab46108920/src/Toppoki.purs","end":[346,95]},"score":0,"packageInfo":{"values":["toppokki"],"tag":"Package"},"name":"_select","moduleName":"Toppokki","info":{"values":[{"type":{"tag":"ForAll","contents":["options",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn3"]},{"tag":"TypeConstructor","contents":[["Toppokki"],"Selector"]}]},{"tag":"TypeVar","contents":"options"}]},{"tag":"TypeConstructor","contents":[["Toppokki"],"Page"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Promise"],"Promise"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]}}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_selectionstrategy",[{"values":[{"sourceSpan":{"start":[81,1],"name":"src/Internal/BalanceTx/Constraints.purs","end":[81,67]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"_selectionStrategy","moduleName":"Ctl.Internal.BalanceTx.Constraints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","BalanceTx","Constraints"],"BalanceTxConstraints"]}]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","BalanceTx","CoinSelection"],"SelectionStrategy"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_setuseragent",[{"values":[{"sourceSpan":{"start":[362,1],"name":".spago/toppokki/5992e93396a734c980ef61c74df5b6ab46108920/src/Toppoki.purs","end":[362,75]},"score":0,"packageInfo":{"values":["toppokki"],"tag":"Package"},"name":"_setUserAgent","moduleName":"Toppokki","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn2"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Toppokki"],"Page"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Promise"],"Promise"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_setviewport",[{"values":[{"sourceSpan":{"start":[348,1],"name":".spago/toppokki/5992e93396a734c980ef61c74df5b6ab46108920/src/Toppoki.purs","end":[348,92]},"score":0,"packageInfo":{"values":["toppokki"],"tag":"Package"},"name":"_setViewport","moduleName":"Toppokki","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn2"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeConstructor","contents":[["Toppokki"],"DefaultViewPort"]}]}}]},{"tag":"TypeConstructor","contents":[["Toppokki"],"Page"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Promise"],"Promise"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_srcaddresses",[{"values":[{"sourceSpan":{"start":[72,1],"name":"src/Internal/BalanceTx/Constraints.purs","end":[72,68]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"_srcAddresses","moduleName":"Ctl.Internal.BalanceTx.Constraints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","BalanceTx","Constraints"],"BalanceTxConstraints"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Address"],"Address"]}]}}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_string",[{"values":[{"sourceSpan":{"start":[17,1],"name":".spago/argonaut-traversals/v10.0.0/src/Data/Argonaut/Prisms.purs","end":[17,30]},"score":1,"packageInfo":{"values":["argonaut-traversals"],"tag":"Package"},"name":"_String","moduleName":"Data.Argonaut.Prisms","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_success",[{"values":[{"sourceSpan":{"start":[445,1],"name":".spago/cip30-typesafe/d72e51fbc0255eb3246c9132d295de7f65e16a99/src/Cardano/Wallet/Cip30/TypeSafe.purs","end":[445,28]},"score":0,"packageInfo":{"values":["cip30-typesafe"],"tag":"Package"},"name":"_success","moduleName":"Cardano.Wallet.Cip30.TypeSafe","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeLevelString","contents":"success"}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["<",[{"values":[{"sourceSpan":{"start":[159,1],"name":".spago/prelude/v6.0.1/src/Data/Ord.purs","end":[159,23]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"(<)","moduleName":"Data.Ord","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[348,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Ops.purs","end":[348,17]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"(<)","moduleName":"Data.Typelevel.Num.Ops","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]]]