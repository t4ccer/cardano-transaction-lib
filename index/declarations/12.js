// This file was generated by purescript-docs-search.
window.DocsSearchIndex["12"] = [["safe",[{"values":[{"sourceSpan":{"start":[49,1],"name":".spago/checked-exceptions/v3.1.1/src/Control/Monad/Except/Checked.purs","end":[53,8]},"score":0,"packageInfo":{"values":["checked-exceptions"],"tag":"Package"},"name":"safe","moduleName":"Control.Monad.Except.Checked","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except","Checked"],"ExceptV"]},{"tag":"REmpty","contents":{}}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Safely removes the `ExceptT` layer when all exceptions have been handled.\n"}],"tag":"SearchResult"}]],["safezone",[{"values":[{"sourceSpan":{"start":[182,1],"name":"src/Internal/Types/EraSummaries.purs","end":[182,35]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"SafeZone","moduleName":"Ctl.Internal.Types.EraSummaries","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Number of slots from the tip of the ledger in which it is guaranteed that\nno hard fork can take place. This should be (at least) the number of slots\nin which we are guaranteed to have k blocks.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[182,18],"name":"src/Internal/Types/EraSummaries.purs","end":[182,35]},"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"SafeZone","moduleName":"Ctl.Internal.Types.EraSummaries","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["JS","BigInt"],"BigInt"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["sameline",[{"values":[{"sourceSpan":{"start":[129,1],"name":".spago/parsing/v10.2.0/src/Parsing/Indent.purs","end":[129,42]},"score":1,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"sameLine","moduleName":"Parsing.Indent","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Parsing","Indent"],"IndentParser"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Parses only on the same line as the reference\n"}],"tag":"SearchResult"}]],["sameorindented",[{"values":[{"sourceSpan":{"start":[125,1],"name":".spago/parsing/v10.2.0/src/Parsing/Indent.purs","end":[125,48]},"score":1,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"sameOrIndented","moduleName":"Parsing.Indent","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Parsing","Indent"],"IndentParser"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Parses only when indented past the level of the reference or on the same line\n"}],"tag":"SearchResult"}]],["samewallets",[{"values":[{"sourceSpan":{"start":[48,1],"name":"src/Internal/Test/ContractTest.purs","end":[53,22]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"sameWallets","moduleName":"Ctl.Internal.Test.ContractTest","info":{"values":[{"type":{"tag":"ForAll","contents":["distr",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ForAll","contents":["wallets",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Ctl","Internal","Test","UtxoDistribution"],"UtxoDistribution"],"constraintArgs":[{"tag":"TypeVar","contents":"distr"},{"tag":"TypeVar","contents":"wallets"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"distr"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Mote","TestPlanM"],"TestPlanM"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"wallets"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Test","ContractTest"],"ContractTestPlan"]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Store a wallet `UtxoDistribution` and a `TestPlanM` that depend on those wallets\n"}],"tag":"SearchResult"}]],["sample",[{"values":[{"sourceSpan":{"start":[238,1],"name":".spago/quickcheck/v8.0.1/src/Test/QuickCheck/Gen.purs","end":[238,53]},"score":14,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"sample","moduleName":"Test.QuickCheck.Gen","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Random","LCG"],"Seed"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Size"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Sample a random generator\n"}],"tag":"SearchResult"}]],["sans",[{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/profunctor-lenses/v8.0.0/src/Data/Lens/At.purs","end":[63,46]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"sans","moduleName":"Data.Lens.At","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Lens","At"],"At"],"constraintArgs":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"m"}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["satisfy",[{"values":[{"sourceSpan":{"start":[111,1],"name":".spago/parsing/v10.2.0/src/Parsing/String.purs","end":[111,64]},"score":1,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"satisfy","moduleName":"Parsing.String","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Match a BMP `Char` satisfying the predicate.\n"}],"tag":"SearchResult"}]],["satisfycodepoint",[{"values":[{"sourceSpan":{"start":[133,1],"name":".spago/parsing/v10.2.0/src/Parsing/String.purs","end":[133,83]},"score":1,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"satisfyCodePoint","moduleName":"Parsing.String","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","String","CodePoints"],"CodePoint"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Match a Unicode character satisfying the predicate.\n"}],"tag":"SearchResult"}]],["saturday",[{"values":[{"sourceSpan":{"start":[150,3],"name":".spago/datetime/v6.1.0/src/Data/Date/Component.purs","end":[150,13]},"score":11,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"Saturday","moduleName":"Data.Date.Component","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["saveposition",[{"values":[{"sourceSpan":{"start":[36,3],"name":".spago/ansi/v7.0.0/src/Ansi/Codes.purs","end":[36,17]},"score":2,"packageInfo":{"values":["ansi"],"tag":"Package"},"name":"SavePosition","moduleName":"Ansi.Codes","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["rbrace",[{"values":[{"sourceSpan":{"start":[299,1],"name":".spago/optparse/v5.0.0/src/Text/PrettyPrint/Leijen.purs","end":[299,14]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"rbrace","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The document @rbrace@ contains a right brace, \\\"}\\\".\n"}],"tag":"SearchResult"}]],["rbracket",[{"values":[{"sourceSpan":{"start":[305,1],"name":".spago/optparse/v5.0.0/src/Text/PrettyPrint/Leijen.purs","end":[305,16]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"rbracket","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The document @rbracket@ contains a right square bracket, \\\"]\\\".\n"}],"tag":"SearchResult"}]],["pdf",[{"values":[{"sourceSpan":{"start":[144,1],"name":".spago/toppokki/5992e93396a734c980ef61c74df5b6ab46108920/src/Toppoki.purs","end":[149,16]},"score":0,"packageInfo":{"values":["toppokki"],"tag":"Package"},"name":"pdf","moduleName":"Toppokki","info":{"values":[{"type":{"tag":"ForAll","contents":["options",{"tag":"ForAll","contents":["trash",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"options"},{"tag":"TypeVar","contents":"trash"},{"tag":"TypeConstructor","contents":[["Toppokki"],"PDFOptions"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"options"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Toppokki"],"Page"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["pdfmargin",[{"values":[{"sourceSpan":{"start":[113,1],"name":".spago/toppokki/5992e93396a734c980ef61c74df5b6ab46108920/src/Toppoki.purs","end":[113,38]},"score":0,"packageInfo":{"values":["toppokki"],"tag":"Package"},"name":"PDFMargin","moduleName":"Toppokki","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["pdfmarginoptions",[{"values":[{"sourceSpan":{"start":[115,1],"name":".spago/toppokki/5992e93396a734c980ef61c74df5b6ab46108920/src/Toppoki.purs","end":[120,4]},"score":0,"packageInfo":{"values":["toppokki"],"tag":"Package"},"name":"PDFMarginOptions","moduleName":"Toppokki","info":{"values":[{"type":{"tag":"RCons","contents":["top",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["right",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["bottom",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["left",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"REmpty","contents":{}}]}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["pdfoptions",[{"values":[{"sourceSpan":{"start":[129,1],"name":".spago/toppokki/5992e93396a734c980ef61c74df5b6ab46108920/src/Toppoki.purs","end":[142,4]},"score":0,"packageInfo":{"values":["toppokki"],"tag":"Package"},"name":"PDFOptions","moduleName":"Toppokki","info":{"values":[{"type":{"tag":"RCons","contents":["path",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["scale",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"RCons","contents":["displayHeaderFooter",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["headerTemplate",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["footerTemplate",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["printBackground",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["landscape",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["pageRanges",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["format",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["width",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["height",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["margin",{"tag":"TypeConstructor","contents":[["Toppokki"],"PDFMargin"]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]}]}]}]}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["p",[{"values":[{"sourceSpan":{"start":[65,1],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Internal.purs","end":[65,85]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"P","moduleName":"Options.Applicative.Internal","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["nfc",[{"values":[{"sourceSpan":{"start":[262,24],"name":".spago/stringutils/v0.0.12/src/Data/String/Utils.purs","end":[262,29]},"score":0,"packageInfo":{"values":["stringutils"],"tag":"Package"},"name":"NFC","moduleName":"Data.String.Utils","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["nfd",[{"values":[{"sourceSpan":{"start":[262,30],"name":".spago/stringutils/v0.0.12/src/Data/String/Utils.purs","end":[262,35]},"score":0,"packageInfo":{"values":["stringutils"],"tag":"Package"},"name":"NFD","moduleName":"Data.String.Utils","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["nfkc",[{"values":[{"sourceSpan":{"start":[262,36],"name":".spago/stringutils/v0.0.12/src/Data/String/Utils.purs","end":[262,42]},"score":0,"packageInfo":{"values":["stringutils"],"tag":"Package"},"name":"NFKC","moduleName":"Data.String.Utils","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["nfkd",[{"values":[{"sourceSpan":{"start":[262,43],"name":".spago/stringutils/v0.0.12/src/Data/String/Utils.purs","end":[262,49]},"score":0,"packageInfo":{"values":["stringutils"],"tag":"Package"},"name":"NFKD","moduleName":"Data.String.Utils","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["kill",[{"values":[{"sourceSpan":{"start":[54,3],"name":".spago/fork/v6.0.0/src/Control/Monad/Fork/Class.purs","end":[54,39]},"score":1,"packageInfo":{"values":["fork"],"tag":"Package"},"name":"kill","moduleName":"Control.Monad.Fork.Class","info":{"values":[{"typeClassArguments":[["e",null],["f",null],["m",null]],"typeClass":[["Control","Monad","Fork","Class"],"MonadKill"],"type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Fork","Class"],"MonadKill"],"constraintArgs":[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[76,1],"name":".spago/avar/v5.0.0/src/Effect/Aff/AVar.purs","end":[76,46]},"score":2,"packageInfo":{"values":["avar"],"tag":"Package"},"name":"kill","moduleName":"Effect.Aff.AVar","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Kills the AVar with an exception. All pending and future actions will\nresolve immediately with the provided exception.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[47,1],"name":".spago/avar/v5.0.0/src/Effect/AVar.purs","end":[47,49]},"score":2,"packageInfo":{"values":["avar"],"tag":"Package"},"name":"kill","moduleName":"Effect.AVar","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","AVar"],"AVar"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Kills the AVar with an exception. All pending and future actions will\nresolve immediately with the provided exception.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[152,1],"name":".spago/node-child-process/v9.0.0/src/Node/ChildProcess.purs","end":[152,46]},"score":0,"packageInfo":{"values":["node-child-process"],"tag":"Package"},"name":"kill","moduleName":"Node.ChildProcess","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Posix","Signal"],"Signal"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","ChildProcess"],"ChildProcess"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Send a signal to a child process. In the same way as the\n[unix kill(2) system call](https://linux.die.net/man/2/kill),\nsending a signal to a child process won't necessarily kill it.\n\nThe resulting effects of this function depend on the process\nand the signal. They can vary from system to system.\nThe child process might emit an `\"error\"` event if the signal\ncould not be delivered.\n"}],"tag":"SearchResult"}]],["killed",[{"values":[{"sourceSpan":{"start":[65,3],"name":".spago/fork/v6.0.0/src/Control/Monad/Fork/Class.purs","end":[65,11]},"score":1,"packageInfo":{"values":["fork"],"tag":"Package"},"name":"Killed","moduleName":"Control.Monad.Fork.Class","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"e"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[34,3],"name":".spago/avar/v5.0.0/src/Effect/AVar.purs","end":[34,11]},"score":2,"packageInfo":{"values":["avar"],"tag":"Package"},"name":"Killed","moduleName":"Effect.AVar","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["killfiber",[{"values":[{"sourceSpan":{"start":[186,1],"name":".spago/aff/v7.1.0/src/Effect/Aff.purs","end":[186,52]},"score":13,"packageInfo":{"values":["aff"],"tag":"Package"},"name":"killFiber","moduleName":"Effect.Aff","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Fiber"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Invokes pending cancelers in a fiber and runs cleanup effects. Blocks\nuntil the fiber has fully exited.\n"}],"tag":"SearchResult"}]],["kind",[{"values":[{"sourceSpan":{"start":[40,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/Event/DataTransfer/DataTransferItem.purs","end":[40,55]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"kind","moduleName":"Web.HTML.Event.DataTransfer.DataTransferItem","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","Event","DataTransfer","DataTransferItem"],"DataTransferItem"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Web","HTML","Event","DataTransfer","DataTransferItem"],"DataTransferItemKind"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the drag data item kind of the `DataTransferItem`. In the case\nwhere the `DataTransferItem` object is in _disabled mode_, `Nothing` is\nreturned.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[88,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLTrackElement.purs","end":[88,57]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"kind","moduleName":"Web.HTML.HTMLTrackElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLTrackElement"],"HTMLTrackElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["fn0",[{"values":[{"sourceSpan":{"start":[6,1],"name":".spago/functions/v6.0.0/src/Data/Function/Uncurried.purs","end":[6,40]},"score":19,"packageInfo":{"values":["functions"],"tag":"Package"},"name":"Fn0","moduleName":"Data.Function.Uncurried","info":{"values":[{"typeArguments":[["t0",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A function of zero arguments\n"}],"tag":"SearchResult"}]],["fn1",[{"values":[{"sourceSpan":{"start":[11,1],"name":".spago/functions/v6.0.0/src/Data/Function/Uncurried.purs","end":[11,22]},"score":19,"packageInfo":{"values":["functions"],"tag":"Package"},"name":"Fn1","moduleName":"Data.Function.Uncurried","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},"arguments":[["a",null],["b",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A function of one argument\n"}],"tag":"SearchResult"}]],["fn10",[{"values":[{"sourceSpan":{"start":[54,1],"name":".spago/functions/v6.0.0/src/Data/Function/Uncurried.purs","end":[54,121]},"score":19,"packageInfo":{"values":["functions"],"tag":"Package"},"name":"Fn10","moduleName":"Data.Function.Uncurried","info":{"values":[{"typeArguments":[["t0",null],["t1",null],["t2",null],["t3",null],["t4",null],["t5",null],["t6",null],["t7",null],["t8",null],["t9",null],["t10",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A function of ten arguments\n"}],"tag":"SearchResult"}]],["fn2",[{"values":[{"sourceSpan":{"start":[14,1],"name":".spago/functions/v6.0.0/src/Data/Function/Uncurried.purs","end":[14,56]},"score":19,"packageInfo":{"values":["functions"],"tag":"Package"},"name":"Fn2","moduleName":"Data.Function.Uncurried","info":{"values":[{"typeArguments":[["t0",null],["t1",null],["t2",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A function of two arguments\n"}],"tag":"SearchResult"}]],["fn3",[{"values":[{"sourceSpan":{"start":[19,1],"name":".spago/functions/v6.0.0/src/Data/Function/Uncurried.purs","end":[19,64]},"score":19,"packageInfo":{"values":["functions"],"tag":"Package"},"name":"Fn3","moduleName":"Data.Function.Uncurried","info":{"values":[{"typeArguments":[["t0",null],["t1",null],["t2",null],["t3",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A function of three arguments\n"}],"tag":"SearchResult"}]],["fn4",[{"values":[{"sourceSpan":{"start":[24,1],"name":".spago/functions/v6.0.0/src/Data/Function/Uncurried.purs","end":[24,72]},"score":19,"packageInfo":{"values":["functions"],"tag":"Package"},"name":"Fn4","moduleName":"Data.Function.Uncurried","info":{"values":[{"typeArguments":[["t0",null],["t1",null],["t2",null],["t3",null],["t4",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A function of four arguments\n"}],"tag":"SearchResult"}]],["fn5",[{"values":[{"sourceSpan":{"start":[29,1],"name":".spago/functions/v6.0.0/src/Data/Function/Uncurried.purs","end":[29,80]},"score":19,"packageInfo":{"values":["functions"],"tag":"Package"},"name":"Fn5","moduleName":"Data.Function.Uncurried","info":{"values":[{"typeArguments":[["t0",null],["t1",null],["t2",null],["t3",null],["t4",null],["t5",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A function of five arguments\n"}],"tag":"SearchResult"}]],["fn6",[{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/functions/v6.0.0/src/Data/Function/Uncurried.purs","end":[34,88]},"score":19,"packageInfo":{"values":["functions"],"tag":"Package"},"name":"Fn6","moduleName":"Data.Function.Uncurried","info":{"values":[{"typeArguments":[["t0",null],["t1",null],["t2",null],["t3",null],["t4",null],["t5",null],["t6",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A function of six arguments\n"}],"tag":"SearchResult"}]],["fn7",[{"values":[{"sourceSpan":{"start":[39,1],"name":".spago/functions/v6.0.0/src/Data/Function/Uncurried.purs","end":[39,96]},"score":19,"packageInfo":{"values":["functions"],"tag":"Package"},"name":"Fn7","moduleName":"Data.Function.Uncurried","info":{"values":[{"typeArguments":[["t0",null],["t1",null],["t2",null],["t3",null],["t4",null],["t5",null],["t6",null],["t7",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A function of seven arguments\n"}],"tag":"SearchResult"}]],["fn8",[{"values":[{"sourceSpan":{"start":[44,1],"name":".spago/functions/v6.0.0/src/Data/Function/Uncurried.purs","end":[44,104]},"score":19,"packageInfo":{"values":["functions"],"tag":"Package"},"name":"Fn8","moduleName":"Data.Function.Uncurried","info":{"values":[{"typeArguments":[["t0",null],["t1",null],["t2",null],["t3",null],["t4",null],["t5",null],["t6",null],["t7",null],["t8",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A function of eight arguments\n"}],"tag":"SearchResult"}]],["fn9",[{"values":[{"sourceSpan":{"start":[49,1],"name":".spago/functions/v6.0.0/src/Data/Function/Uncurried.purs","end":[49,112]},"score":19,"packageInfo":{"values":["functions"],"tag":"Package"},"name":"Fn9","moduleName":"Data.Function.Uncurried","info":{"values":[{"typeArguments":[["t0",null],["t1",null],["t2",null],["t3",null],["t4",null],["t5",null],["t6",null],["t7",null],["t8",null],["t9",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A function of nine arguments\n"}],"tag":"SearchResult"}]],["eof",[{"values":[{"sourceSpan":{"start":[76,1],"name":".spago/parsing/v10.2.0/src/Parsing/String.purs","end":[76,39]},"score":1,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"eof","moduleName":"Parsing.String","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Match “end-of-file,” the end of the input stream.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[73,1],"name":".spago/parsing/v10.2.0/src/Parsing/Token.purs","end":[73,43]},"score":1,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"eof","moduleName":"Parsing.Token","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Match the “end-of-file,” the end of the input stream.\n"}],"tag":"SearchResult"}]],["braces",[{"values":[{"sourceSpan":{"start":[258,1],"name":".spago/optparse/v5.0.0/src/Text/PrettyPrint/Leijen.purs","end":[258,21]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"braces","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Document @(braces x)@ encloses document @x@ in braces, \\\"{\\\" and\n\\\"}\\\".\n"}],"tag":"SearchResult"}]],["bracket",[{"values":[{"sourceSpan":{"start":[84,3],"name":".spago/fork/v6.0.0/src/Control/Monad/Fork/Class.purs","end":[84,91]},"score":1,"packageInfo":{"values":["fork"],"tag":"Package"},"name":"bracket","moduleName":"Control.Monad.Fork.Class","info":{"values":[{"typeClassArguments":[["e",null],["f",null],["m",null]],"typeClass":[["Control","Monad","Fork","Class"],"MonadBracket"],"type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Fork","Class"],"MonadBracket"],"constraintArgs":[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Fork","Class"],"BracketCondition"]},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[308,1],"name":".spago/aff/v7.1.0/src/Effect/Aff.purs","end":[308,73]},"score":13,"packageInfo":{"values":["aff"],"tag":"Package"},"name":"bracket","moduleName":"Effect.Aff","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Guarantees resource acquisition and cleanup. The first effect may acquire\nsome resource, while the second will dispose of it. The third effect makes\nuse of the resource. Disposal is always run last, regardless. Neither\nacquisition nor disposal may be cancelled and are guaranteed to run until\nthey complete.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[22,1],"name":".spago/mote/v1.1.0/src/Mote/Entry.purs","end":[22,83]},"score":0,"packageInfo":{"values":["mote"],"tag":"Package"},"name":"Bracket","moduleName":"Mote.Entry","info":{"values":[{"typeArguments":[["b",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A data type used to carry bracketing for an entry. The `r` type is\nexistentially hidden so that the resources created and freed within\nan entry can vary between items in a suite or plan.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[22,19],"name":".spago/mote/v1.1.0/src/Mote/Entry.purs","end":[22,83]},"score":0,"packageInfo":{"values":["mote"],"tag":"Package"},"name":"Bracket","moduleName":"Mote.Entry","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"ForAll","contents":["x",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"b"},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"b"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeVar","contents":"x"}]}]},null]}}]},{"tag":"TypeVar","contents":"x"}]},null]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[28,1],"name":".spago/mote/v1.1.0/src/Mote/Entry.purs","end":[28,57]},"score":0,"packageInfo":{"values":["mote"],"tag":"Package"},"name":"bracket","moduleName":"Mote.Entry","info":{"values":[{"type":{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"b"},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"b"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Mote","Entry"],"Bracket"]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a bracket value for the `Entry` record. The first argument runs\nbefore the group/item, possibly generating some kind of resource r. The\nsecond argument runs on test completion, accepting the `r` generated in\nallocation to allow it to de-allocate/clean up.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[118,1],"name":".spago/mote/v1.1.0/src/Mote/Monad.purs","end":[123,28]},"score":0,"packageInfo":{"values":["mote"],"tag":"Package"},"name":"bracket","moduleName":"Mote.Monad","info":{"values":[{"type":{"tag":"ForAll","contents":["bracket",{"tag":"ForAll","contents":["test",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["resource",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["before",{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"bracket"},{"tag":"TypeVar","contents":"resource"}]},{"tag":"RCons","contents":["after",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"resource"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"bracket"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"REmpty","contents":{}}]}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Mote","Monad"],"MoteT"]},{"tag":"TypeVar","contents":"bracket"}]},{"tag":"TypeVar","contents":"test"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Mote","Monad"],"MoteT"]},{"tag":"TypeVar","contents":"bracket"}]},{"tag":"TypeVar","contents":"test"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Specifies actions to run before and after the following group(s) and/or\ntest(s).\n\nThe bracketing is applied to every following group or test individually;\nit will be repeated when each group or test is run.\n"}],"tag":"SearchResult"}]],["bracketcondition",[{"values":[{"sourceSpan":{"start":[62,1],"name":".spago/fork/v6.0.0/src/Control/Monad/Fork/Class.purs","end":[65,13]},"score":1,"packageInfo":{"values":["fork"],"tag":"Package"},"name":"BracketCondition","moduleName":"Control.Monad.Fork.Class","info":{"values":[{"typeArguments":[["e",null],["a",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["bracketconditions",[{"values":[{"sourceSpan":{"start":[364,1],"name":".spago/aff/v7.1.0/src/Effect/Aff.purs","end":[368,4]},"score":13,"packageInfo":{"values":["aff"],"tag":"Package"},"name":"BracketConditions","moduleName":"Effect.Aff","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["killed",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},{"tag":"RCons","contents":["failed",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},{"tag":"RCons","contents":["completed",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},{"tag":"REmpty","contents":{}}]}]}]}]},"arguments":[["a",null],["b",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["brackets",[{"values":[{"sourceSpan":{"start":[273,1],"name":".spago/optparse/v5.0.0/src/Text/PrettyPrint/Leijen.purs","end":[273,23]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"brackets","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Document @(brackets x)@ encloses document @x@ in square brackets,\n\\\"[\\\" and \\\"]\\\".\n"}],"tag":"SearchResult"}]],["breakcap",[{"values":[{"sourceSpan":{"start":[186,1],"name":".spago/parsing/v10.2.0/src/Parsing/String/Replace.purs","end":[190,32]},"score":1,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"breakCap","moduleName":"Parsing.String.Replace","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Parsing"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"T3"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"#### Break on and capture one pattern\n\nFind the first occurence of a pattern in the input `String`, capture the found\npattern, and break the input `String` on the found pattern.\n\nThis function can be used instead of\n[Data.String.indexOf](https://pursuit.purescript.org/packages/purescript-strings/docs/Data.String#v:indexOf)\nor\n[Data.String.Regex.search](https://pursuit.purescript.org/packages/purescript-strings/docs/Data.String.Regex#v:search)\nor\n[Data.String.Regex.replace](https://pursuit.purescript.org/packages/purescript-strings/docs/Data.String.Regex#v:replace)\nand it allows using a parser for the pattern search.\n\nThis function can be used instead of\n[Data.String.takeWhile](https://pursuit.purescript.org/packages/purescript-strings/docs/Data.String#v:takeWhile)\nor\n[Data.String.dropWhile](https://pursuit.purescript.org/packages/purescript-strings/docs/Data.String#v:dropWhile)\nand it is predicated beyond more than just the next single `CodePoint`.\n\n#### Output\n\n- `Nothing` when no pattern match was found.\n- `Just (prefix /\\ parse_result /\\ suffix)` for the result of parsing the\n  pattern match, and the `prefix` string before and the `suffix` string\n  after the pattern match. `prefix` and `suffix` may be zero-length strings.\n\n#### Access the matched section of text\n\nTo capture the matched string combine the pattern\nparser `sep` with the `match` combinator.\n\nWith the matched string, we can reconstruct the input string.\nFor all `input`, `sep`, if\n\n```purescript\nlet (Just (prefix /\\ (infix /\\ _) /\\ suffix)) =\n      breakCap input (match sep)\n```\n\nthen\n\n```purescript\ninput == prefix <> infix <> suffix\n```\n#### Example\n\nFind the first pattern match and break the input string on the pattern.\n\n```purescript\nbreakCap \"hay needle hay\" (string \"needle\")\n```\n\nResult:\n\n```purescript\nJust (\"hay \" /\\ \"needle\" /\\ \" hay\")\n```\n\n#### Example\n\nFind the first pattern match, capture the matched text and the parsed result.\n\n```purescript\nbreakCap \"abc 123 def\" (match intDecimal)\n```\n\nResult:\n\n```purescript\nJust (\"abc \" /\\ (\"123\" /\\ 123) /\\ \" def\")\n```\n"}],"tag":"SearchResult"}]],["breakcapt",[{"values":[{"sourceSpan":{"start":[100,1],"name":".spago/parsing/v10.2.0/src/Parsing/String/Replace.purs","end":[106,36]},"score":1,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"breakCapT","moduleName":"Parsing.String.Replace","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Rec","Class"],"MonadRec"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"T3"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Monad transformer version of `breakCap`. The `sep` parser will run\nin the monad context.\n"}],"tag":"SearchResult"}]],["briefdesc",[{"values":[{"sourceSpan":{"start":[392,1],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Builder.purs","end":[392,33]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"briefDesc","moduleName":"Options.Applicative.Builder","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Builder"],"InfoMod"]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Only show a brief description in the help text of this parser (i.e.\noptions with the `hidden` modifier will NOT be displayed,\nunlike `fullDesc`).\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[97,1],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Help/Core.purs","end":[97,60]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"briefDesc","moduleName":"Options.Applicative.Help.Core","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Generate a brief help text for a parser.\n"}],"tag":"SearchResult"}]],["brightblack",[{"values":[{"sourceSpan":{"start":[156,3],"name":".spago/ansi/v7.0.0/src/Ansi/Codes.purs","end":[156,16]},"score":2,"packageInfo":{"values":["ansi"],"tag":"Package"},"name":"BrightBlack","moduleName":"Ansi.Codes","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["brightblue",[{"values":[{"sourceSpan":{"start":[160,3],"name":".spago/ansi/v7.0.0/src/Ansi/Codes.purs","end":[160,15]},"score":2,"packageInfo":{"values":["ansi"],"tag":"Package"},"name":"BrightBlue","moduleName":"Ansi.Codes","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["brightcyan",[{"values":[{"sourceSpan":{"start":[162,3],"name":".spago/ansi/v7.0.0/src/Ansi/Codes.purs","end":[162,15]},"score":2,"packageInfo":{"values":["ansi"],"tag":"Package"},"name":"BrightCyan","moduleName":"Ansi.Codes","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["brightgreen",[{"values":[{"sourceSpan":{"start":[158,3],"name":".spago/ansi/v7.0.0/src/Ansi/Codes.purs","end":[158,16]},"score":2,"packageInfo":{"values":["ansi"],"tag":"Package"},"name":"BrightGreen","moduleName":"Ansi.Codes","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["brightmagenta",[{"values":[{"sourceSpan":{"start":[161,3],"name":".spago/ansi/v7.0.0/src/Ansi/Codes.purs","end":[161,18]},"score":2,"packageInfo":{"values":["ansi"],"tag":"Package"},"name":"BrightMagenta","moduleName":"Ansi.Codes","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["brightred",[{"values":[{"sourceSpan":{"start":[157,3],"name":".spago/ansi/v7.0.0/src/Ansi/Codes.purs","end":[157,14]},"score":2,"packageInfo":{"values":["ansi"],"tag":"Package"},"name":"BrightRed","moduleName":"Ansi.Codes","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["brightwhite",[{"values":[{"sourceSpan":{"start":[163,3],"name":".spago/ansi/v7.0.0/src/Ansi/Codes.purs","end":[163,16]},"score":2,"packageInfo":{"values":["ansi"],"tag":"Package"},"name":"BrightWhite","moduleName":"Ansi.Codes","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["brightyellow",[{"values":[{"sourceSpan":{"start":[159,3],"name":".spago/ansi/v7.0.0/src/Ansi/Codes.purs","end":[159,17]},"score":2,"packageInfo":{"values":["ansi"],"tag":"Package"},"name":"BrightYellow","moduleName":"Ansi.Codes","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["bringtofront",[{"values":[{"sourceSpan":{"start":[322,1],"name":".spago/toppokki/5992e93396a734c980ef61c74df5b6ab46108920/src/Toppoki.purs","end":[322,33]},"score":0,"packageInfo":{"values":["toppokki"],"tag":"Package"},"name":"bringToFront","moduleName":"Toppokki","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Toppokki"],"Page"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Brings page to front (activates tab)\n"}],"tag":"SearchResult"}]],["browser",[{"values":[{"sourceSpan":{"start":[43,1],"name":"src/Internal/Test/E2E/Types.purs","end":[43,24]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"Browser","moduleName":"Ctl.Internal.Test.E2E.Types","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"Browser binary path or short name\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[20,1],"name":".spago/toppokki/5992e93396a734c980ef61c74df5b6ab46108920/src/Toppoki.purs","end":[20,36]},"score":0,"packageInfo":{"values":["toppokki"],"tag":"Package"},"name":"Browser","moduleName":"Toppokki","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["browserarg",[{"values":[{"sourceSpan":{"start":[58,1],"name":"src/Internal/Test/E2E/Types.purs","end":[58,25]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"BrowserArg","moduleName":"Ctl.Internal.Test.E2E.Types","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Prim"],"String"]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"Browser CLI interface argument\n"}],"tag":"SearchResult"}]],["browserevent",[{"values":[{"sourceSpan":{"start":[29,1],"name":"src/Internal/Test/E2E/Feedback.purs","end":[33,19]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"BrowserEvent","moduleName":"Ctl.Internal.Test.E2E.Feedback","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["browseroptions",[{"values":[{"sourceSpan":{"start":[125,1],"name":"src/Internal/Test/E2E/Options.purs","end":[125,49]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"BrowserOptions","moduleName":"Ctl.Internal.Test.E2E.Options","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Test","E2E","Options"],"CommonOptions_"]},{"tag":"REmpty","contents":{}}]}}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"CLI options for the `browser` command.\n"}],"tag":"SearchResult"}]],["ascbor",[{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/cardano-types/v1.0.1/src/Cardano/AsCbor.purs","end":[18,37]},"score":0,"packageInfo":{"values":["cardano-types"],"tag":"Package"},"name":"AsCbor","moduleName":"Cardano.AsCbor","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["a",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"A typeclass for Cardano domain types that can encoded to and decoded from `CborBytes`\n"}],"tag":"SearchResult"}]],["ascii",[{"values":[{"sourceSpan":{"start":[10,3],"name":".spago/node-buffer/v8.0.0/src/Node/Encoding.purs","end":[10,10]},"score":7,"packageInfo":{"values":["node-buffer"],"tag":"Package"},"name":"ASCII","moduleName":"Node.Encoding","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["aserrormessage",[{"values":[{"sourceSpan":{"start":[124,1],"name":".spago/parsing/v10.2.0/src/Parsing/Combinators.purs","end":[124,73]},"score":1,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"asErrorMessage","moduleName":"Parsing.Combinators","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Flipped `(<?>)`.\n"}],"tag":"SearchResult"}]],["asin",[{"values":[{"sourceSpan":{"start":[137,1],"name":".spago/numbers/v9.0.0/src/Data/Number.purs","end":[137,40]},"score":11,"packageInfo":{"values":["numbers"],"tag":"Package"},"name":"asin","moduleName":"Data.Number","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the inverse sine in radians of the argument.\n```purs\n> asin 1.0 == pi / 2.0\ntrue\n```\n"}],"tag":"SearchResult"}]],["asindex",[{"values":[{"sourceSpan":{"start":[25,1],"name":".spago/profunctor-lenses/v8.0.0/src/Data/Lens/Indexed.purs","end":[29,21]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"asIndex","moduleName":"Data.Lens.Indexed","info":{"values":[{"type":{"tag":"ForAll","contents":["p",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Profunctor"],"Profunctor"],"constraintArgs":[{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"IndexedOptic"]},{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Optic"]},{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["asintn",[{"values":[{"sourceSpan":{"start":[198,1],"name":".spago/js-bigints/36a7d8ac75a7230043ae511f3145f9ed130954a9/src/JS/BigInt.purs","end":[198,46]},"score":0,"packageInfo":{"values":["js-bigints"],"tag":"Package"},"name":"asIntN","moduleName":"JS.BigInt","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["JS","BigInt"],"BigInt"]}]},{"tag":"TypeConstructor","contents":[["JS","BigInt"],"BigInt"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Clamps a BigInt value to the given number of bits, and returns that value as a signed integer.\n"}],"tag":"SearchResult"}]],["ask",[{"values":[{"sourceSpan":{"start":[15,3],"name":".spago/transformers/v6.0.0/src/Control/Comonad/Env/Class.purs","end":[15,28]},"score":23,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"ask","moduleName":"Control.Comonad.Env.Class","info":{"values":[{"typeClassArguments":[["e",null],["w",null]],"typeClass":[["Control","Comonad","Env","Class"],"ComonadAsk"],"type":{"tag":"ForAll","contents":["e",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Comonad","Env","Class"],"ComonadAsk"],"constraintArgs":[{"tag":"TypeVar","contents":"e"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"e"}]}]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[17,3],"name":".spago/transformers/v6.0.0/src/Control/Monad/Reader/Class.purs","end":[17,13]},"score":23,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"ask","moduleName":"Control.Monad.Reader.Class","info":{"values":[{"typeClassArguments":[["r",null],["m",null]],"typeClass":[["Control","Monad","Reader","Class"],"MonadAsk"],"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Reader","Class"],"MonadAsk"],"constraintArgs":[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"r"}]}]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["askcoinsperutxounit",[{"values":[{"sourceSpan":{"start":[58,1],"name":"src/Internal/BalanceTx/Types.purs","end":[58,39]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"askCoinsPerUtxoUnit","moduleName":"Ctl.Internal.BalanceTx.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","BalanceTx","Types"],"BalanceTxM"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Coin"],"Coin"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["askcostmodelsforlanguages",[{"values":[{"sourceSpan":{"start":[80,1],"name":"src/Internal/BalanceTx/Types.purs","end":[80,81]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"askCostModelsForLanguages","moduleName":"Ctl.Internal.BalanceTx.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Language"],"Language"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","BalanceTx","Types"],"BalanceTxM"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Language"],"Language"]}]},{"tag":"TypeConstructor","contents":[["Cardano","Types","CostModel"],"CostModel"]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["asknetworkid",[{"values":[{"sourceSpan":{"start":[63,1],"name":"src/Internal/BalanceTx/Types.purs","end":[63,37]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"askNetworkId","moduleName":"Ctl.Internal.BalanceTx.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","BalanceTx","Types"],"BalanceTxM"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","NetworkId"],"NetworkId"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["asks",[{"values":[{"sourceSpan":{"start":[18,1],"name":".spago/transformers/v6.0.0/src/Control/Comonad/Env/Class.purs","end":[18,69]},"score":23,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"asks","moduleName":"Control.Comonad.Env.Class","info":{"values":[{"type":{"tag":"ForAll","contents":["e1",{"tag":"ForAll","contents":["e2",{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Comonad","Env","Class"],"ComonadAsk"],"constraintArgs":[{"tag":"TypeVar","contents":"e1"},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"e1"}]},{"tag":"TypeVar","contents":"e2"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"e2"}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get a value which depends on the environment.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/transformers/v6.0.0/src/Control/Monad/Reader/Class.purs","end":[23,54]},"score":23,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"asks","moduleName":"Control.Monad.Reader.Class","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Reader","Class"],"MonadAsk"],"constraintArgs":[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Projects a value from the global context in a `MonadAsk`.\n"}],"tag":"SearchResult"}]],["asksconstraints",[{"values":[{"sourceSpan":{"start":[51,1],"name":"src/Internal/BalanceTx/Types.purs","end":[52,70]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"asksConstraints","moduleName":"Ctl.Internal.BalanceTx.Types","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","BalanceTx","Constraints"],"BalanceTxConstraints"]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","BalanceTx","Types"],"BalanceTxM"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["asnegative",[{"values":[{"sourceSpan":{"start":[140,1],"name":".spago/cardano-types/v1.0.1/src/Cardano/Types/Int.purs","end":[140,34]},"score":0,"packageInfo":{"values":["cardano-types"],"tag":"Package"},"name":"asNegative","moduleName":"Cardano.Types.Int","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","BigNum"],"BigNum"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["asoneof",[{"values":[{"sourceSpan":{"start":[57,1],"name":".spago/untagged-union/v1.0.0/src/Untagged/Union.purs","end":[57,66]},"score":0,"packageInfo":{"values":["untagged-union"],"tag":"Package"},"name":"asOneOf","moduleName":"Untagged.Union","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["t",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Untagged","Castable"],"Castable"],"constraintArgs":[{"tag":"TypeVar","contents":"a"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Untagged","Union"],"OneOf"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"t"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Untagged","Union"],"OneOf"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"t"}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["aspositive",[{"values":[{"sourceSpan":{"start":[137,1],"name":".spago/cardano-types/v1.0.1/src/Cardano/Types/Int.purs","end":[137,34]},"score":0,"packageInfo":{"values":["cardano-types"],"tag":"Package"},"name":"asPositive","moduleName":"Cardano.Types.Int","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Int"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","BigNum"],"BigNum"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["aspubkeyhash",[{"values":[{"sourceSpan":{"start":[43,1],"name":".spago/cardano-types/v1.0.1/src/Cardano/Types/Credential.purs","end":[43,51]},"score":0,"packageInfo":{"values":["cardano-types"],"tag":"Package"},"name":"asPubKeyHash","moduleName":"Cardano.Types.Credential","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Credential"],"Credential"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Ed25519KeyHash"],"Ed25519KeyHash"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["asscripthash",[{"values":[{"sourceSpan":{"start":[47,1],"name":".spago/cardano-types/v1.0.1/src/Cardano/Types/Credential.purs","end":[47,47]},"score":0,"packageInfo":{"values":["cardano-types"],"tag":"Package"},"name":"asScriptHash","moduleName":"Cardano.Types.Credential","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Credential"],"Credential"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","ScriptHash"],"ScriptHash"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["assert",[{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/assert/v6.0.0/src/Test/Assert.purs","end":[21,33]},"score":42,"packageInfo":{"values":["assert"],"tag":"Package"},"name":"assert","moduleName":"Test.Assert","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Throws a runtime exception with message \"Assertion failed\" when the boolean\nvalue is false.\n"}],"tag":"SearchResult"}]],["assert'",[{"values":[{"sourceSpan":{"start":[26,1],"name":".spago/assert/v6.0.0/src/Test/Assert.purs","end":[26,44]},"score":42,"packageInfo":{"values":["assert"],"tag":"Package"},"name":"assert'","moduleName":"Test.Assert","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Throws a runtime exception with the specified message when the boolean\nvalue is false.\n"}],"tag":"SearchResult"}]],["assertcontract",[{"values":[{"sourceSpan":{"start":[325,1],"name":"src/Contract/Test/Assert.purs","end":[328,28]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"assertContract","moduleName":"Contract.Test.Assert","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Contract","Test","Assert"],"ContractAssertionFailure"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Test","Assert"],"ContractAssertion"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[193,1],"name":"test/Plutip/UtxoDistribution.purs","end":[193,53]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"assertContract","moduleName":"Test.Ctl.Plutip.UtxoDistribution","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["assertcontractequal",[{"values":[{"sourceSpan":{"start":[350,1],"name":"src/Contract/Test/Assert.purs","end":[356,28]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"assertContractEqual","moduleName":"Contract.Test.Assert","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Test","Assert"],"ContractAssertion"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["assertcontractexpectedactual",[{"values":[{"sourceSpan":{"start":[339,1],"name":"src/Contract/Test/Assert.purs","end":[345,28]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"assertContractExpectedActual","moduleName":"Contract.Test.Assert","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Test","Assert"],"ExpectedActual"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Contract","Test","Assert"],"ContractAssertionFailure"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Test","Assert"],"ContractAssertion"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["assertcontractmaybe",[{"values":[{"sourceSpan":{"start":[331,1],"name":"src/Contract/Test/Assert.purs","end":[335,25]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"assertContractMaybe","moduleName":"Contract.Test.Assert","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Contract","Test","Assert"],"ContractAssertionFailure"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Test","Assert"],"ContractAssertion"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["assertcorrectdistribution",[{"values":[{"sourceSpan":{"start":[228,1],"name":"test/Plutip/UtxoDistribution.purs","end":[230,19]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"assertCorrectDistribution","moduleName":"Test.Ctl.Plutip.UtxoDistribution","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Tuple","Nested"],"/\\"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Wallet","Key"],"KeyWallet"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Test","UtxoDistribution"],"InitialUTxOs"]}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"For each wallet, assert that there is a one-to-one correspondance\nbetween its utxo set and its expected utxo amounts.\n"}],"tag":"SearchResult"}]],["assertequal",[{"values":[{"sourceSpan":{"start":[68,1],"name":".spago/assert/v6.0.0/src/Test/Assert.purs","end":[73,17]},"score":42,"packageInfo":{"values":["assert"],"tag":"Package"},"name":"assertEqual","moduleName":"Test.Assert","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["actual",{"tag":"TypeVar","contents":"a"},{"tag":"RCons","contents":["expected",{"tag":"TypeVar","contents":"a"},{"tag":"REmpty","contents":{}}]}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Compares the `expected` and `actual` values for equality and\nthrows a runtime exception when the values are not equal.\n\nThe message indicates the expected value and the actual value.\n"}],"tag":"SearchResult"}]],["assertequal'",[{"values":[{"sourceSpan":{"start":[80,1],"name":".spago/assert/v6.0.0/src/Test/Assert.purs","end":[86,17]},"score":42,"packageInfo":{"values":["assert"],"tag":"Package"},"name":"assertEqual'","moduleName":"Test.Assert","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["actual",{"tag":"TypeVar","contents":"a"},{"tag":"RCons","contents":["expected",{"tag":"TypeVar","contents":"a"},{"tag":"REmpty","contents":{}}]}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Compares the `expected` and `actual` values for equality and throws a\nruntime exception with the specified message when the values are not equal.\n\nThe message also indicates the expected value and the actual value.\n"}],"tag":"SearchResult"}]],["assertequals",[{"values":[{"sourceSpan":{"start":[259,1],"name":".spago/quickcheck/v8.0.1/src/Test/QuickCheck.purs","end":[259,61]},"score":14,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"assertEquals","moduleName":"Test.QuickCheck","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Self-documenting equality assertion\n"}],"tag":"SearchResult"}]],["assertfalse",[{"values":[{"sourceSpan":{"start":[120,1],"name":".spago/assert/v6.0.0/src/Test/Assert.purs","end":[122,17]},"score":42,"packageInfo":{"values":["assert"],"tag":"Package"},"name":"assertFalse","moduleName":"Test.Assert","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Throws a runtime exception when the value is `true`.\n\nThe message indicates the expected value (`false`)\nand the actual value (`true`).\n"}],"tag":"SearchResult"}]],["assertfalse'",[{"values":[{"sourceSpan":{"start":[130,1],"name":".spago/assert/v6.0.0/src/Test/Assert.purs","end":[133,17]},"score":42,"packageInfo":{"values":["assert"],"tag":"Package"},"name":"assertFalse'","moduleName":"Test.Assert","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Throws a runtime exception with the specified message when the value is\n`true`.\n\nThe message also indicates the expected value (`false`)\nand the actual value (`true`).\n"}],"tag":"SearchResult"}]],["assertgreaterthan",[{"values":[{"sourceSpan":{"start":[282,1],"name":".spago/quickcheck/v8.0.1/src/Test/QuickCheck.purs","end":[282,67]},"score":14,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"assertGreaterThan","moduleName":"Test.QuickCheck","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["assertgreaterthaneq",[{"values":[{"sourceSpan":{"start":[287,1],"name":".spago/quickcheck/v8.0.1/src/Test/QuickCheck.purs","end":[287,69]},"score":14,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"assertGreaterThanEq","moduleName":"Test.QuickCheck","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["assertiontocheck",[{"values":[{"sourceSpan":{"start":[308,1],"name":"src/Contract/Test/Assert.purs","end":[312,21]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"assertionToCheck","moduleName":"Contract.Test.Assert","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Test","Assert"],"ContractAssertion"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Test","Assert"],"ContractCheck"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a check that simply asserts something about a `Contract` result.\n\nIf a `Contract` throws an exception, the assertion is never checked,\nbecause the result is never computed. In this case, a warning will be\nprinted, containing the given description.\n"}],"tag":"SearchResult"}]],["assertlessthan",[{"values":[{"sourceSpan":{"start":[272,1],"name":".spago/quickcheck/v8.0.1/src/Test/QuickCheck.purs","end":[272,64]},"score":14,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"assertLessThan","moduleName":"Test.QuickCheck","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["assertlessthaneq",[{"values":[{"sourceSpan":{"start":[277,1],"name":".spago/quickcheck/v8.0.1/src/Test/QuickCheck.purs","end":[277,66]},"score":14,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"assertLessThanEq","moduleName":"Test.QuickCheck","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["assertnewutxosataddress",[{"values":[{"sourceSpan":{"start":[414,1],"name":"src/Contract/Test/Assert.purs","end":[419,25]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"assertNewUtxosAtAddress","moduleName":"Contract.Test.Assert","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Test","Assert"],"Labeled"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Address"],"Address"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","TransactionHash"],"TransactionHash"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","TransactionOutput"],"TransactionOutput"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Test","Assert"],"ContractAssertion"]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Test","Assert"],"ContractAssertion"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Assert some property of address UTxOs created by a Transaction.\n"}],"tag":"SearchResult"}]],["assertnewutxosinwallet",[{"values":[{"sourceSpan":{"start":[426,1],"name":"src/Contract/Test/Assert.purs","end":[430,25]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"assertNewUtxosInWallet","moduleName":"Contract.Test.Assert","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","TransactionHash"],"TransactionHash"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","TransactionOutput"],"TransactionOutput"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Test","Assert"],"ContractAssertion"]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Test","Assert"],"ContractAssertion"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Assert some property of wallet UTxOs created by a Transaction.\n"}],"tag":"SearchResult"}]],["assertnotequals",[{"values":[{"sourceSpan":{"start":[266,1],"name":".spago/quickcheck/v8.0.1/src/Test/QuickCheck.purs","end":[266,64]},"score":14,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"assertNotEquals","moduleName":"Test.QuickCheck","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Test","QuickCheck"],"Result"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Self-documenting inequality assertion\n"}],"tag":"SearchResult"}]],["assertnoutxosataddress",[{"values":[{"sourceSpan":{"start":[221,1],"name":"test/Plutip/UtxoDistribution.purs","end":[221,51]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"assertNoUtxosAtAddress","moduleName":"Test.Ctl.Plutip.UtxoDistribution","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Address"],"Address"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["assertnoutxosatenterpriseaddress",[{"values":[{"sourceSpan":{"start":[207,1],"name":"test/Plutip/UtxoDistribution.purs","end":[208,32]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"assertNoUtxosAtEnterpriseAddress","moduleName":"Test.Ctl.Plutip.UtxoDistribution","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Wallet","Key"],"KeyWallet"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["assertoutputhasdatum",[{"values":[{"sourceSpan":{"start":[792,1],"name":"src/Contract/Test/Assert.purs","end":[795,28]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"assertOutputHasDatum","moduleName":"Contract.Test.Assert","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","OutputDatum"],"OutputDatum"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Test","Assert"],"Labeled"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","TransactionOutput"],"TransactionOutput"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Test","Assert"],"ContractAssertion"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Requires that the transaction output contains the specified datum,\ndatum hash or does not contain anything.\n"}],"tag":"SearchResult"}]],["assertoutputhasrefscript",[{"values":[{"sourceSpan":{"start":[804,1],"name":"src/Contract/Test/Assert.purs","end":[807,28]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"assertOutputHasRefScript","moduleName":"Contract.Test.Assert","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","ScriptRef"],"ScriptRef"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Test","Assert"],"Labeled"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","TransactionOutput"],"TransactionOutput"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Test","Assert"],"ContractAssertion"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Requires that the transaction output contains the specified reference\nscript.\n"}],"tag":"SearchResult"}]],["assertthrows",[{"values":[{"sourceSpan":{"start":[41,1],"name":".spago/assert/v6.0.0/src/Test/Assert.purs","end":[41,53]},"score":42,"packageInfo":{"values":["assert"],"tag":"Package"},"name":"assertThrows","moduleName":"Test.Assert","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Throws a runtime exception with message \"Assertion failed: An error should\nhave been thrown\", unless the argument throws an exception when evaluated.\n\nThis function is specifically for testing unsafe pure code; for example,\nto make sure that an exception is thrown if a precondition is not\nsatisfied. Functions which use `Effect a` can be\ntested with `catchException` instead.\n"}],"tag":"SearchResult"}]],["assertthrows'",[{"values":[{"sourceSpan":{"start":[52,1],"name":".spago/assert/v6.0.0/src/Test/Assert.purs","end":[56,17]},"score":42,"packageInfo":{"values":["assert"],"tag":"Package"},"name":"assertThrows'","moduleName":"Test.Assert","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Throws a runtime exception with the specified message, unless the argument\nthrows an exception when evaluated.\n\nThis function is specifically for testing unsafe pure code; for example,\nto make sure that an exception is thrown if a precondition is not\nsatisfied. Functions which use `Effect a` can be\ntested with `catchException` instead.\n"}],"tag":"SearchResult"}]],["asserttrue",[{"values":[{"sourceSpan":{"start":[100,1],"name":".spago/assert/v6.0.0/src/Test/Assert.purs","end":[102,17]},"score":42,"packageInfo":{"values":["assert"],"tag":"Package"},"name":"assertTrue","moduleName":"Test.Assert","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Throws a runtime exception when the value is `false`.\n\nThe message indicates the expected value (`true`)\nand the actual value (`false`).\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[90,1],"name":"test/Utils.purs","end":[96,12]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"assertTrue","moduleName":"Test.Ctl.Utils","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test a boolean value, throwing the provided string as an error if `false`\n"}],"tag":"SearchResult"}]],["asserttrue'",[{"values":[{"sourceSpan":{"start":[110,1],"name":".spago/assert/v6.0.0/src/Test/Assert.purs","end":[113,17]},"score":42,"packageInfo":{"values":["assert"],"tag":"Package"},"name":"assertTrue'","moduleName":"Test.Assert","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Throws a runtime exception with the specified message when the value is\n`false`.\n\nThe message also indicates the expected value (`true`)\nand the actual value (`false`).\n"}],"tag":"SearchResult"}]],["asserttrue_",[{"values":[{"sourceSpan":{"start":[99,1],"name":"test/Utils.purs","end":[104,12]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"assertTrue_","moduleName":"Test.Ctl.Utils","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["asserttxhasmetadata",[{"values":[{"sourceSpan":{"start":[816,1],"name":"src/Contract/Test/Assert.purs","end":[824,28]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"assertTxHasMetadata","moduleName":"Contract.Test.Assert","info":{"values":[{"type":{"tag":"ForAll","contents":["metadata",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ForAll","contents":["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Ctl","Internal","Metadata","MetadataType"],"MetadataType"],"constraintArgs":[{"tag":"TypeVar","contents":"metadata"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"metadata"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Show"],"Show"],"constraintArgs":[{"tag":"TypeVar","contents":"metadata"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Contract","Test","Assert"],"Label"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","TransactionHash"],"TransactionHash"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"metadata"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Contract","Test","Assert"],"ContractAssertion"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["assertutxosatplutipwalletaddress",[{"values":[{"sourceSpan":{"start":[201,1],"name":"test/Plutip/UtxoDistribution.purs","end":[202,32]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"assertUtxosAtPlutipWalletAddress","moduleName":"Test.Ctl.Plutip.UtxoDistribution","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Wallet","Key"],"KeyWallet"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"For a plutip test wallet, assert that any utxos held by the\nwallet are at the expected address. If the wallet has a stake\nkey, this function assumes the expected address is the base\naddress, otherwise it assumes the expected address is the\nenterprise address.\n"}],"tag":"SearchResult"}]],["asset",[{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/cardano-types/v1.0.1/src/Cardano/Types/Asset.purs","end":[16,51]},"score":0,"packageInfo":{"values":["cardano-types"],"tag":"Package"},"name":"Asset","moduleName":"Cardano.Types.Asset","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[16,12],"name":".spago/cardano-types/v1.0.1/src/Cardano/Types/Asset.purs","end":[16,19]},"score":0,"packageInfo":{"values":["cardano-types"],"tag":"Package"},"name":"Asset","moduleName":"Cardano.Types.Asset","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Cardano","Types","ScriptHash"],"ScriptHash"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","AssetName"],"AssetName"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["assetclass",[{"values":[{"sourceSpan":{"start":[12,1],"name":".spago/cardano-types/v1.0.1/src/Cardano/Types/AssetClass.purs","end":[12,50]},"score":0,"packageInfo":{"values":["cardano-types"],"tag":"Package"},"name":"AssetClass","moduleName":"Cardano.Types.AssetClass","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[12,17],"name":".spago/cardano-types/v1.0.1/src/Cardano/Types/AssetClass.purs","end":[12,29]},"score":0,"packageInfo":{"values":["cardano-types"],"tag":"Package"},"name":"AssetClass","moduleName":"Cardano.Types.AssetClass","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Cardano","Types","ScriptHash"],"ScriptHash"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","AssetName"],"AssetName"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["assetname",[{"values":[{"sourceSpan":{"start":[842,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[842,38]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"AssetName","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[30,1],"name":".spago/cardano-types/v1.0.1/src/Cardano/Types/AssetName.purs","end":[30,44]},"score":0,"packageInfo":{"values":["cardano-types"],"tag":"Package"},"name":"AssetName","moduleName":"Cardano.Types.AssetName","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[30,19],"name":".spago/cardano-types/v1.0.1/src/Cardano/Types/AssetName.purs","end":[30,44]},"score":0,"packageInfo":{"values":["cardano-types"],"tag":"Package"},"name":"AssetName","moduleName":"Cardano.Types.AssetName","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"AssetName"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["assetname_name",[{"values":[{"sourceSpan":{"start":[845,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[845,56]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"assetName_name","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"AssetName"]}]},{"tag":"TypeConstructor","contents":[["Data","ByteArray"],"ByteArray"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["assetname_new",[{"values":[{"sourceSpan":{"start":[844,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[844,55]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"assetName_new","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","ByteArray"],"ByteArray"]}]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"AssetName"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["assetnames",[{"values":[{"sourceSpan":{"start":[858,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[858,39]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"AssetNames","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["assetnames_new",[{"values":[{"sourceSpan":{"start":[860,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[860,51]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"assetNames_new","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"AssetNames"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["assets",[{"values":[{"sourceSpan":{"start":[875,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[875,35]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"Assets","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["assets_new",[{"values":[{"sourceSpan":{"start":[877,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[877,43]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"assets_new","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"Assets"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["assettovalue",[{"values":[{"sourceSpan":{"start":[217,1],"name":".spago/cardano-types/v1.0.1/src/Cardano/Types/Value.purs","end":[217,46]},"score":0,"packageInfo":{"values":["cardano-types"],"tag":"Package"},"name":"assetToValue","moduleName":"Cardano.Types.Value","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","AssetClass"],"AssetClass"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","BigNum"],"BigNum"]}]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Value"],"Value"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["assign",[{"values":[{"sourceSpan":{"start":[115,1],"name":".spago/profunctor-lenses/v8.0.0/src/Data/Lens/Setter.purs","end":[115,74]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"assign","moduleName":"Data.Lens.Setter","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","State","Class"],"MonadState"],"constraintArgs":[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Setter"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Set the foci of a `Setter` in a monadic state to a constant value.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[60,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/Location.purs","end":[60,59]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"assign","moduleName":"Web.HTML.Location","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","Location"],"Location"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["assignjust",[{"values":[{"sourceSpan":{"start":[143,1],"name":".spago/profunctor-lenses/v8.0.0/src/Data/Lens/Setter.purs","end":[143,86]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"assignJust","moduleName":"Data.Lens.Setter","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","State","Class"],"MonadState"],"constraintArgs":[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Setter"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["assoc",[{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/argonaut-codecs/v9.1.0/src/Data/Argonaut/Encode/Combinators.purs","end":[23,68]},"score":2,"packageInfo":{"values":["argonaut-codecs"],"tag":"Package"},"name":"assoc","moduleName":"Data.Argonaut.Encode.Combinators","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Argonaut","Encode","Class"],"EncodeJson"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The named Encoders of the `(:=)` operator.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[103,1],"name":".spago/argonaut-codecs/v9.1.0/src/Data/Argonaut/Encode/Encoders.purs","end":[103,67]},"score":2,"packageInfo":{"values":["argonaut-codecs"],"tag":"Package"},"name":"assoc","moduleName":"Data.Argonaut.Encode.Encoders","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[49,1],"name":".spago/arrays/v7.1.0/src/Data/Array/ST.purs","end":[49,44]},"score":20,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"Assoc","moduleName":"Data.Array.ST","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["value",{"tag":"TypeVar","contents":"a"},{"tag":"RCons","contents":["index",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"REmpty","contents":{}}]}]}]},"arguments":[["a",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"An element and its index.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[142,1],"name":".spago/options/v7.0.0/src/Data/Options.purs","end":[142,68]},"score":3,"packageInfo":{"values":["options"],"tag":"Package"},"name":"assoc","moduleName":"Data.Options","info":{"values":[{"type":{"tag":"ForAll","contents":["opt",{"tag":"ForAll","contents":["value",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"tag":"TypeVar","contents":"opt"}]},{"tag":"TypeVar","contents":"value"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"value"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Options"],"Options"]},{"tag":"TypeVar","contents":"opt"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Associates a value with a specific option.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[183,1],"name":".spago/these/v6.0.0/src/Data/These.purs","end":[183,66]},"score":1,"packageInfo":{"values":["these"],"tag":"Package"},"name":"assoc","moduleName":"Data.These","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeVar","contents":"c"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Re-associate `These` from left to right.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[20,1],"name":".spago/parsing/v10.2.0/src/Parsing/Expr.purs","end":[20,48]},"score":1,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"Assoc","moduleName":"Parsing.Expr","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["associative",[{"values":[{"sourceSpan":{"start":[34,1],"name":".spago/properties/v0.2.0/src/Control/Algebra/Properties.purs","end":[34,60]},"score":1,"packageInfo":{"values":["properties"],"tag":"Package"},"name":"associative","moduleName":"Control.Algebra.Properties","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["assocleft",[{"values":[{"sourceSpan":{"start":[20,24],"name":".spago/parsing/v10.2.0/src/Parsing/Expr.purs","end":[20,35]},"score":1,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"AssocLeft","moduleName":"Parsing.Expr","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["assocnone",[{"values":[{"sourceSpan":{"start":[20,12],"name":".spago/parsing/v10.2.0/src/Parsing/Expr.purs","end":[20,23]},"score":1,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"AssocNone","moduleName":"Parsing.Expr","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["assocoptional",[{"values":[{"sourceSpan":{"start":[31,1],"name":".spago/argonaut-codecs/v9.1.0/src/Data/Argonaut/Encode/Combinators.purs","end":[36,31]},"score":2,"packageInfo":{"values":["argonaut-codecs"],"tag":"Package"},"name":"assocOptional","moduleName":"Data.Argonaut.Encode.Combinators","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Argonaut","Encode","Class"],"EncodeJson"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The named Encoders of the `(:=?)` operator.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[106,1],"name":".spago/argonaut-codecs/v9.1.0/src/Data/Argonaut/Encode/Encoders.purs","end":[111,31]},"score":2,"packageInfo":{"values":["argonaut-codecs"],"tag":"Package"},"name":"assocOptional","moduleName":"Data.Argonaut.Encode.Encoders","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["assocright",[{"values":[{"sourceSpan":{"start":[20,36],"name":".spago/parsing/v10.2.0/src/Parsing/Expr.purs","end":[20,48]},"score":1,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"AssocRight","moduleName":"Parsing.Expr","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["asuintn",[{"values":[{"sourceSpan":{"start":[201,1],"name":".spago/js-bigints/36a7d8ac75a7230043ae511f3145f9ed130954a9/src/JS/BigInt.purs","end":[201,47]},"score":0,"packageInfo":{"values":["js-bigints"],"tag":"Package"},"name":"asUintN","moduleName":"JS.BigInt","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["JS","BigInt"],"BigInt"]}]},{"tag":"TypeConstructor","contents":[["JS","BigInt"],"BigInt"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Clamps a BigInt value to the given number of bits, and returns that value as an unsigned integer.\n"}],"tag":"SearchResult"}]],["asymmetric",[{"values":[{"sourceSpan":{"start":[25,1],"name":".spago/properties/v0.2.0/src/Control/Algebra/Properties.purs","end":[25,61]},"score":1,"packageInfo":{"values":["properties"],"tag":"Package"},"name":"asymmetric","moduleName":"Control.Algebra.Properties","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["async",[{"values":[{"sourceSpan":{"start":[12,3],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLImageElement/DecodingHint.purs","end":[12,10]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"Async","moduleName":"Web.HTML.HTMLImageElement.DecodingHint","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[65,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLScriptElement.purs","end":[65,60]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"async","moduleName":"Web.HTML.HTMLScriptElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLScriptElement"],"HTMLScriptElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_unpacklistcontainer",[{"values":[{"sourceSpan":{"start":[61,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib/Internal.purs","end":[61,64]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"_unpackListContainer","moduleName":"Cardano.Serialization.Lib.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["e",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"e"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_unpackmapcontainer",[{"values":[{"sourceSpan":{"start":[122,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib/Internal.purs","end":[125,36]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"_unpackMapContainer","moduleName":"Cardano.Serialization.Lib.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["k",{"tag":"ForAll","contents":["v",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["key",{"tag":"TypeVar","contents":"k"},{"tag":"RCons","contents":["value",{"tag":"TypeVar","contents":"v"},{"tag":"REmpty","contents":{}}]}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_unsafeevaluateonnewdocument",[{"values":[{"sourceSpan":{"start":[353,1],"name":".spago/toppokki/5992e93396a734c980ef61c74df5b6ab46108920/src/Toppoki.purs","end":[353,93]},"score":0,"packageInfo":{"values":["toppokki"],"tag":"Package"},"name":"_unsafeEvaluateOnNewDocument","moduleName":"Toppokki","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn2"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Toppokki"],"Page"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Promise"],"Promise"]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]}}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_unsafeevaluatestringfunction",[{"values":[{"sourceSpan":{"start":[354,1],"name":".spago/toppokki/5992e93396a734c980ef61c74df5b6ab46108920/src/Toppoki.purs","end":[354,94]},"score":0,"packageInfo":{"values":["toppokki"],"tag":"Package"},"name":"_unsafeEvaluateStringFunction","moduleName":"Toppokki","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn2"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Toppokki"],"Page"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Promise"],"Promise"]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]}}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_unsafepageeval",[{"values":[{"sourceSpan":{"start":[355,1],"name":".spago/toppokki/5992e93396a734c980ef61c74df5b6ab46108920/src/Toppoki.purs","end":[355,89]},"score":0,"packageInfo":{"values":["toppokki"],"tag":"Package"},"name":"_unsafePageEval","moduleName":"Toppokki","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn3"]},{"tag":"TypeConstructor","contents":[["Toppokki"],"Selector"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Toppokki"],"Page"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Promise"],"Promise"]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]}}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_unsafepageevalall",[{"values":[{"sourceSpan":{"start":[356,1],"name":".spago/toppokki/5992e93396a734c980ef61c74df5b6ab46108920/src/Toppoki.purs","end":[356,92]},"score":0,"packageInfo":{"values":["toppokki"],"tag":"Package"},"name":"_unsafePageEvalAll","moduleName":"Toppokki","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn3"]},{"tag":"TypeConstructor","contents":[["Toppokki"],"Selector"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Toppokki"],"Page"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Promise"],"Promise"]},{"tag":"TypeConstructor","contents":[["Foreign"],"Foreign"]}]}}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_update",[{"values":[{"sourceSpan":{"start":[132,1],"name":"src/Internal/Lens.purs","end":[132,48]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"_update","moduleName":"Ctl.Internal.Lens","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","TransactionBody"],"TransactionBody"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Update"],"Update"]}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],[">",[{"values":[{"sourceSpan":{"start":[161,1],"name":".spago/prelude/v6.0.1/src/Data/Ord.purs","end":[161,26]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"(>)","moduleName":"Data.Ord","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[347,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Ops.purs","end":[347,17]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"(>)","moduleName":"Data.Typelevel.Num.Ops","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]]]