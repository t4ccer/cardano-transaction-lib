// This file was generated by purescript-docs-search.
window.DocsSearchIndex["43"] = [["_body",[{"values":[{"sourceSpan":{"start":[73,1],"name":"src/Internal/Lens.purs","end":[73,43]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"_body","moduleName":"Ctl.Internal.Lens","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Transaction"],"Transaction"]}]},{"tag":"TypeConstructor","contents":[["Cardano","Types","TransactionBody"],"TransactionBody"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_boolean",[{"values":[{"sourceSpan":{"start":[11,1],"name":".spago/argonaut-traversals/v10.0.0/src/Data/Argonaut/Prisms.purs","end":[11,32]},"score":1,"packageInfo":{"values":["argonaut-traversals"],"tag":"Package"},"name":"_Boolean","moduleName":"Data.Argonaut.Prisms","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_bringtofront",[{"values":[{"sourceSpan":{"start":[363,1],"name":".spago/toppokki/5992e93396a734c980ef61c74df5b6ab46108920/src/Toppoki.purs","end":[363,68]},"score":0,"packageInfo":{"values":["toppokki"],"tag":"Package"},"name":"_bringToFront","moduleName":"Toppokki","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn1"]},{"tag":"TypeConstructor","contents":[["Toppokki"],"Page"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Promise"],"Promise"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["<!>",[{"values":[{"sourceSpan":{"start":[273,1],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Internal.purs","end":[273,30]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"(<!>)","moduleName":"Options.Applicative.Internal","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["+",[{"values":[{"sourceSpan":{"start":[50,1],"name":".spago/prelude/v6.0.1/src/Data/Semiring.purs","end":[50,18]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"(+)","moduleName":"Data.Semiring","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[64,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Num/Ops.purs","end":[64,18]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"(+)","moduleName":"Data.Typelevel.Num.Ops","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[22,1],"name":".spago/typelevel-prelude/v7.0.0/src/Type/Row.purs","end":[22,28]},"score":3,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"type (+)","moduleName":"Type.Row","info":{"values":[],"tag":"TypeAliasResult"},"hashAnchor":"t","comments":"Applies a type alias of open rows to a set of rows. The primary use case\nthis operator is as convenient sugar for combining open rows without\nparentheses.\n```purescript\ntype Rows1 r = (a :: Int, b :: String | r)\ntype Rows2 r = (c :: Boolean | r)\ntype Rows3 r = (Rows1 + Rows2 + r)\ntype Rows4 r = (d :: String | Rows1 + Rows2 + r)\n```\n"}],"tag":"SearchResult"}]]]