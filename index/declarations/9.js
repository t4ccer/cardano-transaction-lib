// This file was generated by purescript-docs-search.
window.DocsSearchIndex["9"] = [["r_plus",[{"values":[{"sourceSpan":{"start":[18,20],"name":".spago/node-fs/v8.1.1/src/Node/FS.purs","end":[18,28]},"score":3,"packageInfo":{"values":["node-fs"],"tag":"Package"},"name":"R_PLUS","moduleName":"Node.FS","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["packlistcontainer",[{"values":[{"sourceSpan":{"start":[51,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib/Internal.purs","end":[51,80]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"packListContainer","moduleName":"Cardano.Serialization.Lib.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["e",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Cardano","Serialization","Lib","Internal"],"IsCsl"],"constraintArgs":[{"tag":"TypeVar","contents":"c"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Cardano","Serialization","Lib","Internal"],"IsListContainer"],"constraintArgs":[{"tag":"TypeVar","contents":"c"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeVar","contents":"c"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["packlistcontainerwithclone",[{"values":[{"sourceSpan":{"start":[54,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib/Internal.purs","end":[54,89]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"packListContainerWithClone","moduleName":"Cardano.Serialization.Lib.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["e",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Cardano","Serialization","Lib","Internal"],"IsCsl"],"constraintArgs":[{"tag":"TypeVar","contents":"c"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Cardano","Serialization","Lib","Internal"],"IsListContainer"],"constraintArgs":[{"tag":"TypeVar","contents":"c"},{"tag":"TypeVar","contents":"e"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"e"}]}]},{"tag":"TypeVar","contents":"c"}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["packmapcontainer",[{"values":[{"sourceSpan":{"start":[65,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib/Internal.purs","end":[70,7]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"packMapContainer","moduleName":"Cardano.Serialization.Lib.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["k",{"tag":"ForAll","contents":["v",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Cardano","Serialization","Lib","Internal"],"IsMapContainer"],"constraintArgs":[{"tag":"TypeVar","contents":"c"},{"tag":"TypeVar","contents":"k"},{"tag":"TypeVar","contents":"v"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Cardano","Serialization","Lib","Internal"],"IsCsl"],"constraintArgs":[{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Tuple","Nested"],"/\\"]},{"tag":"TypeVar","contents":"k"},{"tag":"TypeVar","contents":"v"}]}}]}]},{"tag":"TypeVar","contents":"c"}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["packmapcontainerfrommap",[{"values":[{"sourceSpan":{"start":[85,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib/Internal.purs","end":[92,7]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"packMapContainerFromMap","moduleName":"Cardano.Serialization.Lib.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["k",{"tag":"ForAll","contents":["v",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Cardano","Serialization","Lib","Internal"],"IsMapContainer"],"constraintArgs":[{"tag":"TypeVar","contents":"c"},{"tag":"TypeVar","contents":"k"},{"tag":"TypeVar","contents":"v"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Cardano","Serialization","Lib","Internal"],"IsCsl"],"constraintArgs":[{"tag":"TypeVar","contents":"c"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Cardano","Serialization","Lib","Internal"],"IsCsl"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Cardano","Serialization","Lib","Internal"],"IsCsl"],"constraintArgs":[{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeVar","contents":"c"}]}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["packmapcontainerwithclone",[{"values":[{"sourceSpan":{"start":[75,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib/Internal.purs","end":[80,7]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"packMapContainerWithClone","moduleName":"Cardano.Serialization.Lib.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["k",{"tag":"ForAll","contents":["v",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Cardano","Serialization","Lib","Internal"],"IsMapContainer"],"constraintArgs":[{"tag":"TypeVar","contents":"c"},{"tag":"TypeVar","contents":"k"},{"tag":"TypeVar","contents":"v"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Cardano","Serialization","Lib","Internal"],"IsCsl"],"constraintArgs":[{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","Tuple","Nested"],"/\\"]},{"tag":"TypeVar","contents":"k"},{"tag":"TypeVar","contents":"v"}]}}]}]},{"tag":"TypeVar","contents":"c"}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["packsettings",[{"values":[{"sourceSpan":{"start":[147,3],"name":"src/Internal/Test/E2E/Options.purs","end":[147,17]},"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"PackSettings","moduleName":"Ctl.Internal.Test.E2E.Options","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Test","E2E","Options"],"SettingsOptions"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["padend",[{"values":[{"sourceSpan":{"start":[300,1],"name":".spago/stringutils/v0.0.12/src/Data/String/Utils.purs","end":[300,34]},"score":0,"packageInfo":{"values":["stringutils"],"tag":"Package"},"name":"padEnd","moduleName":"Data.String.Utils","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Pad the given string with space from the end until the resulting string\nreaches the given length.\nNote that this function handles Unicode as you would expect.\nIf you want a simple wrapper around JavaScript's\n`String.prototype.padEnd` method, you should use `padEnd'`.\n\nExample:\n```purescript\n-- Treats strings as a sequence of Unicode code points\npadEnd   1 \"0123456789\" == \"0123456789\"\npadEnd   1 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\"\npadEnd  11 \"0123456789\" == \"0123456789 \"\npadEnd  11 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡 \"\npadEnd  21 \"0123456789\" == \"0123456789           \"\npadEnd  21 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡           \"\n\n-- Treats strings as a sequence of Unicode code units\npadEnd'  1 \"0123456789\" == \"0123456789\"\npadEnd'  1 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\"\npadEnd' 11 \"0123456789\" == \"0123456789 \"\npadEnd' 11 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\"\npadEnd' 21 \"0123456789\" == \"0123456789           \"\npadEnd' 21 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡 \"\n```\n"}],"tag":"SearchResult"}]],["padend'",[{"values":[{"sourceSpan":{"start":[331,1],"name":".spago/stringutils/v0.0.12/src/Data/String/Utils.purs","end":[331,35]},"score":0,"packageInfo":{"values":["stringutils"],"tag":"Package"},"name":"padEnd'","moduleName":"Data.String.Utils","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Wrapper around JavaScript's `String.prototype.padEnd` method.\nNote that this function treats strings as a sequence of Unicode\ncode units.\nYou will probably want to use `padEnd` instead.\n\nExample:\n```purescript\n-- Treats strings as a sequence of Unicode code points\npadEnd   1 \"0123456789\" == \"0123456789\"\npadEnd   1 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\"\npadEnd  11 \"0123456789\" == \"0123456789 \"\npadEnd  11 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡 \"\npadEnd  21 \"0123456789\" == \"0123456789           \"\npadEnd  21 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡           \"\n\n-- Treats strings as a sequence of Unicode code units\npadEnd'  1 \"0123456789\" == \"0123456789\"\npadEnd'  1 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\"\npadEnd' 11 \"0123456789\" == \"0123456789 \"\npadEnd' 11 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\"\npadEnd' 21 \"0123456789\" == \"0123456789           \"\npadEnd' 21 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡 \"\n```\n"}],"tag":"SearchResult"}]],["padstart",[{"values":[{"sourceSpan":{"start":[360,1],"name":".spago/stringutils/v0.0.12/src/Data/String/Utils.purs","end":[360,36]},"score":0,"packageInfo":{"values":["stringutils"],"tag":"Package"},"name":"padStart","moduleName":"Data.String.Utils","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Pad the given string with space from the start until the resulting string\nreaches the given length.\nNote that this function handles Unicode as you would expect.\nIf you want a simple wrapper around JavaScript's\n`String.prototype.padStart` method, you should use `padStart'`.\n\nExample:\n```purescript\n-- Treats strings as a sequence of Unicode code points\npadStart   1 \"0123456789\" == \"0123456789\"\npadStart   1 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\"\npadStart  11 \"0123456789\" == \" 0123456789\"\npadStart  11 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == \" 𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\"\npadStart  21 \"0123456789\" == \"           0123456789\"\npadStart  21 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == \"           𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\"\n\n-- Treats strings as a sequence of Unicode code units\npadStart'  1 \"0123456789\" == \"0123456789\"\npadStart'  1 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\"\npadStart' 11 \"0123456789\" == \" 0123456789\"\npadStart' 11 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\"\npadStart' 21 \"0123456789\" == \"           0123456789\"\npadStart' 21 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == \" 𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\"\n```\n"}],"tag":"SearchResult"}]],["padstart'",[{"values":[{"sourceSpan":{"start":[391,1],"name":".spago/stringutils/v0.0.12/src/Data/String/Utils.purs","end":[391,37]},"score":0,"packageInfo":{"values":["stringutils"],"tag":"Package"},"name":"padStart'","moduleName":"Data.String.Utils","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Wrapper around JavaScript's `String.prototype.padStart` method.\nNote that this function treats strings as a sequence of Unicode\ncode units.\nYou will probably want to use `padStart` instead.\n\nExample:\n```purescript\n-- Treats strings as a sequence of Unicode code points\npadStart   1 \"0123456789\" == \"0123456789\"\npadStart   1 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\"\npadStart  11 \"0123456789\" == \" 0123456789\"\npadStart  11 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == \" 𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\"\npadStart  21 \"0123456789\" == \"           0123456789\"\npadStart  21 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == \"           𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\"\n\n-- Treats strings as a sequence of Unicode code units\npadStart'  1 \"0123456789\" == \"0123456789\"\npadStart'  1 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\"\npadStart' 11 \"0123456789\" == \" 0123456789\"\npadStart' 11 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\"\npadStart' 21 \"0123456789\" == \"           0123456789\"\npadStart' 21 \"𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\" == \" 𝟘𝟙𝟚𝟛𝟜𝟝𝟞𝟟𝟠𝟡\"\n```\n"}],"tag":"SearchResult"}]],["page",[{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/toppokki/5992e93396a734c980ef61c74df5b6ab46108920/src/Toppoki.purs","end":[21,33]},"score":0,"packageInfo":{"values":["toppokki"],"tag":"Package"},"name":"Page","moduleName":"Toppokki","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["pagehide",[{"values":[{"sourceSpan":{"start":[5,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/Event/PageTransitionEvent/EventTypes.purs","end":[5,22]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"pagehide","moduleName":"Web.HTML.Event.PageTransitionEvent.EventTypes","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Web","Event","Event"],"EventType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["pages",[{"values":[{"sourceSpan":{"start":[79,1],"name":".spago/toppokki/5992e93396a734c980ef61c74df5b6ab46108920/src/Toppoki.purs","end":[79,37]},"score":0,"packageInfo":{"values":["toppokki"],"tag":"Package"},"name":"pages","moduleName":"Toppokki","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Toppokki"],"Browser"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Toppokki"],"Page"]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["pageshow",[{"values":[{"sourceSpan":{"start":[8,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/Event/PageTransitionEvent/EventTypes.purs","end":[8,22]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"pageshow","moduleName":"Web.HTML.Event.PageTransitionEvent.EventTypes","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Web","Event","Event"],"EventType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["pagetransitionevent",[{"values":[{"sourceSpan":{"start":[8,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/Event/PageTransitionEvent.purs","end":[8,48]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"PageTransitionEvent","moduleName":"Web.HTML.Event.PageTransitionEvent","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["pagewaitforselector",[{"values":[{"sourceSpan":{"start":[164,1],"name":".spago/toppokki/5992e93396a734c980ef61c74df5b6ab46108920/src/Toppoki.purs","end":[174,23]},"score":0,"packageInfo":{"values":["toppokki"],"tag":"Package"},"name":"pageWaitForSelector","moduleName":"Toppokki","info":{"values":[{"type":{"tag":"ForAll","contents":["options",{"tag":"ForAll","contents":["trash",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"options"},{"tag":"TypeVar","contents":"trash"},{"tag":"RCons","contents":["visible",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["hidden",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["timeout",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"REmpty","contents":{}}]}]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Toppokki"],"Selector"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"options"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Toppokki"],"Page"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Toppokki"],"ElementHandle"]}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["paginate",[{"values":[{"sourceSpan":{"start":[58,1],"name":".spago/cip30/8f1b34b48825fcec5e9c67f33e255770b1e0bc45/src/Cardano/Wallet/Cip30.purs","end":[61,4]},"score":0,"packageInfo":{"values":["cip30"],"tag":"Package"},"name":"Paginate","moduleName":"Cardano.Wallet.Cip30","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["limit",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"RCons","contents":["page",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"REmpty","contents":{}}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["paraff",[{"values":[{"sourceSpan":{"start":[125,1],"name":".spago/aff/v7.1.0/src/Effect/Aff.purs","end":[125,43]},"score":13,"packageInfo":{"values":["aff"],"tag":"Package"},"name":"ParAff","moduleName":"Effect.Aff","info":{"values":[{"typeArguments":[["t0",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Applicative for running parallel effects. Any `Aff` can be coerced to a\n`ParAff` and back using the `Parallel` class.\n"}],"tag":"SearchResult"}]],["paragraph",[{"values":[{"sourceSpan":{"start":[132,1],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Help/Chunk.purs","end":[132,33]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"paragraph","moduleName":"Options.Applicative.Help.Chunk","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert a paragraph into a 'Chunk'.  The resulting chunk is composed by the\n"}],"tag":"SearchResult"}]],["paragraphseparator",[{"values":[{"sourceSpan":{"start":[135,3],"name":".spago/unicode/v6.0.0/src/Data/CodePoint/Unicode.purs","end":[135,23]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"ParagraphSeparator","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parallel",[{"values":[{"sourceSpan":{"start":[24,1],"name":".spago/parallel/v6.0.0/src/Control/Parallel/Class.purs","end":[26,23]},"score":2,"packageInfo":{"values":["parallel"],"tag":"Package"},"name":"Parallel","moduleName":"Control.Parallel.Class","info":{"values":[{"superclasses":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"constraintClass":[["Control","Applicative"],"Applicative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]}],"fundeps":[[["m"],["f"]],[["f"],["m"]]],"arguments":[["f",null],["m",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `Parallel` class abstracts over monads which support\nparallel composition via some related `Applicative`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[25,3],"name":".spago/parallel/v6.0.0/src/Control/Parallel/Class.purs","end":[25,21]},"score":2,"packageInfo":{"values":["parallel"],"tag":"Package"},"name":"parallel","moduleName":"Control.Parallel.Class","info":{"values":[{"typeClassArguments":[["f",null],["m",null]],"typeClass":[["Control","Parallel","Class"],"Parallel"],"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Parallel","Class"],"Parallel"],"constraintArgs":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"m"}]},{"tag":"BinaryNoParensType","contents":[{"tag":"TypeOp","contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"f"}]}]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[12,16],"name":".spago/spec/v7.2.0/src/Test/Spec/Runner/Event.purs","end":[12,26]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"Parallel","moduleName":"Test.Spec.Runner.Event","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[185,1],"name":".spago/spec/v7.2.0/src/Test/Spec.purs","end":[189,19]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"parallel","moduleName":"Test.Spec","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Spec"],"SpecT"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","Spec"],"SpecT"]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"marks all spec items of the given spec to be safe for parallel evaluation.\n"}],"tag":"SearchResult"}]],["parapply",[{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/parallel/v6.0.0/src/Control/Parallel.purs","end":[26,10]},"score":2,"packageInfo":{"values":["parallel"],"tag":"Package"},"name":"parApply","moduleName":"Control.Parallel","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Parallel","Class"],"Parallel"],"constraintArgs":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Apply a function to an argument under a type constructor in parallel.\n"}],"tag":"SearchResult"}]],["parcont",[{"values":[{"sourceSpan":{"start":[68,1],"name":".spago/parallel/v6.0.0/src/Control/Parallel/Class.purs","end":[68,47]},"score":2,"packageInfo":{"values":["parallel"],"tag":"Package"},"name":"ParCont","moduleName":"Control.Parallel.Class","info":{"values":[{"typeArguments":[["m",null],["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The `ParCont` type constructor provides an `Applicative` instance\nbased on `ContT Unit m`, which waits for multiple continuations to be\nresumed simultaneously.\n\nParCont sections of code can be embedded in sequential code by using\nthe `parallel` and `sequential` functions:\n\n```purescript\nloadModel :: ContT Unit (Eff (ajax :: AJAX)) Model\nloadModel = do\n  token <- authenticate\n  sequential $\n    Model <$> parallel (get \"/products/popular/\" token)\n          <*> parallel (get \"/categories/all\" token)\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[68,21],"name":".spago/parallel/v6.0.0/src/Control/Parallel/Class.purs","end":[68,47]},"score":2,"packageInfo":{"values":["parallel"],"tag":"Package"},"name":"ParCont","moduleName":"Control.Parallel.Class","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Cont","Trans"],"ContT"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parcontract",[{"values":[{"sourceSpan":{"start":[142,1],"name":"src/Internal/Contract/Monad.purs","end":[143,33]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ParContract","moduleName":"Ctl.Internal.Contract.Monad","info":{"values":[{"typeArguments":[["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[142,33],"name":"src/Internal/Contract/Monad.purs","end":[143,33]},"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ParContract","moduleName":"Ctl.Internal.Contract.Monad","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Reader","Trans"],"ReaderT"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"ContractEnv"]}]},{"tag":"TypeConstructor","contents":[["Effect","Aff"],"ParAff"]}]},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parens",[{"values":[{"sourceSpan":{"start":[263,1],"name":".spago/optparse/v5.0.0/src/Text/PrettyPrint/Leijen.purs","end":[263,21]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"parens","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Document @(parens x)@ encloses document @x@ in parenthesis, \\\"(\\\"\nand \\\")\\\".\n"}],"tag":"SearchResult"}]],["parent",[{"values":[{"sourceSpan":{"start":[149,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/Window.purs","end":[149,49]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"parent","moduleName":"Web.HTML.Window","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","Window"],"Window"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Web","HTML","Window"],"Window"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parentelement",[{"values":[{"sourceSpan":{"start":[88,1],"name":".spago/web-dom/v6.0.0/src/Web/DOM/Node.purs","end":[88,48]},"score":4,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"parentElement","moduleName":"Web.DOM.Node","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Node"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Element"]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The parent element of the node.\n"}],"tag":"SearchResult"}]],["parentnode",[{"values":[{"sourceSpan":{"start":[82,1],"name":".spago/web-dom/v6.0.0/src/Web/DOM/Node.purs","end":[82,42]},"score":4,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"parentNode","moduleName":"Web.DOM.Node","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Node"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Node"]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The parent node of the node.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[22,1],"name":".spago/web-dom/v6.0.0/src/Web/DOM/ParentNode.purs","end":[22,39]},"score":4,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"ParentNode","moduleName":"Web.DOM.ParentNode","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["parentsuite",[{"values":[{"sourceSpan":{"start":[129,1],"name":".spago/spec/v7.2.0/src/Test/Spec/Tree.purs","end":[129,62]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"parentSuite","moduleName":"Test.Spec.Tree","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Spec","Tree"],"Path"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["path",{"tag":"TypeConstructor","contents":[["Test","Spec","Tree"],"Path"]},{"tag":"RCons","contents":["name",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"REmpty","contents":{}}]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parentsuitename",[{"values":[{"sourceSpan":{"start":[126,1],"name":".spago/spec/v7.2.0/src/Test/Spec/Tree.purs","end":[126,40]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"parentSuiteName","moduleName":"Test.Spec.Tree","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Test","Spec","Tree"],"Path"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parity",[{"values":[{"sourceSpan":{"start":[112,1],"name":".spago/integers/v6.0.0/src/Data/Int.purs","end":[112,25]},"score":21,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"Parity","moduleName":"Data.Int","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A type for describing whether an integer is even or odd.\n\nThe `Ord` instance considers `Even` to be less than `Odd`.\n\nThe `Semiring` instance allows you to ask about the parity of the results\nof arithmetical operations, given only the parities of the inputs. For\nexample, the sum of an odd number and an even number is odd, so\n`Odd + Even == Odd`. This also works for multiplication, eg. the product\nof two odd numbers is odd, and therefore `Odd * Odd == Odd`.\n\nMore generally, we have that\n\n```purescript\nparity x + parity y == parity (x + y)\nparity x * parity y == parity (x * y)\n```\n\nfor any integers `x`, `y`. (A mathematician would say that `parity` is a\n*ring homomorphism*.)\n\nAfter defining addition and multiplication on `Parity` in this way, the\n`Semiring` laws now force us to choose `zero = Even` and `one = Odd`.\nThis `Semiring` instance actually turns out to be a `Field`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[152,1],"name":".spago/integers/v6.0.0/src/Data/Int.purs","end":[152,24]},"score":21,"packageInfo":{"values":["integers"],"tag":"Package"},"name":"parity","moduleName":"Data.Int","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","contents":[["Data","Int"],"Parity"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns whether an `Int` is `Even` or `Odd`.\n\n``` purescript\nparity 0 == Even\nparity 1 == Odd\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[209,1],"name":".spago/js-bigints/36a7d8ac75a7230043ae511f3145f9ed130954a9/src/JS/BigInt.purs","end":[209,25]},"score":0,"packageInfo":{"values":["js-bigints"],"tag":"Package"},"name":"parity","moduleName":"JS.BigInt","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["JS","BigInt"],"BigInt"]}]},{"tag":"TypeConstructor","contents":[["Data","Int"],"Parity"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns whether an `BigInt` is `Even` or `Odd`.\n\n``` purescript\nparity (fromInt 0) == Even\nparity (fromInt 1) == Odd\n```\n"}],"tag":"SearchResult"}]],["paroneof",[{"values":[{"sourceSpan":{"start":[66,1],"name":".spago/parallel/v6.0.0/src/Control/Parallel.purs","end":[73,9]},"score":2,"packageInfo":{"values":["parallel"],"tag":"Package"},"name":"parOneOf","moduleName":"Control.Parallel","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Parallel","Class"],"Parallel"],"constraintArgs":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Alternative"],"Alternative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Race a collection in parallel.\n"}],"tag":"SearchResult"}]],["paroneofmap",[{"values":[{"sourceSpan":{"start":[77,1],"name":".spago/parallel/v6.0.0/src/Control/Parallel.purs","end":[85,9]},"score":2,"packageInfo":{"values":["parallel"],"tag":"Package"},"name":"parOneOfMap","moduleName":"Control.Parallel","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Parallel","Class"],"Parallel"],"constraintArgs":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Alternative"],"Alternative"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}]}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Race a collection in parallel while mapping to some effect.\n"}],"tag":"SearchResult"}]],["parquerym",[{"values":[{"sourceSpan":{"start":[230,1],"name":"src/Internal/QueryM.purs","end":[230,32]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ParQueryM","moduleName":"Ctl.Internal.QueryM","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","QueryM"],"QueryMT"]},{"tag":"TypeConstructor","contents":[["Effect","Aff"],"ParAff"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["parse",[{"values":[{"sourceSpan":{"start":[161,1],"name":".spago/js-date/v8.0.0/src/Data/JSDate.purs","end":[161,48]},"score":3,"packageInfo":{"values":["js-date"],"tag":"Package"},"name":"parse","moduleName":"Data.JSDate","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","JSDate"],"JSDate"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attempts to parse a date from a string. The behavior of this function is\nimplementation specific until ES5, so may not always have the same\nbehavior for a given string. For this reason, it is **strongly** encouraged\nthat you avoid this function if at all possible.\n\nIf you must use it, the RFC2822 and ISO8601 date string formats should\nparse consistently.\n\nThis function is effectful because if no time zone is specified in the\nstring the current locale's time zone will be used instead.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[45,1],"name":".spago/node-path/v5.0.0/src/Node/Path.purs","end":[45,115]},"score":2,"packageInfo":{"values":["node-path"],"tag":"Package"},"name":"parse","moduleName":"Node.Path","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["root",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["dir",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["base",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["ext",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["name",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Parse a path into components.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[32,1],"name":".spago/node-url/v6.0.0/src/Node/URL.purs","end":[32,38]},"score":1,"packageInfo":{"values":["node-url"],"tag":"Package"},"name":"parse","moduleName":"Node.URL","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Node","URL"],"URL"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Parse a URL string into a URL object.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLDocument/ReadyState.purs","end":[27,36]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"parse","moduleName":"Web.HTML.HTMLDocument.ReadyState","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLDocument","ReadyState"],"ReadyState"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[24,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLDocument/VisibilityState.purs","end":[24,41]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"parse","moduleName":"Web.HTML.HTMLDocument.VisibilityState","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLDocument","VisibilityState"],"VisibilityState"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[22,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLImageElement/CORSMode.purs","end":[22,34]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"parse","moduleName":"Web.HTML.HTMLImageElement.CORSMode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLImageElement","CORSMode"],"CORSMode"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[24,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLImageElement/DecodingHint.purs","end":[24,38]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"parse","moduleName":"Web.HTML.HTMLImageElement.DecodingHint","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLImageElement","DecodingHint"],"DecodingHint"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[22,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLImageElement/Laziness.purs","end":[22,34]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"parse","moduleName":"Web.HTML.HTMLImageElement.Laziness","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLImageElement","Laziness"],"Laziness"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLMediaElement/CanPlayType.purs","end":[21,37]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"parse","moduleName":"Web.HTML.HTMLMediaElement.CanPlayType","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLMediaElement","CanPlayType"],"CanPlayType"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/SelectionMode.purs","end":[23,39]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"parse","moduleName":"Web.HTML.SelectionMode","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Web","HTML","SelectionMode"],"SelectionMode"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parsebignumber",[{"values":[{"sourceSpan":{"start":[31,1],"name":".spago/bignumber/760d11b41ece31b8cdd3c53349c5c2fd48d3ff89/src/Data/BigNumber.purs","end":[31,51]},"score":0,"packageInfo":{"values":["bignumber"],"tag":"Package"},"name":"parseBigNumber","moduleName":"Data.BigNumber","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Effect","Exception"],"Error"]}]},{"tag":"TypeConstructor","contents":[["Data","BigNumber"],"BigNumber"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parsecliargs",[{"values":[{"sourceSpan":{"start":[156,1],"name":"src/Internal/Test/E2E/Options.purs","end":[156,34]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"parseCliArgs","moduleName":"Ctl.Internal.Test.E2E.Options","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Test","E2E","Options"],"E2ECommand"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Parse CLI arguments to get E2ECommand that can be run by `runE2E`\n"}],"tag":"SearchResult"}]],["parsedatetime",[{"values":[{"sourceSpan":{"start":[74,1],"name":".spago/formatters/v7.0.0/src/Data/Formatter/Parser/Interval.purs","end":[74,66]},"score":0,"packageInfo":{"values":["formatters"],"tag":"Package"},"name":"parseDateTime","moduleName":"Data.Formatter.Parser.Interval","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","DateTime"],"DateTime"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parsedigit",[{"values":[{"sourceSpan":{"start":[41,1],"name":".spago/formatters/v7.0.0/src/Data/Formatter/Parser/Number.purs","end":[41,58]},"score":0,"packageInfo":{"values":["formatters"],"tag":"Package"},"name":"parseDigit","moduleName":"Data.Formatter.Parser.Number","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parseerror",[{"values":[{"sourceSpan":{"start":[73,1],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Types.purs","end":[79,38]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"ParseError","moduleName":"Options.Applicative.Types","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[57,1],"name":".spago/parsing/v10.2.0/src/Parsing.purs","end":[57,45]},"score":1,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"ParseError","moduleName":"Parsing","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A parsing error, consisting of an error message and\nthe position in the input stream at which the error occurred.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[57,17],"name":".spago/parsing/v10.2.0/src/Parsing.purs","end":[57,29]},"score":1,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"ParseError","moduleName":"Parsing","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"TypeConstructor","contents":[["Parsing"],"Position"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parseerrorhuman",[{"values":[{"sourceSpan":{"start":[370,1],"name":".spago/parsing/v10.2.0/src/Parsing/String.purs","end":[370,63]},"score":1,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"parseErrorHuman","moduleName":"Parsing.String","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Parsing"],"ParseError"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns three `String`s which, when printed line-by-line, will show\na human-readable parsing error message with context.\n\n#### Input arguments\n\n* The first argument is the input `String` given to the parser which\nerrored.\n* The second argument is a positive `Int` which indicates how many\ncharacters of input `String` context are wanted around the parsing error.\n* The third argument is the `ParseError` for the input `String`.\n\n#### Output `String`s\n\n1. The parse error message and the parsing position.\n2. A string with an arrow that points to the error position in the\n   input context (in a fixed-width font).\n3. The input context. A substring of the input which tries to center\n   the error position and have the wanted length and not include\n   any newlines or carriage returns.\n\n   If the parse error occurred on a carriage return or newline character,\n   then that character will be included at the end of the input context.\n\n#### Example\n\n```\nlet input = \"12345six789\"\ncase runParser input (replicateA 9 String.Basic.digit) of\n  Left err ->\n    log $ String.joinWith \"\\n\" $ parseErrorHuman input 20 err\n```\n---\n```\nExpected digit at position index:5 (line:1, column:6)\n     ▼\n12345six789\n```\n"}],"tag":"SearchResult"}]],["parseerrormessage",[{"values":[{"sourceSpan":{"start":[60,1],"name":".spago/parsing/v10.2.0/src/Parsing.purs","end":[60,42]},"score":1,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"parseErrorMessage","moduleName":"Parsing","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Parsing"],"ParseError"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get the `Message` from a `ParseError`\n"}],"tag":"SearchResult"}]],["parseerrorposition",[{"values":[{"sourceSpan":{"start":[64,1],"name":".spago/parsing/v10.2.0/src/Parsing.purs","end":[64,45]},"score":1,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"parseErrorPosition","moduleName":"Parsing","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Parsing"],"ParseError"]}]},{"tag":"TypeConstructor","contents":[["Parsing"],"Position"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get the `Position` from a `ParseError`.\n"}],"tag":"SearchResult"}]],["parseflags",[{"values":[{"sourceSpan":{"start":[69,1],"name":".spago/strings/v6.0.1/src/Data/String/Regex.purs","end":[69,35]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"parseFlags","moduleName":"Data.String.Regex","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","String","Regex","Flags"],"RegexFlags"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Parses the string representation of `RegexFlags`.\n"}],"tag":"SearchResult"}]],["parseformatstring",[{"values":[{"sourceSpan":{"start":[113,1],"name":".spago/formatters/v7.0.0/src/Data/Formatter/DateTime.purs","end":[113,55]},"score":0,"packageInfo":{"values":["formatters"],"tag":"Package"},"name":"parseFormatString","moduleName":"Data.Formatter.DateTime","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Formatter","DateTime"],"Formatter"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/formatters/v7.0.0/src/Data/Formatter/Number.purs","end":[63,55]},"score":0,"packageInfo":{"values":["formatters"],"tag":"Package"},"name":"parseFormatString","moduleName":"Data.Formatter.Number","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Formatter","Number"],"Formatter"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parseinteger",[{"values":[{"sourceSpan":{"start":[23,1],"name":".spago/formatters/v7.0.0/src/Data/Formatter/Parser/Number.purs","end":[23,60]},"score":0,"packageInfo":{"values":["formatters"],"tag":"Package"},"name":"parseInteger","moduleName":"Data.Formatter.Parser.Number","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parseinterval",[{"values":[{"sourceSpan":{"start":[31,1],"name":".spago/formatters/v7.0.0/src/Data/Formatter/Parser/Interval.purs","end":[31,104]},"score":0,"packageInfo":{"values":["formatters"],"tag":"Package"},"name":"parseInterval","moduleName":"Data.Formatter.Parser.Interval","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Parsing"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Parsing"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Parsing"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Interval"],"Interval"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parseipv6string",[{"values":[{"sourceSpan":{"start":[701,1],"name":"src/Internal/QueryM/Ogmios.purs","end":[701,40]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"parseIpv6String","moduleName":"Ctl.Internal.QueryM.Ogmios","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Ipv6"],"Ipv6"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parseisoduration",[{"values":[{"sourceSpan":{"start":[39,1],"name":".spago/formatters/v7.0.0/src/Data/Formatter/Parser/Interval.purs","end":[39,48]},"score":0,"packageInfo":{"values":["formatters"],"tag":"Package"},"name":"parseIsoDuration","moduleName":"Data.Formatter.Parser.Interval","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Parsing"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","Interval","Duration","Iso"],"IsoDuration"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parsejson",[{"values":[{"sourceSpan":{"start":[13,1],"name":".spago/argonaut-codecs/v9.1.0/src/Data/Argonaut/Decode/Parser.purs","end":[13,51]},"score":2,"packageInfo":{"values":["argonaut-codecs"],"tag":"Package"},"name":"parseJson","moduleName":"Data.Argonaut.Decode.Parser","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Decode","Error"],"JsonDecodeError"]}]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Core"],"Json"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Attempt to parse a string as `Json`, failing with a typed error if the\nJSON string is malformed.\n"}],"tag":"SearchResult"}]],["parsejsonrpc2responseid",[{"values":[{"sourceSpan":{"start":[220,1],"name":"src/Internal/QueryM/JsonRpc2.purs","end":[222,39]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"parseJsonRpc2ResponseId","moduleName":"Ctl.Internal.QueryM.JsonRpc2","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Aeson"],"Aeson"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Decode","Error"],"JsonDecodeError"]}]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","QueryM","UniqueId"],"ListenerId"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Parse just ID from the response\n"}],"tag":"SearchResult"}]],["parsejsonstringtoaeson",[{"values":[{"sourceSpan":{"start":[182,1],"name":".spago/aeson/v2.0.1/src/Aeson.purs","end":[182,65]},"score":0,"packageInfo":{"values":["aeson"],"tag":"Package"},"name":"parseJsonStringToAeson","moduleName":"Aeson","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Data","Argonaut","Decode","Error"],"JsonDecodeError"]}]},{"tag":"TypeConstructor","contents":[["Aeson"],"Aeson"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parsemaybeinteger",[{"values":[{"sourceSpan":{"start":[26,1],"name":".spago/formatters/v7.0.0/src/Data/Formatter/Parser/Number.purs","end":[26,73]},"score":0,"packageInfo":{"values":["formatters"],"tag":"Package"},"name":"parseMaybeInteger","moduleName":"Data.Formatter.Parser.Number","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parsenumber",[{"values":[{"sourceSpan":{"start":[36,1],"name":".spago/formatters/v7.0.0/src/Data/Formatter/Parser/Number.purs","end":[36,62]},"score":0,"packageInfo":{"values":["formatters"],"tag":"Package"},"name":"parseNumber","moduleName":"Data.Formatter.Parser.Number","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parseoptions",[{"values":[{"sourceSpan":{"start":[427,1],"name":"src/Internal/Test/E2E/Options.purs","end":[427,35]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"parseOptions","moduleName":"Ctl.Internal.Test.E2E.Options","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Test","E2E","Options"],"TestOptions"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parsequence",[{"values":[{"sourceSpan":{"start":[49,1],"name":".spago/parallel/v6.0.0/src/Control/Parallel.purs","end":[54,13]},"score":2,"packageInfo":{"values":["parallel"],"tag":"Package"},"name":"parSequence","moduleName":"Control.Parallel","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Parallel","Class"],"Parallel"],"constraintArgs":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Traversable"],"Traversable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parsequence_",[{"values":[{"sourceSpan":{"start":[57,1],"name":".spago/parallel/v6.0.0/src/Control/Parallel.purs","end":[62,12]},"score":2,"packageInfo":{"values":["parallel"],"tag":"Package"},"name":"parSequence_","moduleName":"Control.Parallel","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Parallel","Class"],"Parallel"],"constraintArgs":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parsequerystring",[{"values":[{"sourceSpan":{"start":[41,1],"name":".spago/node-url/v6.0.0/src/Node/URL.purs","end":[41,51]},"score":1,"packageInfo":{"values":["node-url"],"tag":"Package"},"name":"parseQueryString","moduleName":"Node.URL","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Node","URL"],"Query"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Convert a query string to an object.\n"}],"tag":"SearchResult"}]],["parser",[{"values":[{"sourceSpan":{"start":[71,1],"name":"src/Internal/Types/Cbor.purs","end":[71,59]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"Parser","moduleName":"Ctl.Internal.Types.Cbor","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"TypeConstructor","contents":[["Data","ByteArray"],"ByteArray"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except"],"Except"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","Cbor"],"CborParseError"]}]}}]},{"tag":"TypeVar","contents":"a"}]},"arguments":[["a",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[308,1],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Types.purs","end":[313,26]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"Parser","moduleName":"Options.Applicative.Types","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"\nA 'Parser' is the core type in optparse-applicative. A value of type\nParser a@ represents a specification for a set of options, which will\nyield a value of type a when the command line arguments are successfully\nparsed.\n\nThere are several types of primitive 'Parser'.\n\n* Flags: simple no-argument options. When a flag is encountered on the\ncommand line, its value is returned.\n\n* Options: options with an argument. An option can define a /reader/,\nwhich converts its argument from String to the desired value, or throws a\nparse error if the argument does not validate correctly.\n\n* Arguments: positional arguments, validated in the same way as option\narguments.\n\n* Commands. A command defines a completely independent sub-parser. When a\ncommand is encountered, the whole command line is passed to the\ncorresponding parser.\n\n** Parser builders\n\nEach parser builder takes an option modifier. A modifier can be created by\ncomposing the basic modifiers provided by here using the 'Monoid' operations\nmempty' and 'append', or their aliases 'idm' and '<>'.\n\nFor example:\n\n> out = strOption\n>     ( long \"output\"\n>    <> short 'o'\n>    <> metavar \"FILENAME\" )\n\ncreates a parser for an option called \\\"output\\\".\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[164,1],"name":".spago/parsing/v10.2.0/src/Parsing.purs","end":[164,35]},"score":1,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"Parser","moduleName":"Parsing","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeConstructor","contents":[["Data","Identity"],"Identity"]}]},"arguments":[["s",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"The `Parser s` monad, where `s` is the type of the input stream.\n\nA synonym for the `ParserT` monad transformer applied\nto the `Identity` monad.\n"}],"tag":"SearchResult"}]],["parserecurringinterval",[{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/formatters/v7.0.0/src/Data/Formatter/Parser/Interval.purs","end":[27,122]},"score":0,"packageInfo":{"values":["formatters"],"tag":"Package"},"name":"parseRecurringInterval","moduleName":"Data.Formatter.Parser.Interval","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Parsing"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Parsing"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Parsing"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Interval"],"RecurringInterval"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parserfailure",[{"values":[{"sourceSpan":{"start":[159,1],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Extra.purs","end":[161,42]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"parserFailure","moduleName":"Options.Applicative.Extra","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserInfo"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParseError"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Context"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserFailure"]},{"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Generate a `ParserFailure` from a `ParseError` in a given `Context`.\n\nThis function can be used, for example, to show the help text for a parser:\n\n`handleParseResult <<< Failure $ parserFailure pprefs pinfo ShowHelpText mempty`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[435,1],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Types.purs","end":[435,74]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"ParserFailure","moduleName":"Options.Applicative.Types","info":{"values":[{"typeArguments":[["h",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[435,25],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Types.purs","end":[435,74]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"ParserFailure","moduleName":"Options.Applicative.Types","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple","Nested"],"Tuple3"]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeConstructor","contents":[["ExitCodes"],"ExitCode"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parserhelp",[{"values":[{"sourceSpan":{"start":[168,1],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Help/Core.purs","end":[168,62]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"parserHelp","moduleName":"Options.Applicative.Help.Core","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Generate the help text for a program.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[12,1],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Help/Types.purs","end":[19,4]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"ParserHelp","moduleName":"Options.Applicative.Help.Types","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[12,20],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Help/Types.purs","end":[19,4]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"ParserHelp","moduleName":"Options.Applicative.Help.Types","info":{"values":[{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["helpError",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"RCons","contents":["helpSuggestions",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"RCons","contents":["helpHeader",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"RCons","contents":["helpUsage",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"RCons","contents":["helpBody",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"RCons","contents":["helpFooter",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]}]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parserinfo",[{"values":[{"sourceSpan":{"start":[97,1],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Types.purs","end":[107,4]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"ParserInfo","moduleName":"Options.Applicative.Types","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A 'ParserInfo' describes a command line program, used to generate a help\nscreen. Two help modes are supported: brief and full. In brief mode, only\nan option and argument summary is displayed, while in full mode each\navailable option and command, including hidden ones, is described.\n\nA basic 'ParserInfo' with default values for fields can be created using\nthe 'info' function.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[97,22],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Types.purs","end":[107,4]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"ParserInfo","moduleName":"Options.Applicative.Types","info":{"values":[{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["infoParser",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"RCons","contents":["infoFullDesc",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["infoProgDesc",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"RCons","contents":["infoHeader",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"RCons","contents":["infoFooter",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"RCons","contents":["infoFailureCode",{"tag":"TypeConstructor","contents":[["ExitCodes"],"ExitCode"]},{"tag":"RCons","contents":["infoPolicy",{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ArgPolicy"]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]}]}]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parseroute",[{"values":[{"sourceSpan":{"start":[66,1],"name":"src/Internal/Test/E2E/Route.purs","end":[66,44]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"parseRoute","moduleName":"Ctl.Internal.Test.E2E.Route","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Test","E2E","Route"],"Route"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parserprefs",[{"values":[{"sourceSpan":{"start":[125,1],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Types.purs","end":[137,4]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"ParserPrefs","moduleName":"Options.Applicative.Types","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Global preferences for a top-level 'Parser'.\nA 'ParserPrefs' contains general preferences for all command-line\noptions, and can be built with the 'prefs' function.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[125,21],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Types.purs","end":[137,4]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"ParserPrefs","moduleName":"Options.Applicative.Types","info":{"values":[{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["prefMultiSuffix",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"RCons","contents":["prefDisambiguate",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["prefShowHelpOnError",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["prefShowHelpOnEmpty",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"RCons","contents":["prefBacktrack",{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Backtracking"]},{"tag":"RCons","contents":["prefColumns",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]}]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parserresult",[{"values":[{"sourceSpan":{"start":[448,1],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Types.purs","end":[451,39]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"ParserResult","moduleName":"Options.Applicative.Types","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"Result of 'execParserPure'.\n"}],"tag":"SearchResult"}]],["parsert",[{"values":[{"sourceSpan":{"start":[96,1],"name":".spago/parsing/v10.2.0/src/Parsing.purs","end":[119,4]},"score":1,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"ParserT","moduleName":"Parsing","info":{"values":[{"typeArguments":[["s",null],["m",null],["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The `Parser s` monad with a monad transformer parameter `m`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[96,23],"name":".spago/parsing/v10.2.0/src/Parsing.purs","end":[119,4]},"score":1,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"ParserT","moduleName":"Parsing","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"ForAll","contents":["r",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn5"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Parsing"],"ParseState"]},{"tag":"TypeVar","contents":"s"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","contents":"r"}]}}]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn2"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Parsing"],"ParseState"]},{"tag":"TypeVar","contents":"s"}]}}]},{"tag":"TypeConstructor","contents":[["Parsing"],"ParseError"]}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Function","Uncurried"],"Fn2"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Parsing"],"ParseState"]},{"tag":"TypeVar","contents":"s"}]}}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"r"}]}}]},{"tag":"TypeVar","contents":"r"}]},null]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["parserusage",[{"values":[{"sourceSpan":{"start":[186,1],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Help/Core.purs","end":[186,66]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"parserUsage","moduleName":"Options.Applicative.Help.Core","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ParserPrefs"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"Parser"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Generate option summary.\n"}],"tag":"SearchResult"}]],["parsestate",[{"values":[{"sourceSpan":{"start":[81,1],"name":".spago/parsing/v10.2.0/src/Parsing.purs","end":[81,50]},"score":1,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"ParseState","moduleName":"Parsing","info":{"values":[{"typeArguments":[["s",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"The internal state of the `ParserT s m` monad.\n\nContains the remaining input and current position and the consumed flag.\n\nThe consumed flag is used to implement the rule for `alt` that\n- If the left parser fails *without consuming any input*, then backtrack and try the right parser.\n- If the left parser fails and consumes input, then fail immediately.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[81,19],"name":".spago/parsing/v10.2.0/src/Parsing.purs","end":[81,31]},"score":1,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"ParseState","moduleName":"Parsing","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"s"},{"tag":"TypeConstructor","contents":[["Parsing"],"Position"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["partial",[{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Partial","moduleName":"Prim","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The Partial type class is used to indicate that a function is *partial,*\nthat is, it is not defined for all inputs. In practice, attempting to use\na partial function with a bad input will usually cause an error to be\nthrown, although it is not safe to assume that this will happen in all\ncases. For more information, see\n[purescript-partial](https://pursuit.purescript.org/packages/purescript-partial/).\n"}],"tag":"SearchResult"}]],["partiallyappliedscriptfixture",[{"values":[{"sourceSpan":{"start":[1369,1],"name":"test/Fixtures.purs","end":[1369,46]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"partiallyAppliedScriptFixture","moduleName":"Test.Ctl.Fixtures","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Cardano","Types","PlutusScript"],"PlutusScript"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["partialtomaybe",[{"values":[{"sourceSpan":{"start":[53,1],"name":"src/Internal/FfiHelpers.purs","end":[53,62]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"partialToMaybe","moduleName":"Ctl.Internal.FfiHelpers","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim"],"Partial"],"constraintArgs":[]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["partition",[{"values":[{"sourceSpan":{"start":[44,1],"name":"src/Internal/Partition.purs","end":[45,63]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"Partition","moduleName":"Ctl.Internal.Partition","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[45,3],"name":"src/Internal/Partition.purs","end":[45,63]},"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"partition","moduleName":"Ctl.Internal.Partition","info":{"values":[{"typeClassArguments":[["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]],"typeClass":[["Ctl","Internal","Partition"],"Partition"],"type":{"tag":"ForAll","contents":["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Ctl","Internal","Partition"],"Partition"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}}]}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[325,1],"name":".spago/arrays/v7.1.0/src/Data/Array/NonEmpty.purs","end":[329,38]},"score":20,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"partition","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["yes",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"RCons","contents":["no",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"REmpty","contents":{}}]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[668,1],"name":".spago/arrays/v7.1.0/src/Data/Array.purs","end":[672,39]},"score":20,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"partition","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["yes",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"RCons","contents":["no",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"REmpty","contents":{}}]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Partition an array using a predicate function, creating a set of\nnew arrays. One for the values satisfying the predicate function\nand one for values that don't.\n\n```purescript\npartition (_ > 0) [-1, 4, -5, 7] = { yes: [4, 7], no: [-1, -5] }\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[586,1],"name":".spago/lists/v7.0.0/src/Data/List/Lazy.purs","end":[586,83]},"score":19,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"partition","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["yes",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"RCons","contents":["no",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"REmpty","contents":{}}]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns a tuple of lists of elements which do\nand do not satisfy a predicate, respectively.\n\nRunning time: `O(n)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[266,1],"name":".spago/lists/v7.0.0/src/Data/List/NonEmpty.purs","end":[266,95]},"score":19,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"partition","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["yes",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"RCons","contents":["no",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"REmpty","contents":{}}]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[628,1],"name":".spago/lists/v7.0.0/src/Data/List.purs","end":[628,83]},"score":19,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"partition","moduleName":"Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["yes",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"RCons","contents":["no",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"REmpty","contents":{}}]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns a lists of elements which do and do not satisfy a predicate.\n\nRunning time: `O(n)`\n"}],"tag":"SearchResult"}]],["partraverse",[{"values":[{"sourceSpan":{"start":[30,1],"name":".spago/parallel/v6.0.0/src/Control/Parallel.purs","end":[36,13]},"score":2,"packageInfo":{"values":["parallel"],"tag":"Package"},"name":"parTraverse","moduleName":"Control.Parallel","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Parallel","Class"],"Parallel"],"constraintArgs":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Traversable"],"Traversable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"b"}]}}]}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Traverse a collection in parallel.\n"}],"tag":"SearchResult"}]],["partraverse_",[{"values":[{"sourceSpan":{"start":[40,1],"name":".spago/parallel/v6.0.0/src/Control/Parallel.purs","end":[46,12]},"score":2,"packageInfo":{"values":["parallel"],"tag":"Package"},"name":"parTraverse_","moduleName":"Control.Parallel","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Parallel","Class"],"Parallel"],"constraintArgs":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Traverse a collection in parallel, discarding any results.\n"}],"tag":"SearchResult"}]],["pass",[{"values":[{"sourceSpan":{"start":[38,3],"name":".spago/transformers/v6.0.0/src/Control/Monad/Writer/Class.purs","end":[38,48]},"score":23,"packageInfo":{"values":["transformers"],"tag":"Package"},"name":"pass","moduleName":"Control.Monad.Writer.Class","info":{"values":[{"typeClassArguments":[["w",null],["m",null]],"typeClass":[["Control","Monad","Writer","Class"],"MonadWriter"],"type":{"tag":"ForAll","contents":["w",{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Writer","Class"],"MonadWriter"],"constraintArgs":[{"tag":"TypeVar","contents":"w"},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"w"}]},{"tag":"TypeVar","contents":"w"}]}}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["passbrowserlogs_",[{"values":[{"sourceSpan":{"start":[107,1],"name":"src/Internal/Test/E2E/Options.purs","end":[107,73]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"PassBrowserLogs_","moduleName":"Ctl.Internal.Test.E2E.Options","info":{"values":[{"type":{"tag":"RCons","contents":["passBrowserLogs",{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]},{"tag":"TypeVar","contents":"r"}]},"arguments":[["r",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Row"]},{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}]}]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["passphrase",[{"values":[{"sourceSpan":{"start":[196,1],"name":".spago/node-http/v8.0.0/src/Node/HTTP/Secure.purs","end":[196,39]},"score":1,"packageInfo":{"values":["node-http"],"tag":"Package"},"name":"passphrase","moduleName":"Node.HTTP.Secure","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"tag":"TypeConstructor","contents":[["Node","HTTP","Secure"],"SSLOptions"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"See the [node docs](https://nodejs.org/api/tls.html#tls_tls_createsecurecontext_options)\n"}],"tag":"SearchResult"}]],["password",[{"values":[{"sourceSpan":{"start":[20,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLHyperlinkElementUtils.purs","end":[20,70]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"password","moduleName":"Web.HTML.HTMLHyperlinkElementUtils","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLHyperlinkElementUtils"],"HTMLHyperlinkElementUtils"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["paste",[{"values":[{"sourceSpan":{"start":[77,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/Event/EventTypes.purs","end":[77,19]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"paste","moduleName":"Web.HTML.Event.EventTypes","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Web","Event","Event"],"EventType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["patch",[{"values":[{"sourceSpan":{"start":[168,1],"name":".spago/affjax/v13.0.0/src/Affjax.purs","end":[168,136]},"score":0,"packageInfo":{"values":["affjax"],"tag":"Package"},"name":"patch","moduleName":"Affjax","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Affjax"],"AffjaxDriver"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Affjax","ResponseFormat"],"ResponseFormat"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Affjax"],"URL"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Affjax","RequestBody"],"RequestBody"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Affjax"],"Error"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Affjax"],"Response"]},{"tag":"TypeVar","contents":"a"}]}}]}}]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Makes a `PATCH` request to the specified URL with the option to send data.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[38,3],"name":".spago/http-methods/v6.0.0/src/Data/HTTP/Method.purs","end":[38,10]},"score":2,"packageInfo":{"values":["http-methods"],"tag":"Package"},"name":"PATCH","moduleName":"Data.HTTP.Method","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["patch_",[{"values":[{"sourceSpan":{"start":[173,1],"name":".spago/affjax/v13.0.0/src/Affjax.purs","end":[173,84]},"score":0,"packageInfo":{"values":["affjax"],"tag":"Package"},"name":"patch_","moduleName":"Affjax","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Affjax"],"AffjaxDriver"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Affjax"],"URL"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Affjax","RequestBody"],"RequestBody"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Affjax"],"Error"]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Makes a `PATCH` request to the specified URL with the option to send data\nand ignores the response body.\n"}],"tag":"SearchResult"}]],["path",[{"values":[{"sourceSpan":{"start":[77,1],"name":".spago/node-http/v8.0.0/src/Node/HTTP/Client.purs","end":[77,37]},"score":1,"packageInfo":{"values":["node-http"],"tag":"Package"},"name":"path","moduleName":"Node.HTTP.Client","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"tag":"TypeConstructor","contents":[["Node","HTTP","Client"],"RequestOptions"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The request path, including query string if appropriate.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[124,1],"name":".spago/spec/v7.2.0/src/Test/Spec/Tree.purs","end":[124,27]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"Path","moduleName":"Test.Spec.Tree","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Test","Spec","Tree"],"PathItem"]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["pathitem",[{"values":[{"sourceSpan":{"start":[117,1],"name":".spago/spec/v7.2.0/src/Test/Spec/Tree.purs","end":[117,67]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"PathItem","moduleName":"Test.Spec.Tree","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[117,18],"name":".spago/spec/v7.2.0/src/Test/Spec/Tree.purs","end":[117,67]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"PathItem","moduleName":"Test.Spec.Tree","info":{"values":[{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["index",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"RCons","contents":["name",{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"REmpty","contents":{}}]}]}]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["pathname",[{"values":[{"sourceSpan":{"start":[32,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLHyperlinkElementUtils.purs","end":[32,70]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"pathname","moduleName":"Web.HTML.HTMLHyperlinkElementUtils","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLHyperlinkElementUtils"],"HTMLHyperlinkElementUtils"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[48,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/Location.purs","end":[48,53]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"pathname","moduleName":"Web.HTML.Location","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","Location"],"Location"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["pattern",[{"values":[{"sourceSpan":{"start":[467,1],"name":".spago/lists/v7.0.0/src/Data/List/Lazy.purs","end":[467,37]},"score":19,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"Pattern","moduleName":"Data.List.Lazy","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A newtype used in cases where there is a list to be matched.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[467,19],"name":".spago/lists/v7.0.0/src/Data/List/Lazy.purs","end":[467,37]},"score":19,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"Pattern","moduleName":"Data.List.Lazy","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[478,1],"name":".spago/lists/v7.0.0/src/Data/List.purs","end":[478,37]},"score":19,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"Pattern","moduleName":"Data.List","info":{"values":[{"typeArguments":[["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A newtype used in cases where there is a list to be matched.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[478,19],"name":".spago/lists/v7.0.0/src/Data/List.purs","end":[478,37]},"score":19,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"Pattern","moduleName":"Data.List","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/strings/v6.0.1/src/Data/String/Pattern.purs","end":[16,33]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"Pattern","moduleName":"Data.String.Pattern","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A newtype used in cases where there is a string to be matched.\n\n```purescript\npursPattern = Pattern \".purs\"\n--can be used like this:\ncontains pursPattern \"Test.purs\"\n   == true\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[16,17],"name":".spago/strings/v6.0.1/src/Data/String/Pattern.purs","end":[16,33]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"Pattern","moduleName":"Data.String.Pattern","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[252,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLInputElement.purs","end":[252,60]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"pattern","moduleName":"Web.HTML.HTMLInputElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLInputElement"],"HTMLInputElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["patternmismatch",[{"values":[{"sourceSpan":{"start":[27,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/ValidityState.purs","end":[27,51]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"patternMismatch","moduleName":"Web.HTML.ValidityState","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","ValidityState"],"ValidityState"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["pause",[{"values":[{"sourceSpan":{"start":[344,1],"name":".spago/node-net/v4.0.0/src/Node/Net/Socket.purs","end":[344,31]},"score":1,"packageInfo":{"values":["node-net"],"tag":"Package"},"name":"pause","moduleName":"Node.Net.Socket","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Net","Socket"],"Socket"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Pauses `'data'` events from being emitted.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[230,1],"name":".spago/node-streams/v7.0.0/src/Node/Stream.purs","end":[230,60]},"score":6,"packageInfo":{"values":["node-streams"],"tag":"Package"},"name":"pause","moduleName":"Node.Stream","info":{"values":[{"type":{"tag":"ForAll","contents":["w",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","Stream"],"Readable"]},{"tag":"TypeVar","contents":"w"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Pause reading from the stream.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[182,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLMediaElement.purs","end":[182,56]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"pause","moduleName":"Web.HTML.HTMLMediaElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLMediaElement"],"HTMLMediaElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["paused",[{"values":[{"sourceSpan":{"start":[161,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLMediaElement.purs","end":[161,60]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"paused","moduleName":"Web.HTML.HTMLMediaElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLMediaElement"],"HTMLMediaElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["paymentcredential",[{"values":[{"sourceSpan":{"start":[20,1],"name":".spago/cardano-types/v1.0.1/src/Cardano/Types/PaymentCredential.purs","end":[20,57]},"score":0,"packageInfo":{"values":["cardano-types"],"tag":"Package"},"name":"PaymentCredential","moduleName":"Cardano.Types.PaymentCredential","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[20,27],"name":".spago/cardano-types/v1.0.1/src/Cardano/Types/PaymentCredential.purs","end":[20,57]},"score":0,"packageInfo":{"values":["cardano-types"],"tag":"Package"},"name":"PaymentCredential","moduleName":"Cardano.Types.PaymentCredential","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Cardano","Types","Credential"],"Credential"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["paymentpubkeyhash",[{"values":[{"sourceSpan":{"start":[14,1],"name":".spago/plutus-types/v1.0.1/src/Cardano/Plutus/Types/PaymentPubKeyHash.purs","end":[14,57]},"score":0,"packageInfo":{"values":["plutus-types"],"tag":"Package"},"name":"PaymentPubKeyHash","moduleName":"Cardano.Plutus.Types.PaymentPubKeyHash","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":"https://github.com/IntersectMBO/plutus-apps/blob/dbafa0ffdc1babcf8e9143ca5a7adde78d021a9a/plutus-ledger/src/Ledger/Address.hs#L121\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[14,27],"name":".spago/plutus-types/v1.0.1/src/Cardano/Plutus/Types/PaymentPubKeyHash.purs","end":[14,57]},"score":0,"packageInfo":{"values":["plutus-types"],"tag":"Package"},"name":"PaymentPubKeyHash","moduleName":"Cardano.Plutus.Types.PaymentPubKeyHash","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Cardano","Plutus","Types","PubKeyHash"],"PubKeyHash"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[14,1],"name":".spago/cardano-types/v1.0.1/src/Cardano/Types/PaymentPubKeyHash.purs","end":[14,61]},"score":0,"packageInfo":{"values":["cardano-types"],"tag":"Package"},"name":"PaymentPubKeyHash","moduleName":"Cardano.Types.PaymentPubKeyHash","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[14,27],"name":".spago/cardano-types/v1.0.1/src/Cardano/Types/PaymentPubKeyHash.purs","end":[14,61]},"score":0,"packageInfo":{"values":["cardano-types"],"tag":"Package"},"name":"PaymentPubKeyHash","moduleName":"Cardano.Types.PaymentPubKeyHash","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Cardano","Types","Ed25519KeyHash"],"Ed25519KeyHash"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["paymentsigningkeyshelleyed25519",[{"values":[{"sourceSpan":{"start":[29,3],"name":"src/Internal/Cardano/TextEnvelope.purs","end":[29,36]},"score":200000,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"PaymentSigningKeyShelleyed25519","moduleName":"Ctl.Internal.Cardano.TextEnvelope","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["paytoalwaysfails",[{"values":[{"sourceSpan":{"start":[60,1],"name":"examples/Lose7Ada.purs","end":[60,62]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"payToAlwaysFails","moduleName":"Ctl.Examples.Lose7Ada","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Contract","Scripts"],"ValidatorHash"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","TransactionHash"],"TransactionHash"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["paytoalwayssucceeds",[{"values":[{"sourceSpan":{"start":[66,1],"name":"examples/AlwaysSucceeds.purs","end":[66,62]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"payToAlwaysSucceeds","moduleName":"Ctl.Examples.AlwaysSucceeds","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","ScriptHash"],"ScriptHash"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","TransactionHash"],"TransactionHash"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["paytocheckdatumisinline",[{"values":[{"sourceSpan":{"start":[61,1],"name":"examples/PlutusV2/InlineDatum.purs","end":[61,69]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"payToCheckDatumIsInline","moduleName":"Ctl.Examples.PlutusV2.InlineDatum","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Contract","Scripts"],"ValidatorHash"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","TransactionHash"],"TransactionHash"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["paytocheckdatumisinlinewrong",[{"values":[{"sourceSpan":{"start":[115,1],"name":"examples/PlutusV2/InlineDatum.purs","end":[115,74]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"payToCheckDatumIsInlineWrong","moduleName":"Ctl.Examples.PlutusV2.InlineDatum","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Contract","Scripts"],"ValidatorHash"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","TransactionHash"],"TransactionHash"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["paytoexunits",[{"values":[{"sourceSpan":{"start":[53,1],"name":"examples/ExUnits.purs","end":[53,58]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"payToExUnits","moduleName":"Ctl.Examples.ExUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Contract","Scripts"],"ValidatorHash"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","TransactionHash"],"TransactionHash"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["paytoincludedatum",[{"values":[{"sourceSpan":{"start":[60,1],"name":"examples/IncludeDatum.purs","end":[60,63]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"payToIncludeDatum","moduleName":"Ctl.Examples.IncludeDatum","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Contract","Scripts"],"ValidatorHash"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","TransactionHash"],"TransactionHash"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["object",[{"values":[{"sourceSpan":{"start":[67,1],"name":".spago/foreign-object/v4.1.0/src/Foreign/Object.purs","end":[67,43]},"score":11,"packageInfo":{"values":["foreign-object"],"tag":"Package"},"name":"Object","moduleName":"Foreign.Object","info":{"values":[{"typeArguments":[["t0",null]],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"`Object a` represents a homogeneous JS Object with values of type `a`.\n"}],"tag":"SearchResult"}]],["observe",[{"values":[{"sourceSpan":{"start":[24,1],"name":".spago/fixed-points/v7.0.0/src/Data/Functor/Nu.purs","end":[24,51]},"score":1,"packageInfo":{"values":["fixed-points"],"tag":"Package"},"name":"observe","moduleName":"Data.Functor.Nu","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Nu"],"Nu"]},{"tag":"TypeVar","contents":"f"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Nu"],"Nu"]},{"tag":"TypeVar","contents":"f"}]}}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[170,1],"name":".spago/pipes/v8.0.0/src/Pipes/Internal.purs","end":[171,65]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"observe","moduleName":"Pipes.Internal","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a'",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b'",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["r",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"a'"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"a'"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}]}]},null]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[35,1],"name":".spago/web-dom/v6.0.0/src/Web/DOM/MutationObserver.purs","end":[41,17]},"score":4,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"observe","moduleName":"Web.DOM.MutationObserver","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["rx",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Row"],"Union"],"constraintArgs":[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"rx"},{"tag":"TypeConstructor","contents":[["Web","DOM","MutationObserver"],"MutationObserverInitFields"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Node"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","MutationObserver"],"MutationObserver"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["md5hashhex",[{"values":[{"sourceSpan":{"start":[57,1],"name":"test/Utils/Hashing.purs","end":[57,38]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"md5HashHex","moduleName":"Test.Ctl.Internal.Hashing","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["m",[{"values":[{"sourceSpan":{"start":[23,3],"name":".spago/pipes/v8.0.0/src/Pipes/Internal.purs","end":[23,6]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"M","moduleName":"Pipes.Internal","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Internal"],"Proxy"]},{"tag":"TypeVar","contents":"a'"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b'"}]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeVar","contents":"r"}]}}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["leaf",[{"values":[{"sourceSpan":{"start":[71,3],"name":".spago/ordered-collections/v3.0.0/src/Data/Map/Internal.purs","end":[71,9]},"score":6,"packageInfo":{"values":["ordered-collections"],"tag":"Package"},"name":"Leaf","moduleName":"Data.Map.Internal","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[525,3],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Types.purs","end":[525,9]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"Leaf","moduleName":"Options.Applicative.Types","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"a"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[32,3],"name":".spago/spec/v7.2.0/src/Test/Spec/Tree.purs","end":[32,9]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"Leaf","moduleName":"Test.Spec.Tree","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["ledgerconstants",[{"values":[{"sourceSpan":{"start":[177,1],"name":"src/Internal/Contract/Monad.purs","end":[180,4]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"LedgerConstants","moduleName":"Ctl.Internal.Contract.Monad","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["pparams",{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","ProtocolParameters"],"ProtocolParameters"]},{"tag":"RCons","contents":["systemStart",{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","SystemStart"],"SystemStart"]},{"tag":"REmpty","contents":{}}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"`LedgerConstants` contains values that technically may change, but we assume\nto be constant during Contract evaluation.\n"}],"tag":"SearchResult"}]],["left",[{"values":[{"sourceSpan":{"start":[17,17],"name":".spago/either/v6.1.0/src/Data/Either.purs","end":[17,23]},"score":39,"packageInfo":{"values":["either"],"tag":"Package"},"name":"Left","moduleName":"Data.Either","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"a"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[18,1],"name":".spago/functors/v5.0.0/src/Data/Functor/Coproduct.purs","end":[18,45]},"score":6,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"left","moduleName":"Data.Functor.Coproduct","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct"],"Coproduct"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"a"}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Left injection\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[29,3],"name":".spago/profunctor/v6.0.0/src/Data/Profunctor/Choice.purs","end":[29,61]},"score":3,"packageInfo":{"values":["profunctor"],"tag":"Package"},"name":"left","moduleName":"Data.Profunctor.Choice","info":{"values":[{"typeClassArguments":[["p",null]],"typeClass":[["Data","Profunctor","Choice"],"Choice"],"type":{"tag":"ForAll","contents":["p",{"tag":"ForAll","contents":["c",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Profunctor","Choice"],"Choice"],"constraintArgs":[{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"p"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"c"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"c"}]}}]}]}]},null]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["leftalternativeidentity",[{"values":[{"sourceSpan":{"start":[9,1],"name":".spago/properties/v0.2.0/src/Control/Algebra/Properties.purs","end":[9,68]},"score":1,"packageInfo":{"values":["properties"],"tag":"Package"},"name":"leftAlternativeIdentity","moduleName":"Control.Algebra.Properties","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["leftcancellative",[{"values":[{"sourceSpan":{"start":[37,1],"name":".spago/properties/v0.2.0/src/Control/Algebra/Properties.purs","end":[37,65]},"score":1,"packageInfo":{"values":["properties"],"tag":"Package"},"name":"leftCancellative","moduleName":"Control.Algebra.Properties","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["leftdistributive",[{"values":[{"sourceSpan":{"start":[56,1],"name":".spago/properties/v0.2.0/src/Control/Algebra/Properties.purs","end":[57,64]},"score":1,"packageInfo":{"values":["properties"],"tag":"Package"},"name":"leftDistributive","moduleName":"Control.Algebra.Properties","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["leftdiv",[{"values":[{"sourceSpan":{"start":[40,1],"name":".spago/prelude/v6.0.1/src/Data/DivisionRing.purs","end":[40,51]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"leftDiv","moduleName":"Data.DivisionRing","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","DivisionRing"],"DivisionRing"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Left division, defined as `leftDiv a b = recip b * a`. Left and right\ndivision are distinct in this module because a `DivisionRing` is not\nnecessarily commutative.\n\nIf the type `a` is also a `EuclideanRing`, then this function is\nequivalent to `div` from the `EuclideanRing` class. When working\nabstractly, `div` should generally be preferred, unless you know that you\nneed your code to work with noncommutative rings.\n"}],"tag":"SearchResult"}]],["leftsemimedial",[{"values":[{"sourceSpan":{"start":[115,1],"name":".spago/properties/v0.2.0/src/Control/Algebra/Properties.purs","end":[115,67]},"score":1,"packageInfo":{"values":["properties"],"tag":"Package"},"name":"leftSemimedial","moduleName":"Control.Algebra.Properties","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["leftunar",[{"values":[{"sourceSpan":{"start":[132,1],"name":".spago/properties/v0.2.0/src/Control/Algebra/Properties.purs","end":[132,57]},"score":1,"packageInfo":{"values":["properties"],"tag":"Package"},"name":"leftUnar","moduleName":"Control.Algebra.Properties","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["legacydaedalusprivatekey",[{"values":[{"sourceSpan":{"start":[1590,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1590,53]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"LegacyDaedalusPrivateKey","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["legacydaedalusprivatekey_asbytes",[{"values":[{"sourceSpan":{"start":[1592,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1592,89]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"legacyDaedalusPrivateKey_asBytes","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"LegacyDaedalusPrivateKey"]}]},{"tag":"TypeConstructor","contents":[["Data","ByteArray"],"ByteArray"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["legacydaedalusprivatekey_chaincode",[{"values":[{"sourceSpan":{"start":[1593,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1593,91]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"legacyDaedalusPrivateKey_chaincode","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"LegacyDaedalusPrivateKey"]}]},{"tag":"TypeConstructor","contents":[["Data","ByteArray"],"ByteArray"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["length",[{"values":[{"sourceSpan":{"start":[216,1],"name":".spago/arrays/v7.1.0/src/Data/Array/NonEmpty.purs","end":[216,43]},"score":20,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"length","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[233,1],"name":".spago/arrays/v7.1.0/src/Data/Array.purs","end":[233,50]},"score":20,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"length","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get the number of elements in an array.\n```purescript\nlength [\"Hello\", \"World\"] = 2\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[63,1],"name":".spago/catenable-lists/v7.0.0/src/Data/CatList.purs","end":[63,37]},"score":1,"packageInfo":{"values":["catenable-lists"],"tag":"Package"},"name":"length","moduleName":"Data.CatList","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatList"],"CatList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Number of elements in queue.\n\nRunning time: `O(n)` in length of queue.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[62,1],"name":".spago/catenable-lists/v7.0.0/src/Data/CatQueue.purs","end":[62,38]},"score":1,"packageInfo":{"values":["catenable-lists"],"tag":"Package"},"name":"length","moduleName":"Data.CatQueue","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatQueue"],"CatQueue"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Number of elements in queue.\n\nRunning time: `O(n)` in length of queue.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[466,1],"name":".spago/foldable-traversable/v6.0.0/src/Data/Foldable.purs","end":[466,61]},"score":30,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"length","moduleName":"Data.Foldable","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semiring"],"Semiring"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the size/length of a finite structure.\nOptimized for structures that are similar to cons-lists, because there\nis no general way to do better.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[80,1],"name":".spago/lists/v7.0.0/src/Data/List/Lazy/NonEmpty.purs","end":[80,42]},"score":19,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"length","moduleName":"Data.List.Lazy.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[212,1],"name":".spago/lists/v7.0.0/src/Data/List/Lazy.purs","end":[212,34]},"score":19,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"length","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get the length of a list\n\nRunning time: `O(n)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[164,1],"name":".spago/lists/v7.0.0/src/Data/List/NonEmpty.purs","end":[164,42]},"score":19,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"length","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[193,1],"name":".spago/lists/v7.0.0/src/Data/List.purs","end":[193,34]},"score":19,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"length","moduleName":"Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get the length of a list\n\nRunning time: `O(n)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[215,1],"name":".spago/strings/v6.0.1/src/Data/String/CodePoints.purs","end":[215,24]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"length","moduleName":"Data.String.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the number of code points in the string. Operates in constant\nspace and in time linear to the length of the string.\n\n```purescript\n>>> length \"b 𝐀𝐀 c 𝐀\"\n8\n-- compare to Data.String:\n>>> length \"b 𝐀𝐀 c 𝐀\"\n11\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[150,1],"name":".spago/strings/v6.0.1/src/Data/String/CodeUnits.purs","end":[150,39]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"length","moduleName":"Data.String.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the number of characters the string is composed of.\n\n```purescript\nlength \"Hello World\" == 11\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[102,1],"name":".spago/strings/v6.0.1/src/Data/String/NonEmpty/CodePoints.purs","end":[102,32]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"length","moduleName":"Data.String.NonEmpty.CodePoints","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[201,1],"name":".spago/strings/v6.0.1/src/Data/String/NonEmpty/CodeUnits.purs","end":[201,32]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"length","moduleName":"Data.String.NonEmpty.CodeUnits","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the number of characters the string is composed of.\n\n```purescript\nlength (NonEmptyString \"Hello World\") == 11\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[218,1],"name":".spago/stringutils/v0.0.12/src/Data/String/Utils.purs","end":[220,19]},"score":0,"packageInfo":{"values":["stringutils"],"tag":"Package"},"name":"length","moduleName":"Data.String.Utils","info":{"values":[{"type":{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","TypeError"],"Warn"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim","TypeError"],"Text"]},{"tag":"TypeLevelString","contents":"DEPRECATED: `Data.String.Utils.length`"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"DEPRECATED: This function is now available in `purescript-strings`.\n\nReturn the number of Unicode code points in a string.\nNote that this function correctly accounts for Unicode symbols that\nare made up of surrogate pairs. If you want a simple wrapper around\nJavaScript's `string.length` property, you should use the\n`Data.String.CodeUnits.length` function from `purescript-strings`.\n\n```purescript\nlength \"PureScript\" == 10\nlength \"ℙ∪𝕣ⅇႽ𝚌𝕣ⅈ𝚙†\" == 10    -- 14 with `Data.String.length`\n```\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[318,1],"name":".spago/pipes/v8.0.0/src/Pipes/Prelude.purs","end":[318,60]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"length","moduleName":"Pipes.Prelude","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Core"],"Producer"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Count the number of elements in a `Producer`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[42,1],"name":".spago/web-dom/v6.0.0/src/Web/DOM/CharacterData.purs","end":[42,53]},"score":4,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"length","moduleName":"Web.DOM.CharacterData","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","CharacterData"],"CharacterData"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[18,1],"name":".spago/web-dom/v6.0.0/src/Web/DOM/HTMLCollection.purs","end":[18,54]},"score":4,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"length","moduleName":"Web.DOM.HTMLCollection","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"HTMLCollection"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The number of elements in a HTMLCollection.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[17,1],"name":".spago/web-dom/v6.0.0/src/Web/DOM/NodeList.purs","end":[17,48]},"score":4,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"length","moduleName":"Web.DOM.NodeList","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"NodeList"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The number of items in a NodeList.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[19,1],"name":".spago/web-file/v4.0.0/src/Web/File/FileList.purs","end":[19,41]},"score":3,"packageInfo":{"values":["web-file"],"tag":"Package"},"name":"length","moduleName":"Web.File.FileList","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","File","FileList"],"FileList"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Number of files in the `FileList` object.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[59,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/Event/DataTransfer/DataTransferItem.purs","end":[59,38]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"length","moduleName":"Web.HTML.Event.DataTransfer.DataTransferItem","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","Event","DataTransfer","DataTransferItem"],"DataTransferItemList"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[85,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLFormElement.purs","end":[85,55]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"length","moduleName":"Web.HTML.HTMLFormElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLFormElement"],"HTMLFormElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[133,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLSelectElement.purs","end":[133,57]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"length","moduleName":"Web.HTML.HTMLSelectElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLSelectElement"],"HTMLSelectElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[48,1],"name":".spago/web-storage/v5.0.0/src/Web/Storage/Storage.purs","end":[48,47]},"score":1,"packageInfo":{"values":["web-storage"],"tag":"Package"},"name":"length","moduleName":"Web.Storage.Storage","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","Storage","Storage"],"Storage"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the number of items in the storage.\n"}],"tag":"SearchResult"}]],["lengthcomputable",[{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/web-xhr/v5.0.0/src/Web/XHR/ProgressEvent.purs","end":[16,60]},"score":1,"packageInfo":{"values":["web-xhr"],"tag":"Package"},"name":"lengthComputable","moduleName":"Web.XHR.ProgressEvent","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","XHR","ProgressEvent"],"ProgressEvent"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["lengthof",[{"values":[{"sourceSpan":{"start":[132,1],"name":".spago/profunctor-lenses/v8.0.0/src/Data/Lens/Fold.purs","end":[132,68]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"lengthOf","moduleName":"Data.Lens.Fold","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Fold"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Additive"],"Additive"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The number of foci of a `Fold`.\n"}],"tag":"SearchResult"}]],["lens",[{"values":[{"sourceSpan":{"start":[47,1],"name":".spago/profunctor-lenses/v8.0.0/src/Data/Lens/Lens.purs","end":[47,66]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"lens","moduleName":"Data.Lens.Lens","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"t"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a `Lens` from a getter/setter pair.\n\n```purescript\n> species = lens _.species $ _ {species = _}\n> view species {species : \"bovine\"}\n\"bovine\"\n\n> _2 = lens Tuple.snd $ \\(Tuple keep _) new -> Tuple keep new\n```\n\nNote: `_2` is predefined in `Data.Lens.Tuple`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[60,1],"name":".spago/profunctor-lenses/v8.0.0/src/Data/Lens/Types.purs","end":[60,58]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"Lens","moduleName":"Data.Lens.Types","info":{"values":[{"type":{"tag":"ForAll","contents":["p",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Profunctor","Strong"],"Strong"],"constraintArgs":[{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Optic"]},{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},"arguments":[["s",null],["t",null],["a",null],["b",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"Given a type whose \"focus element\" always exists,\na lens provides a convenient way to view, set, and transform\nthat element.\n\nFor example, `_2` is a tuple-specific `Lens` available from `Data.Lens`, so:\n```purescript\nover _2 String.length $ Tuple \"ignore\" \"four\" == Tuple \"ignore\" 4\n```\nNote the result has a different type than the original tuple.\nThat is, the four `Lens` type variables have been narrowed to:\n\n* `s` is `Tuple String String`\n* `t` is `Tuple String Int`\n* `a` is `String`\n* `b` is `Int`\n\nSee `Data.Lens.Getter` and `Data.Lens.Setter` for functions and operators\nfrequently used with lenses.\n"}],"tag":"SearchResult"}]],["lens'",[{"values":[{"sourceSpan":{"start":[50,1],"name":".spago/profunctor-lenses/v8.0.0/src/Data/Lens/Lens.purs","end":[50,65]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"lens'","moduleName":"Data.Lens.Lens","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"t"}]}}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[87,1],"name":".spago/profunctor-lenses/v8.0.0/src/Data/Lens/Types.purs","end":[87,30]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"Lens'","moduleName":"Data.Lens.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]},"arguments":[["s",null],["a",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"`Lens'` is a specialization of `Lens`. An optic of type `Lens'`\ncan change only the value of its focus,\nnot its type. As an example, consider the `Lens` `_2`, which has this type:\n\n```purescript\n_2 :: forall s t a b. Lens (Tuple s a) (Tuple t b) a b\n```\n\n`_2` can produce a `Tuple Int String` from a `Tuple Int Int`:\n\n```purescript\nset _2 \"NEW\" (Tuple 1 2) == (Tuple 1 \"NEW\")\n```\n\nIf we specialize `_2`'s type with `Lens'`, the following will not\ntype check:\n\n```purescript\nset (_2 :: Lens' (Tuple Int Int) Int) \"NEW\" (Tuple 1 2)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n```\n\nSee `Data.Lens.Getter` and `Data.Lens.Setter` for functions and operators\nfrequently used with lenses.\n"}],"tag":"SearchResult"}]],["lensstore",[{"values":[{"sourceSpan":{"start":[99,1],"name":".spago/profunctor-lenses/v8.0.0/src/Data/Lens/Lens.purs","end":[99,68]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"lensStore","moduleName":"Data.Lens.Lens","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"ALens"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"t"}]}}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Converts a lens into the form that `lens'` accepts.\n\nCan be useful when defining a lens where the focus appears under multiple\nconstructors of an algebraic data type.  This function would be called for\neach case of the data type.\n\nFor example:\n\n```\ndata LensStoreExample = LensStoreA Int | LensStoreB (Tuple Boolean Int)\n\nlensStoreExampleInt :: Lens' LensStoreExample Int\nlensStoreExampleInt = lens' case _ of\n  LensStoreA i -> map LensStoreA <$> lensStore identity i\n  LensStoreB i -> map LensStoreB <$> lensStore _2 i\n```\n"}],"tag":"SearchResult"}]],["leq",[{"values":[{"sourceSpan":{"start":[272,1],"name":".spago/plutus-types/v1.0.1/src/Cardano/Plutus/Types/Value.purs","end":[272,33]},"score":0,"packageInfo":{"values":["plutus-types"],"tag":"Package"},"name":"leq","moduleName":"Cardano.Plutus.Types.Value","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Plutus","Types","Value"],"Value"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Plutus","Types","Value"],"Value"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Checks whether one `Value` is less than or equal to another.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[168,1],"name":".spago/cardano-types/v1.0.1/src/Cardano/Types/Value.purs","end":[168,33]},"score":0,"packageInfo":{"values":["cardano-types"],"tag":"Package"},"name":"leq","moduleName":"Cardano.Types.Value","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Value"],"Value"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Value"],"Value"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Check whether one `Value` is less than or equal to another. See `Value` for an explanation of how operations on `Value`s work.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[92,1],"name":"src/Internal/Types/Val.purs","end":[92,29]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"leq","moduleName":"Ctl.Internal.Types.Val","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","Val"],"Val"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Types","Val"],"Val"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["lessthan",[{"values":[{"sourceSpan":{"start":[136,1],"name":".spago/prelude/v6.0.1/src/Data/Ord.purs","end":[136,49]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"lessThan","moduleName":"Data.Ord","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test whether one value is _strictly less than_ another.\n"}],"tag":"SearchResult"}]],["lessthanoreq",[{"values":[{"sourceSpan":{"start":[148,1],"name":".spago/prelude/v6.0.1/src/Data/Ord.purs","end":[148,53]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"lessThanOrEq","moduleName":"Data.Ord","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test whether one value is _non-strictly less than_ another.\n"}],"tag":"SearchResult"}]],["letter",[{"values":[{"sourceSpan":{"start":[82,1],"name":".spago/parsing/v10.2.0/src/Parsing/String/Basic.purs","end":[82,42]},"score":1,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"letter","moduleName":"Parsing.String.Basic","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Parsing"],"ParserT"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Char"]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Parse an alphabetical character.  Matches any char that satisfies `Data.CodePoint.Unicode.isAlpha`.\n"}],"tag":"SearchResult"}]],["letternumber",[{"values":[{"sourceSpan":{"start":[120,3],"name":".spago/unicode/v6.0.0/src/Data/CodePoint/Unicode.purs","end":[120,17]},"score":1,"packageInfo":{"values":["unicode"],"tag":"Package"},"name":"LetterNumber","moduleName":"Data.CodePoint.Unicode","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["levelcolor",[{"values":[{"sourceSpan":{"start":[36,1],"name":"examples/KeyWallet/Internal/Cip30HtmlForm.purs","end":[36,33]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"levelColor","moduleName":"Ctl.Examples.KeyWallet.Internal.Cip30HtmlForm","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Log","Level"],"LogLevel"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[37,1],"name":"examples/KeyWallet/Internal/Pkh2PkhHtmlForm.purs","end":[37,33]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"levelColor","moduleName":"Ctl.Examples.KeyWallet.Internal.Pkh2PkhHtmlForm","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Log","Level"],"LogLevel"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["levelname",[{"values":[{"sourceSpan":{"start":[29,1],"name":"examples/KeyWallet/Internal/Cip30HtmlForm.purs","end":[29,32]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"levelName","moduleName":"Ctl.Examples.KeyWallet.Internal.Cip30HtmlForm","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Log","Level"],"LogLevel"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[30,1],"name":"examples/KeyWallet/Internal/Pkh2PkhHtmlForm.purs","end":[30,32]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"levelName","moduleName":"Ctl.Examples.KeyWallet.Internal.Pkh2PkhHtmlForm","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Log","Level"],"LogLevel"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["hidden",[{"values":[{"sourceSpan":{"start":[206,1],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Builder.purs","end":[206,30]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"hidden","moduleName":"Options.Applicative.Builder","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Builder","Internal"],"Mod"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"a"}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Hide this option from the brief description.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[156,3],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Types.purs","end":[156,11]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"Hidden","moduleName":"Options.Applicative.Types","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[9,3],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLDocument/VisibilityState.purs","end":[9,11]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"Hidden","moduleName":"Web.HTML.HTMLDocument.VisibilityState","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[105,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLElement.purs","end":[105,55]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"hidden","moduleName":"Web.HTML.HTMLElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLElement"],"HTMLElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["hidecursor",[{"values":[{"sourceSpan":{"start":[39,3],"name":".spago/ansi/v7.0.0/src/Ansi/Codes.purs","end":[39,15]},"score":2,"packageInfo":{"values":["ansi"],"tag":"Package"},"name":"HideCursor","moduleName":"Ansi.Codes","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["high",[{"values":[{"sourceSpan":{"start":[69,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLMeterElement.purs","end":[69,57]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"high","moduleName":"Web.HTML.HTMLMeterElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLMeterElement"],"HTMLMeterElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"Number"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["history",[{"values":[{"sourceSpan":{"start":[8,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/History.purs","end":[8,36]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"History","moduleName":"Web.HTML.History","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[69,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/Window.purs","end":[69,51]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"history","moduleName":"Web.HTML.Window","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","Window"],"Window"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Web","HTML","History"],"History"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["historysize",[{"values":[{"sourceSpan":{"start":[51,1],"name":".spago/node-readline/v7.0.0/src/Node/ReadLine.purs","end":[51,43]},"score":0,"packageInfo":{"values":["node-readline"],"tag":"Package"},"name":"historySize","moduleName":"Node.ReadLine","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Options"],"Option"]},{"tag":"TypeConstructor","contents":[["Node","ReadLine"],"InterfaceOptions"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["elasticidentity",[{"values":[{"sourceSpan":{"start":[52,1],"name":".spago/properties/v0.2.0/src/Control/Algebra/Properties.purs","end":[52,60]},"score":1,"packageInfo":{"values":["properties"],"tag":"Package"},"name":"elasticIdentity","moduleName":"Control.Algebra.Properties","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["elem",[{"values":[{"sourceSpan":{"start":[265,1],"name":".spago/arrays/v7.1.0/src/Data/Array/NonEmpty.purs","end":[265,58]},"score":20,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"elem","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[416,1],"name":".spago/arrays/v7.1.0/src/Data/Array.purs","end":[416,50]},"score":20,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"elem","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns true if the array has the given element.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[386,1],"name":".spago/foldable-traversable/v6.0.0/src/Data/Foldable.purs","end":[386,62]},"score":30,"packageInfo":{"values":["foldable-traversable"],"tag":"Package"},"name":"elem","moduleName":"Data.Foldable","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Test whether a value is an element of a data structure.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[274,1],"name":".spago/pipes/v8.0.0/src/Pipes/Prelude.purs","end":[274,75]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"elem","moduleName":"Pipes.Prelude","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Pipes","Core"],"Producer"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"elem returns `True` if p has an element equal to a, `False` otherwise\n"}],"tag":"SearchResult"}]],["element",[{"values":[{"sourceSpan":{"start":[112,1],"name":".spago/profunctor-lenses/v8.0.0/src/Data/Lens/Traversal.purs","end":[117,21]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"element","moduleName":"Data.Lens.Traversal","info":{"values":[{"type":{"tag":"ForAll","contents":["p",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Lens","Internal","Wander"],"Wander"],"constraintArgs":[{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Traversal"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Optic"]},{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Combine an index and a traversal to narrow the focus to a single\nelement. Compare to `Data.Lens.Index`.\n\n```purescript\nset     (element 2 traversed) 8888 [0, 0, 3] == [0, 0, 8888]\npreview (element 2 traversed)      [0, 0, 3] == Just 3\n```\nThe resulting traversal is called an *affine traversal*, which\nmeans that the traversal focuses on one or zero (if the index is out of range)\nresults.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[6,1],"name":".spago/web-dom/v6.0.0/src/Web/DOM/Internal/Types.purs","end":[6,36]},"score":4,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"Element","moduleName":"Web.DOM.Internal.Types","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["elementhandle",[{"values":[{"sourceSpan":{"start":[22,1],"name":".spago/toppokki/5992e93396a734c980ef61c74df5b6ab46108920/src/Toppoki.purs","end":[22,42]},"score":0,"packageInfo":{"values":["toppokki"],"tag":"Package"},"name":"ElementHandle","moduleName":"Toppokki","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["elementnode",[{"values":[{"sourceSpan":{"start":[8,3],"name":".spago/web-dom/v6.0.0/src/Web/DOM/NodeType.purs","end":[8,16]},"score":4,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"ElementNode","moduleName":"Web.DOM.NodeType","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["elements",[{"values":[{"sourceSpan":{"start":[74,1],"name":".spago/gen/v4.0.0/src/Control/Monad/Gen.purs","end":[74,66]},"score":12,"packageInfo":{"values":["gen"],"tag":"Package"},"name":"elements","moduleName":"Control.Monad.Gen","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","Gen","Class"],"MonadGen"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semigroup","Foldable"],"Foldable1"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Creates a generator that outputs a value chosen from a selection with\nuniform probability.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[218,1],"name":".spago/quickcheck/v8.0.1/src/Test/QuickCheck/Gen.purs","end":[218,47]},"score":14,"packageInfo":{"values":["quickcheck"],"tag":"Package"},"name":"elements","moduleName":"Test.QuickCheck.Gen","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Test","QuickCheck","Gen"],"Gen"]},{"tag":"TypeVar","contents":"a"}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create a random generator which selects a value from a non-empty array with\nuniform probability.\n"}],"tag":"SearchResult"}]],["elementsof",[{"values":[{"sourceSpan":{"start":[121,1],"name":".spago/profunctor-lenses/v8.0.0/src/Data/Lens/Traversal.purs","end":[126,30]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"elementsOf","moduleName":"Data.Lens.Traversal","info":{"values":[{"type":{"tag":"ForAll","contents":["p",{"tag":"ForAll","contents":["i",{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Lens","Internal","Wander"],"Wander"],"constraintArgs":[{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"IndexedTraversal"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"IndexedOptic"]},{"tag":"TypeVar","contents":"p"}]},{"tag":"TypeVar","contents":"i"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Traverse elements of an `IndexedTraversal` whose index satisfy a predicate.\n"}],"tag":"SearchResult"}]],["elemindex",[{"values":[{"sourceSpan":{"start":[271,1],"name":".spago/arrays/v7.1.0/src/Data/Array/NonEmpty.purs","end":[271,65]},"score":20,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"elemIndex","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[430,1],"name":".spago/arrays/v7.1.0/src/Data/Array.purs","end":[430,57]},"score":20,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"elemIndex","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Find the index of the first element equal to the specified element.\n\n```purescript\nelemIndex \"a\" [\"a\", \"b\", \"a\", \"c\"] = Just 0\nelemIndex \"Earth\" [\"Hello\", \"World\", \"!\"] = Nothing\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[310,1],"name":".spago/lists/v7.0.0/src/Data/List/Lazy.purs","end":[310,56]},"score":19,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"elemIndex","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Find the index of the first element equal to the specified element.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[174,1],"name":".spago/lists/v7.0.0/src/Data/List/NonEmpty.purs","end":[174,64]},"score":19,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"elemIndex","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[290,1],"name":".spago/lists/v7.0.0/src/Data/List.purs","end":[290,56]},"score":19,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"elemIndex","moduleName":"Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Find the index of the first element equal to the specified element.\n"}],"tag":"SearchResult"}]],["elemlastindex",[{"values":[{"sourceSpan":{"start":[274,1],"name":".spago/arrays/v7.1.0/src/Data/Array/NonEmpty.purs","end":[274,69]},"score":20,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"elemLastIndex","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[440,1],"name":".spago/arrays/v7.1.0/src/Data/Array.purs","end":[440,61]},"score":20,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"elemLastIndex","moduleName":"Data.Array","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Find the index of the last element equal to the specified element.\n\n```purescript\nelemLastIndex \"a\" [\"a\", \"b\", \"a\", \"c\"] = Just 2\nelemLastIndex \"Earth\" [\"Hello\", \"World\", \"!\"] = Nothing\n```\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[314,1],"name":".spago/lists/v7.0.0/src/Data/List/Lazy.purs","end":[314,60]},"score":19,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"elemLastIndex","moduleName":"Data.List.Lazy","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Find the index of the last element equal to the specified element.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[177,1],"name":".spago/lists/v7.0.0/src/Data/List/NonEmpty.purs","end":[177,68]},"score":19,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"elemLastIndex","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[294,1],"name":".spago/lists/v7.0.0/src/Data/List.purs","end":[294,60]},"score":19,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"elemLastIndex","moduleName":"Data.List","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Find the index of the last element equal to the specified element.\n"}],"tag":"SearchResult"}]],["elemof",[{"values":[{"sourceSpan":{"start":[116,1],"name":".spago/profunctor-lenses/v8.0.0/src/Data/Lens/Fold.purs","end":[116,83]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"elemOf","moduleName":"Data.Lens.Fold","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Eq"],"Eq"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Fold"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Monoid","Disj"],"Disj"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}]}]}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Whether a `Fold` contains a given element.\n"}],"tag":"SearchResult"}]],["elems",[{"values":[{"sourceSpan":{"start":[245,1],"name":".spago/plutus-types/v1.0.1/src/Cardano/Plutus/Types/Map.purs","end":[245,60]},"score":0,"packageInfo":{"values":["plutus-types"],"tag":"Package"},"name":"elems","moduleName":"Cardano.Plutus.Types.Map","info":{"values":[{"type":{"tag":"ForAll","contents":["k",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ForAll","contents":["v",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Cardano","Plutus","Types","Map"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"v"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Return all elements of the map in the ascending order of their keys.\n"}],"tag":"SearchResult"}]],["body",[{"values":[{"sourceSpan":{"start":[90,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLDocument.purs","end":[90,51]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"body","moduleName":"Web.HTML.HTMLDocument","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLDocument"],"HTMLDocument"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLElement"],"HTMLElement"]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["bodyhelp",[{"values":[{"sourceSpan":{"start":[161,1],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Help/Core.purs","end":[161,36]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"bodyHelp","moduleName":"Options.Applicative.Help.Core","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Chunk"],"Chunk"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]},{"tag":"TypeConstructor","contents":[["Options","Applicative","Help","Types"],"ParserHelp"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["bold",[{"values":[{"sourceSpan":{"start":[123,3],"name":".spago/ansi/v7.0.0/src/Ansi/Codes.purs","end":[123,9]},"score":2,"packageInfo":{"values":["ansi"],"tag":"Package"},"name":"Bold","moduleName":"Ansi.Codes","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[30,1],"name":".spago/ansi/v7.0.0/src/Ansi/Output.purs","end":[30,35]},"score":2,"packageInfo":{"values":["ansi"],"tag":"Package"},"name":"bold","moduleName":"Ansi.Output","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeConstructor","contents":[["Ansi","Codes"],"GraphicsParam"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[39,1],"name":".spago/spec/v7.2.0/src/Test/Spec/Style.purs","end":[39,14]},"score":5,"packageInfo":{"values":["spec"],"tag":"Package"},"name":"bold","moduleName":"Test.Spec.Style","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Test","Spec","Style"],"Style"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["bool",[{"values":[{"sourceSpan":{"start":[52,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Bool.purs","end":[52,24]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"Bool","moduleName":"Data.Typelevel.Bool","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Typelevel","Bool"],"BoolI"],"constraintArgs":[{"tag":"TypeVar","contents":"b"}]}],"fundeps":[],"arguments":[["b",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"A type level boolean constraint.\n\nUse `(Bool b) => b` to express that the type `b` must be\neither `True` or `False`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[352,1],"name":".spago/optparse/v5.0.0/src/Text/PrettyPrint/Leijen.purs","end":[352,23]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"bool","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The document @(bool b)@ shows the literal bool @b@ using 'text'.\n"}],"tag":"SearchResult"}]],["boolean",[{"values":[{"sourceSpan":{"start":[135,1],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Builder.purs","end":[135,25]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"boolean","moduleName":"Options.Applicative.Builder","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Options","Applicative","Types"],"ReadM"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Boolean 'Option' reader.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Boolean","moduleName":"Prim","info":{"values":[{"kind":{"tag":"TypeConstructor","contents":[["Prim"],"Type"]}}],"tag":"ExternDataResult"},"hashAnchor":"t","comments":"A JavaScript Boolean value.\n\nConstruct values of this type with the literals `true` and `false`.\n\nThe `True` and `False` types defined in `Prim.Boolean` have this type as their kind.\n"}],"tag":"SearchResult"}]],["booleanalgebra",[{"values":[{"sourceSpan":{"start":[22,1],"name":".spago/prelude/v6.0.1/src/Data/BooleanAlgebra.purs","end":[22,43]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"BooleanAlgebra","moduleName":"Data.BooleanAlgebra","info":{"values":[{"superclasses":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]}],"fundeps":[],"arguments":[["a",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `BooleanAlgebra` type class represents types that behave like boolean\nvalues.\n\nInstances should satisfy the following laws in addition to the\n`HeytingAlgebra` law:\n\n- Excluded middle:\n  - `a || not a = tt`\n"}],"tag":"SearchResult"}]],["booleanalgebrarecord",[{"values":[{"sourceSpan":{"start":[33,1],"name":".spago/prelude/v6.0.1/src/Data/BooleanAlgebra.purs","end":[33,109]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"BooleanAlgebraRecord","moduleName":"Data.BooleanAlgebra","info":{"values":[{"superclasses":[{"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebraRecord"],"constraintArgs":[{"tag":"TypeVar","contents":"rowlist"},{"tag":"TypeVar","contents":"row"},{"tag":"TypeVar","contents":"subrow"}]}],"fundeps":[[["rowlist"],["subrow"]]],"arguments":[["rowlist",null],["row",null],["subrow",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"A class for records where all fields have `BooleanAlgebra` instances, used\nto implement the `BooleanAlgebra` instance for records.\n"}],"tag":"SearchResult"}]],["booleanlit",[{"values":[{"sourceSpan":{"start":[10,1],"name":".spago/literals/v1.0.2/src/Literals/Boolean.purs","end":[10,42]},"score":1,"packageInfo":{"values":["literals"],"tag":"Package"},"name":"BooleanLit","moduleName":"Literals.Boolean","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Literals","Literal"],"Literal"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeVar","contents":"sym"}]},"arguments":[["sym",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["booleantag",[{"values":[{"sourceSpan":{"start":[23,3],"name":".spago/monad-logger/v1.3.1/src/Data/Log/Tag.purs","end":[23,15]},"score":0,"packageInfo":{"values":["monad-logger"],"tag":"Package"},"name":"BooleanTag","moduleName":"Data.Log.Tag","info":{"values":[{"arguments":[{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[41,1],"name":".spago/monad-logger/v1.3.1/src/Data/Log/Tag.purs","end":[41,42]},"score":0,"packageInfo":{"values":["monad-logger"],"tag":"Package"},"name":"booleanTag","moduleName":"Data.Log.Tag","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Boolean"]}]},{"tag":"TypeConstructor","contents":[["Data","Log","Tag"],"TagSet"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["booli",[{"values":[{"sourceSpan":{"start":[45,1],"name":".spago/typelevel/v6.0.0/src/Data/Typelevel/Bool.purs","end":[46,25]},"score":1,"packageInfo":{"values":["typelevel"],"tag":"Package"},"name":"BoolI","moduleName":"Data.Typelevel.Bool","info":{"values":[{"superclasses":[],"fundeps":[],"arguments":[["b",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["bootstrapwitness",[{"values":[{"sourceSpan":{"start":[1045,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1045,45]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"BootstrapWitness","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/cardano-types/v1.0.1/src/Cardano/Types/BootstrapWitness.purs","end":[26,4]},"score":0,"packageInfo":{"values":["cardano-types"],"tag":"Package"},"name":"BootstrapWitness","moduleName":"Cardano.Types.BootstrapWitness","info":{"values":[{"typeArguments":[],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[21,26],"name":".spago/cardano-types/v1.0.1/src/Cardano/Types/BootstrapWitness.purs","end":[26,4]},"score":0,"packageInfo":{"values":["cardano-types"],"tag":"Package"},"name":"BootstrapWitness","moduleName":"Cardano.Types.BootstrapWitness","info":{"values":[{"arguments":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["vkey",{"tag":"TypeConstructor","contents":[["Cardano","Types","Vkey"],"Vkey"]},{"tag":"RCons","contents":["signature",{"tag":"TypeConstructor","contents":[["Cardano","Types","Ed25519Signature"],"Ed25519Signature"]},{"tag":"RCons","contents":["chainCode",{"tag":"TypeConstructor","contents":[["Data","ByteArray"],"ByteArray"]},{"tag":"RCons","contents":["attributes",{"tag":"TypeConstructor","contents":[["Data","ByteArray"],"ByteArray"]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["bootstrapwitness_attributes",[{"values":[{"sourceSpan":{"start":[1050,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1050,76]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"bootstrapWitness_attributes","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"BootstrapWitness"]}]},{"tag":"TypeConstructor","contents":[["Data","ByteArray"],"ByteArray"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["bootstrapwitness_chaincode",[{"values":[{"sourceSpan":{"start":[1049,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1049,75]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"bootstrapWitness_chainCode","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"BootstrapWitness"]}]},{"tag":"TypeConstructor","contents":[["Data","ByteArray"],"ByteArray"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["bootstrapwitness_new",[{"values":[{"sourceSpan":{"start":[1051,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1051,110]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"bootstrapWitness_new","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"Vkey"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"Ed25519Signature"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","ByteArray"],"ByteArray"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","ByteArray"],"ByteArray"]}]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"BootstrapWitness"]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["bootstrapwitness_signature",[{"values":[{"sourceSpan":{"start":[1048,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1048,82]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"bootstrapWitness_signature","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"BootstrapWitness"]}]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"Ed25519Signature"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["bootstrapwitness_vkey",[{"values":[{"sourceSpan":{"start":[1047,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1047,65]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"bootstrapWitness_vkey","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"BootstrapWitness"]}]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"Vkey"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["bootstrapwitnesses",[{"values":[{"sourceSpan":{"start":[1064,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1064,47]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"BootstrapWitnesses","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["bootstrapwitnesses_new",[{"values":[{"sourceSpan":{"start":[1066,1],"name":".spago/cardano-serialization-lib/26d437c3f398172c839b93b57c30eb43a7fa7ca0/src/Cardano/Serialization/Lib.purs","end":[1066,67]},"score":0,"packageInfo":{"values":["cardano-serialization-lib"],"tag":"Package"},"name":"bootstrapWitnesses_new","moduleName":"Cardano.Serialization.Lib","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Cardano","Serialization","Lib"],"BootstrapWitnesses"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["border",[{"values":[{"sourceSpan":{"start":[148,1],"name":".spago/web-html/v4.1.0/src/Web/HTML/HTMLTableElement.purs","end":[148,59]},"score":1,"packageInfo":{"values":["web-html"],"tag":"Package"},"name":"border","moduleName":"Web.HTML.HTMLTableElement","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","HTML","HTMLTableElement"],"HTMLTableElement"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["both",[{"values":[{"sourceSpan":{"start":[151,1],"name":".spago/profunctor-lenses/v8.0.0/src/Data/Lens/Traversal.purs","end":[151,71]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"both","moduleName":"Data.Lens.Traversal","info":{"values":[{"type":{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Bitraversable"],"Bitraversable"],"constraintArgs":[{"tag":"TypeVar","contents":"r"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Traversal"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"b"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[18,3],"name":".spago/these/v6.0.0/src/Data/These.purs","end":[18,9]},"score":1,"packageInfo":{"values":["these"],"tag":"Package"},"name":"Both","moduleName":"Data.These","info":{"values":[{"arguments":[{"tag":"TypeVar","contents":"a"},{"tag":"TypeVar","contents":"b"}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[161,1],"name":".spago/these/v6.0.0/src/Data/These.purs","end":[161,51]},"score":1,"packageInfo":{"values":["these"],"tag":"Package"},"name":"both","moduleName":"Data.These","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","These"],"These"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Returns the `a` and `b` values if and only if they are constructed\nwith `Both`.\n"}],"tag":"SearchResult"}]],["bottom",[{"values":[{"sourceSpan":{"start":[27,3],"name":".spago/prelude/v6.0.1/src/Data/Bounded.purs","end":[27,14]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"bottom","moduleName":"Data.Bounded","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","Bounded"],"Bounded"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Bounded"],"Bounded"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[42,3],"name":".spago/lattice/v0.3.0/src/Data/Lattice.purs","end":[42,13]},"score":0,"packageInfo":{"values":["lattice"],"tag":"Package"},"name":"bottom","moduleName":"Data.Lattice","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","Lattice"],"BoundedJoinSemilattice"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Lattice"],"BoundedJoinSemilattice"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["bottomrecord",[{"values":[{"sourceSpan":{"start":[73,3],"name":".spago/prelude/v6.0.1/src/Data/Bounded.purs","end":[73,62]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"bottomRecord","moduleName":"Data.Bounded","info":{"values":[{"typeClassArguments":[["rowlist",null],["row",null],["subrow",null]],"typeClass":[["Data","Bounded"],"BoundedRecord"],"type":{"tag":"ForAll","contents":["rowlist",{"tag":"ForAll","contents":["row",{"tag":"ForAll","contents":["subrow",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Bounded"],"BoundedRecord"],"constraintArgs":[{"tag":"TypeVar","contents":"rowlist"},{"tag":"TypeVar","contents":"row"},{"tag":"TypeVar","contents":"subrow"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","contents":"rowlist"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","contents":"row"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"subrow"}]}]}]}]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["bounded",[{"values":[{"sourceSpan":{"start":[25,1],"name":".spago/prelude/v6.0.1/src/Data/Bounded.purs","end":[27,14]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Bounded","moduleName":"Data.Bounded","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]}],"fundeps":[],"arguments":[["a",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `Bounded` type class represents totally ordered types that have an\nupper and lower boundary.\n\nInstances should satisfy the following law in addition to the `Ord` laws:\n\n- Bounded: `bottom <= a <= top`\n"}],"tag":"SearchResult"}]],["boundeddict",[{"values":[{"sourceSpan":{"start":[326,1],"name":".spago/variant/v8.0.0/src/Data/Variant/Internal.purs","end":[329,4]},"score":2,"packageInfo":{"values":["variant"],"tag":"Package"},"name":"BoundedDict","moduleName":"Data.Variant.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["top",{"tag":"TypeVar","contents":"a"},{"tag":"RCons","contents":["bottom",{"tag":"TypeVar","contents":"a"},{"tag":"REmpty","contents":{}}]}]}]},"arguments":[["a",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["boundedenum",[{"values":[{"sourceSpan":{"start":[113,1],"name":".spago/enums/v6.0.1/src/Data/Enum.purs","end":[116,23]},"score":11,"packageInfo":{"values":["enums"],"tag":"Package"},"name":"BoundedEnum","moduleName":"Data.Enum","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Bounded"],"Bounded"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"constraintClass":[["Data","Enum"],"Enum"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]}],"fundeps":[],"arguments":[["a",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Type class for finite enumerations.\n\nThis should not be considered a part of a numeric hierarchy, as in Haskell.\nRather, this is a type class for small, ordered sum types with\nstatically-determined cardinality and the ability to easily compute\nsuccessor and predecessor elements like `DayOfWeek`.\n\nLaws:\n\n- ```succ bottom >>= succ >>= succ ... succ [cardinality - 1 times] == top```\n- ```pred top    >>= pred >>= pred ... pred [cardinality - 1 times] == bottom```\n- ```forall a > bottom: pred a >>= succ == Just a```\n- ```forall a < top:  succ a >>= pred == Just a```\n- ```forall a > bottom: fromEnum <$> pred a = pred (fromEnum a)```\n- ```forall a < top:  fromEnum <$> succ a = succ (fromEnum a)```\n- ```e1 `compare` e2 == fromEnum e1 `compare` fromEnum e2```\n- ```toEnum (fromEnum a) = Just a```\n"}],"tag":"SearchResult"}]],["boundedenumdict",[{"values":[{"sourceSpan":{"start":[331,1],"name":".spago/variant/v8.0.0/src/Data/Variant/Internal.purs","end":[337,4]},"score":2,"packageInfo":{"values":["variant"],"tag":"Package"},"name":"BoundedEnumDict","moduleName":"Data.Variant.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["pred",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"RCons","contents":["succ",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"RCons","contents":["fromEnum",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"RCons","contents":["toEnum",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"RCons","contents":["cardinality",{"tag":"TypeConstructor","contents":[["Prim"],"Int"]},{"tag":"REmpty","contents":{}}]}]}]}]}]}]},"arguments":[["a",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["boundedjoinsemilattice",[{"values":[{"sourceSpan":{"start":[41,1],"name":".spago/lattice/v0.3.0/src/Data/Lattice.purs","end":[42,13]},"score":0,"packageInfo":{"values":["lattice"],"tag":"Package"},"name":"BoundedJoinSemilattice","moduleName":"Data.Lattice","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Lattice"],"JoinSemilattice"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]}],"fundeps":[],"arguments":[["a",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"A `BoundedJoinSemilattice` must satisfy the following laws in addition to\n`JoinSemilattice` laws:\n\n+ Bottom (Unitary Element):\n    forall a,     join a bottom     == a\n\n Join semilattices capture the notion of sets with a \"least upper bound\"\n equipped with a \"bottom\" element.\n"}],"tag":"SearchResult"}]],["boundedlattice",[{"values":[{"sourceSpan":{"start":[72,1],"name":".spago/lattice/v0.3.0/src/Data/Lattice.purs","end":[72,78]},"score":0,"packageInfo":{"values":["lattice"],"tag":"Package"},"name":"BoundedLattice","moduleName":"Data.Lattice","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Lattice"],"BoundedJoinSemilattice"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"constraintClass":[["Data","Lattice"],"BoundedMeetSemilattice"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]}],"fundeps":[],"arguments":[["a",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"A `BoundedLattice` must satisfy the following in addition to\n`BoundedMeetSemilattice` and `BoundedJoinSemilattice` laws:\n\n+ Absorbtion laws for meet and join:\n    forall a b,   meet a (join a b) == a\n    forall a b,   join a (meet a b) == a\n"}],"tag":"SearchResult"}]],["boundedmeetsemilattice",[{"values":[{"sourceSpan":{"start":[53,1],"name":".spago/lattice/v0.3.0/src/Data/Lattice.purs","end":[54,10]},"score":0,"packageInfo":{"values":["lattice"],"tag":"Package"},"name":"BoundedMeetSemilattice","moduleName":"Data.Lattice","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Lattice"],"MeetSemilattice"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]}],"fundeps":[],"arguments":[["a",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"A `BoundedMeetSemilattice` must satisfy the following laws in addition to\n`MeetSemilattice` laws:\n\n+  Top (Unitary Element):\n    forall a,     meet a top        == a\n\nMeet semilattices capture the notion of sets with a \"greatest lower bound\"\nequipped with a \"top\" element.\n"}],"tag":"SearchResult"}]],["boundedrecord",[{"values":[{"sourceSpan":{"start":[71,1],"name":".spago/prelude/v6.0.1/src/Data/Bounded.purs","end":[73,62]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"BoundedRecord","moduleName":"Data.Bounded","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Ord"],"OrdRecord"],"constraintArgs":[{"tag":"TypeVar","contents":"rowlist"},{"tag":"TypeVar","contents":"row"}]}],"fundeps":[[["rowlist"],["subrow"]]],"arguments":[["rowlist",null],["row",null],["subrow",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["ap",[{"values":[{"sourceSpan":{"start":[82,1],"name":".spago/prelude/v6.0.1/src/Control/Monad.purs","end":[82,56]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"ap","moduleName":"Control.Monad","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad"],"Monad"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"`ap` provides a default implementation of `(<*>)` for any `Monad`, without\nusing `(<*>)` as provided by the `Apply`-`Monad` superclass relationship.\n\n`ap` can therefore be used to write `Apply` instances as follows:\n\n```purescript\ninstance applyF :: Apply F where\n  apply = ap\n```\n"}],"tag":"SearchResult"}]],["apapplyflipped",[{"values":[{"sourceSpan":{"start":[49,1],"name":".spago/optparse/v5.0.0/src/Options/Applicative/Internal/Utils.purs","end":[49,68]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"apApplyFlipped","moduleName":"Options.Applicative.Internal.Utils","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Apply"],"Apply"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["apathize",[{"values":[{"sourceSpan":{"start":[280,1],"name":".spago/aff/v7.1.0/src/Effect/Aff.purs","end":[280,40]},"score":13,"packageInfo":{"values":["aff"],"tag":"Package"},"name":"apathize","moduleName":"Effect.Aff","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Ignores any errors.\n"}],"tag":"SearchResult"}]],["api",[{"values":[{"sourceSpan":{"start":[50,1],"name":".spago/cip30/8f1b34b48825fcec5e9c67f33e255770b1e0bc45/src/Cardano/Wallet/Cip30.purs","end":[50,32]},"score":0,"packageInfo":{"values":["cip30"],"tag":"Package"},"name":"Api","moduleName":"Cardano.Wallet.Cip30","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":"A datatype representing a CIP-30 connection object.\n"}],"tag":"SearchResult"}]],["apierror",[{"values":[{"sourceSpan":{"start":[99,1],"name":".spago/cip30-typesafe/d72e51fbc0255eb3246c9132d295de7f65e16a99/src/Cardano/Wallet/Cip30/TypeSafe.purs","end":[102,4]},"score":0,"packageInfo":{"values":["cip30-typesafe"],"tag":"Package"},"name":"APIError","moduleName":"Cardano.Wallet.Cip30.TypeSafe","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"RCons","contents":["code",{"tag":"TypeConstructor","contents":[["Cardano","Wallet","Cip30","TypeSafe"],"APIErrorTag"]},{"tag":"RCons","contents":["info",{"tag":"TypeConstructor","contents":[["Prim"],"String"]},{"tag":"REmpty","contents":{}}]}]}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["apierroraccountchange",[{"values":[{"sourceSpan":{"start":[91,3],"name":".spago/cip30-typesafe/d72e51fbc0255eb3246c9132d295de7f65e16a99/src/Cardano/Wallet/Cip30/TypeSafe.purs","end":[91,26]},"score":0,"packageInfo":{"values":["cip30-typesafe"],"tag":"Package"},"name":"APIErrorAccountChange","moduleName":"Cardano.Wallet.Cip30.TypeSafe","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["apierrorinternalerror",[{"values":[{"sourceSpan":{"start":[89,3],"name":".spago/cip30-typesafe/d72e51fbc0255eb3246c9132d295de7f65e16a99/src/Cardano/Wallet/Cip30/TypeSafe.purs","end":[89,26]},"score":0,"packageInfo":{"values":["cip30-typesafe"],"tag":"Package"},"name":"APIErrorInternalError","moduleName":"Cardano.Wallet.Cip30.TypeSafe","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["apierrorinvalidrequest",[{"values":[{"sourceSpan":{"start":[88,3],"name":".spago/cip30-typesafe/d72e51fbc0255eb3246c9132d295de7f65e16a99/src/Cardano/Wallet/Cip30/TypeSafe.purs","end":[88,27]},"score":0,"packageInfo":{"values":["cip30-typesafe"],"tag":"Package"},"name":"APIErrorInvalidRequest","moduleName":"Cardano.Wallet.Cip30.TypeSafe","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["apierrorrefused",[{"values":[{"sourceSpan":{"start":[90,3],"name":".spago/cip30-typesafe/d72e51fbc0255eb3246c9132d295de7f65e16a99/src/Cardano/Wallet/Cip30/TypeSafe.purs","end":[90,20]},"score":0,"packageInfo":{"values":["cip30-typesafe"],"tag":"Package"},"name":"APIErrorRefused","moduleName":"Cardano.Wallet.Cip30.TypeSafe","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["apierrortag",[{"values":[{"sourceSpan":{"start":[87,1],"name":".spago/cip30-typesafe/d72e51fbc0255eb3246c9132d295de7f65e16a99/src/Cardano/Wallet/Cip30/TypeSafe.purs","end":[91,26]},"score":0,"packageInfo":{"values":["cip30-typesafe"],"tag":"Package"},"name":"APIErrorTag","moduleName":"Cardano.Wallet.Cip30.TypeSafe","info":{"values":[{"typeArguments":[],"dataDeclType":"data"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["app",[{"values":[{"sourceSpan":{"start":[19,1],"name":".spago/functors/v5.0.0/src/Data/Functor/App.purs","end":[19,28]},"score":6,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"App","moduleName":"Data.Functor.App","info":{"values":[{"typeArguments":[["f",null],["a",null]],"dataDeclType":"newtype"}],"tag":"DataResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[19,17],"name":".spago/functors/v5.0.0/src/Data/Functor/App.purs","end":[19,28]},"score":6,"packageInfo":{"values":["functors"],"tag":"Package"},"name":"App","moduleName":"Data.Functor.App","info":{"values":[{"arguments":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}}]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["appcons",[{"values":[{"sourceSpan":{"start":[186,1],"name":".spago/cardano-plutus-data-schema/v1.0.0/src/Cardano/Plutus/DataSchema.purs","end":[186,31]},"score":0,"packageInfo":{"values":["cardano-plutus-data-schema"],"tag":"Package"},"name":"ApPCons","moduleName":"Cardano.Plutus.DataSchema","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Cardano","Plutus","DataSchema"],"PCons"]},{"tag":"TypeVar","contents":"x"}]},{"tag":"TypeVar","contents":"xs"}]},"arguments":[["x",null],["xs",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"Type synonym which is used to provide syntatic sugar to PCons. You can think of :+ as a type level version of : for PSchema\n"}],"tag":"SearchResult"}]],["append",[{"values":[{"sourceSpan":{"start":[70,1],"name":".spago/catenable-lists/v7.0.0/src/Data/CatList.purs","end":[70,56]},"score":1,"packageInfo":{"values":["catenable-lists"],"tag":"Package"},"name":"append","moduleName":"Data.CatList","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatList"],"CatList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatList"],"CatList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","CatList"],"CatList"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Append all elements of a catenable list to the end of another\ncatenable list, create a new catenable list.\n\nRunning time: `O(1)`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[35,3],"name":".spago/prelude/v6.0.1/src/Data/Semigroup.purs","end":[35,24]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"append","moduleName":"Data.Semigroup","info":{"values":[{"typeClassArguments":[["a",null]],"typeClass":[["Data","Semigroup"],"Semigroup"],"type":{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semigroup"],"Semigroup"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":null,"score":0,"packageInfo":{"values":[],"tag":"Builtin"},"name":"Append","moduleName":"Prim.Symbol","info":{"values":[{"superclasses":[],"fundeps":[[["left","right"],["appended"]],[["right","appended"],["left"]],[["appended","left"],["right"]]],"arguments":[["left",{"tag":"TypeConstructor","contents":[["Prim"],"Symbol"]}],["right",{"tag":"TypeConstructor","contents":[["Prim"],"Symbol"]}],["appended",{"tag":"TypeConstructor","contents":[["Prim"],"Symbol"]}]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Compiler solved type class for appending `Symbol`s together.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[37,1],"name":".spago/typelevel-prelude/v7.0.0/src/Type/Data/Ordering.purs","end":[37,48]},"score":3,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"Append","moduleName":"Type.Data.Ordering","info":{"values":[{"superclasses":[],"fundeps":[[["lhs"],["rhs","output"]]],"arguments":[["lhs",null],["rhs",null],["output",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"Append two `Ordering` types together\nReflective of the semigroup for value level `Ordering`\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[42,1],"name":".spago/typelevel-prelude/v7.0.0/src/Type/Data/Ordering.purs","end":[42,70]},"score":3,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"append","moduleName":"Type.Data.Ordering","info":{"values":[{"type":{"tag":"ForAll","contents":["l",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["o",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Type","Data","Ordering"],"Append"],"constraintArgs":[{"tag":"TypeVar","contents":"l"},{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","contents":"l"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","contents":"o"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[20,1],"name":".spago/typelevel-prelude/v7.0.0/src/Type/Data/Symbol.purs","end":[20,70]},"score":3,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"append","moduleName":"Type.Data.Symbol","info":{"values":[{"type":{"tag":"ForAll","contents":["l",{"tag":"ForAll","contents":["r",{"tag":"ForAll","contents":["o",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","Symbol"],"Append"],"constraintArgs":[{"tag":"TypeVar","contents":"l"},{"tag":"TypeVar","contents":"r"},{"tag":"TypeVar","contents":"o"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","contents":"l"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","contents":"r"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","contents":"o"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[44,1],"name":".spago/web-xhr/v5.0.0/src/Web/XHR/FormData.purs","end":[44,57]},"score":1,"packageInfo":{"values":["web-xhr"],"tag":"Package"},"name":"append","moduleName":"Web.XHR.FormData","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","XHR","FormData"],"EntryName"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","XHR","FormData"],"FormData"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["appendarray",[{"values":[{"sourceSpan":{"start":[233,1],"name":".spago/arrays/v7.1.0/src/Data/Array/NonEmpty.purs","end":[233,71]},"score":20,"packageInfo":{"values":["arrays"],"tag":"Package"},"name":"appendArray","moduleName":"Data.Array.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["appendblob",[{"values":[{"sourceSpan":{"start":[47,1],"name":".spago/web-xhr/v5.0.0/src/Web/XHR/FormData.purs","end":[47,77]},"score":1,"packageInfo":{"values":["web-xhr"],"tag":"Package"},"name":"appendBlob","moduleName":"Web.XHR.FormData","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","XHR","FormData"],"EntryName"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","File","Blob"],"Blob"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Web","XHR","FormData"],"FileName"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","XHR","FormData"],"FormData"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["appendchild",[{"values":[{"sourceSpan":{"start":[182,1],"name":".spago/web-dom/v6.0.0/src/Web/DOM/Node.purs","end":[182,58]},"score":4,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"appendChild","moduleName":"Web.DOM.Node","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Node"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","Internal","Types"],"Node"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Appends the first node to the child node list of the second node.\n"}],"tag":"SearchResult"}]],["appenddata",[{"values":[{"sourceSpan":{"start":[46,1],"name":".spago/web-dom/v6.0.0/src/Web/DOM/CharacterData.purs","end":[46,68]},"score":4,"packageInfo":{"values":["web-dom"],"tag":"Package"},"name":"appendData","moduleName":"Web.DOM.CharacterData","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Web","DOM","CharacterData"],"CharacterData"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["appendfile",[{"values":[{"sourceSpan":{"start":[231,1],"name":".spago/node-fs-aff/v9.1.0/src/Node/FS/Aff.purs","end":[231,45]},"score":1,"packageInfo":{"values":["node-fs-aff"],"tag":"Package"},"name":"appendFile","moduleName":"Node.FS.Aff","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"\nAppends the contents of a buffer to a file.\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[303,1],"name":".spago/node-fs/v8.1.1/src/Node/FS/Async.purs","end":[306,26]},"score":3,"packageInfo":{"values":["node-fs"],"tag":"Package"},"name":"appendFile","moduleName":"Node.FS.Async","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","FS","Async"],"Callback"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Appends the contents of a buffer to a file.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[272,1],"name":".spago/node-fs/v8.1.1/src/Node/FS/Sync.purs","end":[274,26]},"score":3,"packageInfo":{"values":["node-fs"],"tag":"Package"},"name":"appendFile","moduleName":"Node.FS.Sync","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Buffer"],"Buffer"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Appends the contents of a buffer to a file.\n"}],"tag":"SearchResult"}]],["appendfirstmaybe",[{"values":[{"sourceSpan":{"start":[153,1],"name":"src/Internal/Helpers.purs","end":[153,70]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"appendFirstMaybe","moduleName":"Ctl.Internal.Helpers","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Combine two `Maybe`s taking the `First` `Maybe`\n"}],"tag":"SearchResult"}]],["appendfoldable",[{"values":[{"sourceSpan":{"start":[86,1],"name":".spago/lists/v7.0.0/src/Data/List/Lazy/NonEmpty.purs","end":[86,84]},"score":19,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"appendFoldable","moduleName":"Data.List.Lazy.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Lazy","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[229,1],"name":".spago/lists/v7.0.0/src/Data/List/NonEmpty.purs","end":[229,84]},"score":19,"packageInfo":{"values":["lists"],"tag":"Package"},"name":"appendFoldable","moduleName":"Data.List.NonEmpty","info":{"values":[{"type":{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Foldable"],"Foldable"],"constraintArgs":[{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"t"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["appendlastmaybe",[{"values":[{"sourceSpan":{"start":[159,1],"name":"src/Internal/Helpers.purs","end":[159,69]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"appendLastMaybe","moduleName":"Ctl.Internal.Helpers","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Combine two `Maybe`s taking the `Last` `Maybe`\n"}],"tag":"SearchResult"}]],["appendmap",[{"values":[{"sourceSpan":{"start":[179,1],"name":"src/Internal/Helpers.purs","end":[185,13]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"appendMap","moduleName":"Ctl.Internal.Helpers","info":{"values":[{"type":{"tag":"ForAll","contents":["k",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ForAll","contents":["v",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semigroup"],"Semigroup"],"constraintArgs":[{"tag":"TypeVar","contents":"v"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Provide an append for Maps where the value has as `Semigroup` instance\n"}],"tag":"SearchResult"}]],["appendmodifying",[{"values":[{"sourceSpan":{"start":[140,1],"name":".spago/profunctor-lenses/v8.0.0/src/Data/Lens/Setter.purs","end":[140,93]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"appendModifying","moduleName":"Data.Lens.Setter","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Monad","State","Class"],"MonadState"],"constraintArgs":[{"tag":"TypeVar","contents":"s"},{"tag":"TypeVar","contents":"m"}]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semigroup"],"Semigroup"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Setter'"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["appendover",[{"values":[{"sourceSpan":{"start":[106,1],"name":".spago/profunctor-lenses/v8.0.0/src/Data/Lens/Setter.purs","end":[106,73]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"appendOver","moduleName":"Data.Lens.Setter","info":{"values":[{"type":{"tag":"ForAll","contents":["s",{"tag":"ForAll","contents":["t",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semigroup"],"Semigroup"],"constraintArgs":[{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Setter"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["appendrecord",[{"values":[{"sourceSpan":{"start":[67,3],"name":".spago/prelude/v6.0.1/src/Data/Semigroup.purs","end":[67,77]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"appendRecord","moduleName":"Data.Semigroup","info":{"values":[{"typeClassArguments":[["rowlist",null],["row",null],["subrow",null]],"typeClass":[["Data","Semigroup"],"SemigroupRecord"],"type":{"tag":"ForAll","contents":["rowlist",{"tag":"ForAll","contents":["row",{"tag":"ForAll","contents":["subrow",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Semigroup"],"SemigroupRecord"],"constraintArgs":[{"tag":"TypeVar","contents":"rowlist"},{"tag":"TypeVar","contents":"row"},{"tag":"TypeVar","contents":"subrow"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","contents":"rowlist"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"row"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"row"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"TypeVar","contents":"subrow"}]}]}]}]}]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["appendrightmap",[{"values":[{"sourceSpan":{"start":[189,1],"name":"src/Internal/Helpers.purs","end":[194,13]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"appendRightMap","moduleName":"Ctl.Internal.Helpers","info":{"values":[{"type":{"tag":"ForAll","contents":["k",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ForAll","contents":["v",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"ConstrainedType","contents":[{"constraintClass":[["Data","Ord"],"Ord"],"constraintArgs":[{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","contents":"k"}]},{"tag":"TypeVar","contents":"v"}]}]}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Provide an append for `Map`s with right bias\n"}],"tag":"SearchResult"}]],["appendstring",[{"values":[{"sourceSpan":{"start":[90,1],"name":".spago/strings/v6.0.1/src/Data/String/NonEmpty/Internal.purs","end":[90,59]},"score":17,"packageInfo":{"values":["strings"],"tag":"Package"},"name":"appendString","moduleName":"Data.String.NonEmpty.Internal","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Appends a string to this non-empty string. Since one of the strings is\nnon-empty we know the result will be too.\n\n```purescript\nappendString (NonEmptyString \"Hello\") \" world\" == NonEmptyString \"Hello world\"\nappendString (NonEmptyString \"Hello\") \"\" == NonEmptyString \"Hello\"\n```\n"}],"tag":"SearchResult"}]],["appendtextfile",[{"values":[{"sourceSpan":{"start":[237,1],"name":".spago/node-fs-aff/v9.1.0/src/Node/FS/Aff.purs","end":[237,61]},"score":1,"packageInfo":{"values":["node-fs-aff"],"tag":"Package"},"name":"appendTextFile","moduleName":"Node.FS.Aff","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Encoding"],"Encoding"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"\nAppends text to a file using the specified encoding.\n\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[312,1],"name":".spago/node-fs/v8.1.1/src/Node/FS/Async.purs","end":[316,30]},"score":3,"packageInfo":{"values":["node-fs"],"tag":"Package"},"name":"appendTextFile","moduleName":"Node.FS.Async","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Encoding"],"Encoding"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Node","FS","Async"],"Callback"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Appends text to a file using the specified encoding.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[280,1],"name":".spago/node-fs/v8.1.1/src/Node/FS/Sync.purs","end":[283,30]},"score":3,"packageInfo":{"values":["node-fs"],"tag":"Package"},"name":"appendTextFile","moduleName":"Node.FS.Sync","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Encoding"],"Encoding"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Node","Path"],"FilePath"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Appends text to a file using the specified encoding.\n"}],"tag":"SearchResult"}]],["appendwithline",[{"values":[{"sourceSpan":{"start":[222,1],"name":".spago/optparse/v5.0.0/src/Text/PrettyPrint/Leijen.purs","end":[222,36]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"appendWithLine","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The document @(x \\<$\\> y)@ concatenates document @x@ and @y@ with a\n'line' in between. (infixr 5)\n"}],"tag":"SearchResult"}]],["appendwithlinebreak",[{"values":[{"sourceSpan":{"start":[228,1],"name":".spago/optparse/v5.0.0/src/Text/PrettyPrint/Leijen.purs","end":[228,41]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"appendWithLinebreak","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The document @(x \\<$$\\> y)@ concatenates document @x@ and @y@ with\na @linebreak@ in between. (infixr 5)\n"}],"tag":"SearchResult"}]],["appendwithsoftbreak",[{"values":[{"sourceSpan":{"start":[216,1],"name":".spago/optparse/v5.0.0/src/Text/PrettyPrint/Leijen.purs","end":[216,41]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"appendWithSoftbreak","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The document @(x \\<\\/\\/\\> y)@ concatenates document @x@ and @y@ with\na 'softbreak' in between. This effectively puts @x@ and @y@ either\nright next to each other or underneath each other. (infixr 5)\n"}],"tag":"SearchResult"}]],["appendwithsoftline",[{"values":[{"sourceSpan":{"start":[209,1],"name":".spago/optparse/v5.0.0/src/Text/PrettyPrint/Leijen.purs","end":[209,40]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"appendWithSoftline","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The document @(x \\<\\/\\> y)@ concatenates document @x@ and @y@ with a\n'softline' in between. This effectively puts @x@ and @y@ either\nnext to each other (with a @space@ in between) or underneath each\nother. (infixr 5)\n"}],"tag":"SearchResult"}]],["appendwithspace",[{"values":[{"sourceSpan":{"start":[201,1],"name":".spago/optparse/v5.0.0/src/Text/PrettyPrint/Leijen.purs","end":[201,37]},"score":0,"packageInfo":{"values":["optparse"],"tag":"Package"},"name":"appendWithSpace","moduleName":"Text.PrettyPrint.Leijen","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]},{"tag":"TypeConstructor","contents":[["Text","PrettyPrint","Leijen"],"Doc"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The document @(x \\<+\\> y)@ concatenates document @x@ and @y@ with a\n@space@ in between.  (infixr 6)\n"}],"tag":"SearchResult"}]],["applicationformurlencoded",[{"values":[{"sourceSpan":{"start":[6,1],"name":".spago/media-types/v6.0.0/src/Data/MediaType/Common.purs","end":[6,39]},"score":2,"packageInfo":{"values":["media-types"],"tag":"Package"},"name":"applicationFormURLEncoded","moduleName":"Data.MediaType.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","MediaType"],"MediaType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The `application/x-www-form-urlencoded` media type.\n"}],"tag":"SearchResult"}]],["applicationjavascript",[{"values":[{"sourceSpan":{"start":[14,1],"name":".spago/media-types/v6.0.0/src/Data/MediaType/Common.purs","end":[14,35]},"score":2,"packageInfo":{"values":["media-types"],"tag":"Package"},"name":"applicationJavascript","moduleName":"Data.MediaType.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","MediaType"],"MediaType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The `application/javascript` media type.\n"}],"tag":"SearchResult"}]],["applicationjson",[{"values":[{"sourceSpan":{"start":[10,1],"name":".spago/media-types/v6.0.0/src/Data/MediaType/Common.purs","end":[10,29]},"score":2,"packageInfo":{"values":["media-types"],"tag":"Package"},"name":"applicationJSON","moduleName":"Data.MediaType.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","MediaType"],"MediaType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The `application/json` media type.\n"}],"tag":"SearchResult"}]],["applicationoctetstream",[{"values":[{"sourceSpan":{"start":[18,1],"name":".spago/media-types/v6.0.0/src/Data/MediaType/Common.purs","end":[18,36]},"score":2,"packageInfo":{"values":["media-types"],"tag":"Package"},"name":"applicationOctetStream","moduleName":"Data.MediaType.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","MediaType"],"MediaType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The `application/octet-stream` media type.\n"}],"tag":"SearchResult"}]],["applicationxml",[{"values":[{"sourceSpan":{"start":[22,1],"name":".spago/media-types/v6.0.0/src/Data/MediaType/Common.purs","end":[22,28]},"score":2,"packageInfo":{"values":["media-types"],"tag":"Package"},"name":"applicationXML","moduleName":"Data.MediaType.Common","info":{"values":[{"type":{"tag":"TypeConstructor","contents":[["Data","MediaType"],"MediaType"]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"The `application/xml` media type.\n"}],"tag":"SearchResult"}]],["applicative",[{"values":[{"sourceSpan":{"start":[35,1],"name":".spago/prelude/v6.0.1/src/Control/Applicative.purs","end":[36,29]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Applicative","moduleName":"Control.Applicative","info":{"values":[{"superclasses":[{"constraintClass":[["Control","Apply"],"Apply"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]}],"fundeps":[],"arguments":[["f",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `Applicative` type class extends the [`Apply`](#apply) type class\nwith a `pure` function, which can be used to create values of type `f a`\nfrom values of type `a`.\n\nWhere [`Apply`](#apply) provides the ability to lift functions of two or\nmore arguments to functions whose arguments are wrapped using `f`, and\n[`Functor`](#functor) provides the ability to lift functions of one\nargument, `pure` can be seen as the function which lifts functions of\n_zero_ arguments. That is, `Applicative` functors support a lifting\noperation for any number of function arguments.\n\nInstances must satisfy the following laws in addition to the `Apply`\nlaws:\n\n- Identity: `(pure identity) <*> v = v`\n- Composition: `pure (<<<) <*> f <*> g <*> h = f <*> (g <*> h)`\n- Homomorphism: `(pure f) <*> (pure x) = pure (f x)`\n- Interchange: `u <*> (pure y) = (pure (_ $ y)) <*> u`\n"}],"tag":"SearchResult"}]],["apply",[{"values":[{"sourceSpan":{"start":[52,1],"name":".spago/prelude/v6.0.1/src/Control/Apply.purs","end":[53,48]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"Apply","moduleName":"Control.Apply","info":{"values":[{"superclasses":[{"constraintClass":[["Data","Functor"],"Functor"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]}],"fundeps":[],"arguments":[["f",null]]}],"tag":"TypeClassResult"},"hashAnchor":"t","comments":"The `Apply` class provides the `(<*>)` which is used to apply a function\nto an argument under a type constructor.\n\n`Apply` can be used to lift functions of two or more arguments to work on\nvalues wrapped with the type constructor `f`. It might also be understood\nin terms of the `lift2` function:\n\n```purescript\nlift2 :: forall f a b c. Apply f => (a -> b -> c) -> f a -> f b -> f c\nlift2 f a b = f <$> a <*> b\n```\n\n`(<*>)` is recovered from `lift2` as `lift2 ($)`. That is, `(<*>)` lifts\nthe function application operator `($)` to arguments wrapped with the\ntype constructor `f`.\n\nPut differently...\n```\nfoo =\n  functionTakingNArguments <$> computationProducingArg1\n                           <*> computationProducingArg2\n                           <*> ...\n                           <*> computationProducingArgN\n```\n\nInstances must satisfy the following law in addition to the `Functor`\nlaws:\n\n- Associative composition: `(<<<) <$> f <*> g <*> h = f <*> (g <*> h)`\n\nFormally, `Apply` represents a strong lax semi-monoidal endofunctor.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[53,3],"name":".spago/prelude/v6.0.1/src/Control/Apply.purs","end":[53,48]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"apply","moduleName":"Control.Apply","info":{"values":[{"typeClassArguments":[["f",null]],"typeClass":[["Control","Apply"],"Apply"],"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["a",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Apply"],"Apply"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}}],"tag":"TypeClassMemberResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[48,1],"name":".spago/prelude/v6.0.1/src/Data/Function.purs","end":[48,40]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"apply","moduleName":"Data.Function","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Applies a function to an argument. This is primarily used as the operator\n`($)` which allows parentheses to be omitted in some cases, or as a\nnatural way to apply a chain of composed functions to a value.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[10,1],"name":".spago/typelevel-prelude/v7.0.0/src/Type/Function.purs","end":[10,21]},"score":3,"packageInfo":{"values":["typelevel-prelude"],"tag":"Package"},"name":"APPLY","moduleName":"Type.Function","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]},"arguments":[["f",null],["a",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"Polymorphic Type application\n\nFor example...\n```\nAPPLY Maybe Int == Maybe $ Int == Maybe Int\n```\n"}],"tag":"SearchResult"}]],["applyanddelay",[{"values":[{"sourceSpan":{"start":[208,1],"name":".spago/aff-retry/v2.0.0/src/Effect/Aff/Retry.purs","end":[211,27]},"score":0,"packageInfo":{"values":["aff-retry"],"tag":"Package"},"name":"applyAndDelay","moduleName":"Effect.Aff.Retry","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Effect","Aff","Class"],"MonadAff"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff","Retry"],"RetryPolicyM"]},{"tag":"TypeVar","contents":"m"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Effect","Aff","Retry"],"RetryStatus"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Effect","Aff","Retry"],"RetryStatus"]}]}}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Apply policy and delay by its amount if it results in a retry.\nReturns updated status.\n"}],"tag":"SearchResult"}]],["applyargs",[{"values":[{"sourceSpan":{"start":[25,1],"name":"src/Internal/ApplyArgs.purs","end":[26,68]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"applyArgs","moduleName":"Ctl.Internal.ApplyArgs","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","PlutusScript"],"PlutusScript"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","PlutusData"],"PlutusData"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Cardano","Types","PlutusScript"],"PlutusScript"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["applyfirst",[{"values":[{"sourceSpan":{"start":[69,1],"name":".spago/prelude/v6.0.1/src/Control/Apply.purs","end":[69,57]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"applyFirst","moduleName":"Control.Apply","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Apply"],"Apply"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Combine two effectful actions, keeping only the result of the first.\n"}],"tag":"SearchResult"}]],["applyflipped",[{"values":[{"sourceSpan":{"start":[74,1],"name":".spago/prelude/v6.0.1/src/Data/Function.purs","end":[74,47]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"applyFlipped","moduleName":"Data.Function","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeVar","contents":"b"}]}]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Applies an argument to a function. This is primarily used as the `(#)`\noperator, which allows parentheses to be omitted in some cases, or as a\nnatural way to apply a value to a chain of composed functions.\n"}],"tag":"SearchResult"}]],["applyn",[{"values":[{"sourceSpan":{"start":[104,1],"name":".spago/prelude/v6.0.1/src/Data/Function.purs","end":[104,46]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"applyN","moduleName":"Data.Function","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"`applyN f n` applies the function `f` to its argument `n` times.\n\nIf n is less than or equal to 0, the function is not applied.\n\n```purescript\napplyN (_ + 1) 10 0 == 10\n```\n"}],"tag":"SearchResult"}]],["applypolicy",[{"values":[{"sourceSpan":{"start":[191,1],"name":".spago/aff-retry/v2.0.0/src/Effect/Aff/Retry.purs","end":[195,27]},"score":0,"packageInfo":{"values":["aff-retry"],"tag":"Package"},"name":"applyPolicy","moduleName":"Effect.Aff.Retry","info":{"values":[{"type":{"tag":"ForAll","contents":["m",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Effect","Aff","Class"],"MonadAff"],"constraintArgs":[{"tag":"TypeVar","contents":"m"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff","Retry"],"RetryPolicyM"]},{"tag":"TypeVar","contents":"m"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Effect","Aff","Retry"],"RetryStatus"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"m"},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Effect","Aff","Retry"],"RetryStatus"]}]}}]}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Apply policy on status to see what the decision would be.\n'Nothing' implies no retry, 'Just' returns updated status.\n"}],"tag":"SearchResult"}]],["applysecond",[{"values":[{"sourceSpan":{"start":[75,1],"name":".spago/prelude/v6.0.1/src/Control/Apply.purs","end":[75,58]},"score":91,"packageInfo":{"values":["prelude"],"tag":"Package"},"name":"applySecond","moduleName":"Control.Apply","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["f",{"tag":"ConstrainedType","contents":[{"constraintClass":[["Control","Apply"],"Apply"],"constraintArgs":[{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"f"},{"tag":"TypeVar","contents":"b"}]}]}]}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Combine two effectful actions, keeping only the result of the second.\n"}],"tag":"SearchResult"}]],["april",[{"values":[{"sourceSpan":{"start":[50,3],"name":".spago/datetime/v6.1.0/src/Data/Date/Component.purs","end":[50,10]},"score":11,"packageInfo":{"values":["datetime"],"tag":"Package"},"name":"April","moduleName":"Data.Date.Component","info":{"values":[{"arguments":[]}],"tag":"DataConstructorResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["aprism",[{"values":[{"sourceSpan":{"start":[135,1],"name":".spago/profunctor-lenses/v8.0.0/src/Data/Lens/Types.purs","end":[135,49]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"APrism","moduleName":"Data.Lens.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Optic"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Internal","Market"],"Market"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"t"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},"arguments":[["s",null],["t",null],["a",null],["b",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"A prism defined in terms of `Market` to be safe from impredicativity\nissues in the type checker. See the `docs/` folder for a more detailed\nexplanation.\n"}],"tag":"SearchResult"}]],["aprism'",[{"values":[{"sourceSpan":{"start":[136,1],"name":".spago/profunctor-lenses/v8.0.0/src/Data/Lens/Types.purs","end":[136,34]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"APrism'","moduleName":"Data.Lens.Types","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"APrism"]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"s"}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"a"}]},"arguments":[["s",null],["a",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"}]],["_redeemers",[{"values":[{"sourceSpan":{"start":[54,1],"name":"src/Internal/BalanceTx/UnattachedTx.purs","end":[55,79]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"_redeemers","moduleName":"Ctl.Internal.BalanceTx.UnattachedTx","info":{"values":[{"type":{"tag":"ForAll","contents":["redeemer",{"tag":"TypeConstructor","contents":[["Prim"],"Type"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","BalanceTx","UnattachedTx"],"UnattachedTx"]},{"tag":"TypeVar","contents":"redeemer"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeVar","contents":"redeemer"}]}}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[163,1],"name":"src/Internal/Lens.purs","end":[163,59]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"_redeemers","moduleName":"Ctl.Internal.Lens","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","TransactionWitnessSet"],"TransactionWitnessSet"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Redeemer"],"Redeemer"]}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[96,1],"name":"src/Internal/ProcessConstraints/State.purs","end":[97,63]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"_redeemers","moduleName":"Ctl.Internal.ProcessConstraints.State","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","ProcessConstraints","State"],"ConstraintProcessingState"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","BalanceTx","RedeemerIndex"],"UnindexedRedeemer"]}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_referenceinputs",[{"values":[{"sourceSpan":{"start":[114,1],"name":"src/Internal/Lens.purs","end":[114,67]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"_referenceInputs","moduleName":"Ctl.Internal.Lens","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","TransactionBody"],"TransactionBody"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","TransactionInput"],"TransactionInput"]}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_refscriptsutxomap",[{"values":[{"sourceSpan":{"start":[104,1],"name":"src/Internal/ProcessConstraints/State.purs","end":[105,45]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"_refScriptsUtxoMap","moduleName":"Ctl.Internal.ProcessConstraints.State","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","ProcessConstraints","State"],"ConstraintProcessingState"]}]},{"tag":"TypeConstructor","contents":[["Cardano","Types","UtxoMap"],"UtxoMap"]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_removeonwserror",[{"values":[{"sourceSpan":{"start":[50,1],"name":"src/Internal/JsWebSocket.purs","end":[53,17]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"_removeOnWsError","moduleName":"Ctl.Internal.JsWebSocket","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","JsWebSocket"],"JsWebSocket"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","JsWebSocket"],"ListenerRef"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Call `removeEventListener` for a given listener.\n"}],"tag":"SearchResult"}]],["_requiredsigners",[{"values":[{"sourceSpan":{"start":[117,1],"name":"src/Internal/Lens.purs","end":[117,65]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"_requiredSigners","moduleName":"Ctl.Internal.Lens","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","TransactionBody"],"TransactionBody"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Ed25519KeyHash"],"Ed25519KeyHash"]}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]],["_right",[{"values":[{"sourceSpan":{"start":[15,1],"name":".spago/profunctor-lenses/v8.0.0/src/Data/Lens/Prism/Coproduct.purs","end":[15,80]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"_Right","moduleName":"Data.Lens.Prism.Coproduct","info":{"values":[{"type":{"tag":"ForAll","contents":["f",{"tag":"ForAll","contents":["g",{"tag":"ForAll","contents":["h",{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct"],"Coproduct"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"g"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Functor","Coproduct"],"Coproduct"]},{"tag":"TypeVar","contents":"f"}]},{"tag":"TypeVar","contents":"h"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"g"},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeVar","contents":"h"},{"tag":"TypeVar","contents":"a"}]}}]},null]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Prism for the `right` of a `Coproduct`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[16,1],"name":".spago/profunctor-lenses/v8.0.0/src/Data/Lens/Prism/Either.purs","end":[16,60]},"score":1,"packageInfo":{"values":["profunctor-lenses"],"tag":"Package"},"name":"_Right","moduleName":"Data.Lens.Prism.Either","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"ForAll","contents":["b",{"tag":"ForAll","contents":["c",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Lens","Types"],"Prism"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"a"}]}}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","contents":"c"}]},{"tag":"TypeVar","contents":"b"}]}}]},{"tag":"TypeVar","contents":"a"}]},{"tag":"TypeVar","contents":"b"}]},null]},null]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Prism for the `Right` constructor of `Either`.\n"}],"tag":"SearchResult"}]],["/>/",[{"values":[{"sourceSpan":{"start":[113,1],"name":".spago/pipes/v8.0.0/src/Pipes/Core.purs","end":[113,40]},"score":1,"packageInfo":{"values":["pipes"],"tag":"Package"},"name":"(/>/)","moduleName":"Pipes.Core","info":{"values":[],"tag":"ValueAliasResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"}]]]