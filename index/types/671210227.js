// This file was generated by purescript-docs-search
window.DocsSearchTypeIndex["671210227"] = [{"values":[{"sourceSpan":{"start":[205,1],"name":".spago/foreign-object/v4.1.0/src/Foreign/Object.purs","end":[205,66]},"score":11,"packageInfo":{"values":["foreign-object"],"tag":"Package"},"name":"pop","moduleName":"Foreign.Object","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Foreign","Object"],"Object"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","contents":"a"}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Foreign","Object"],"Object"]},{"tag":"TypeVar","contents":"a"}]}}]}}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Delete a key and value from a map, returning the value\nas well as the subsequent map\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[193,1],"name":".spago/affjax/v13.0.0/src/Affjax.purs","end":[193,82]},"score":0,"packageInfo":{"values":["affjax"],"tag":"Package"},"name":"request","moduleName":"Affjax","info":{"values":[{"type":{"tag":"ForAll","contents":["a",{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Affjax"],"AffjaxDriver"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Affjax"],"Request"]},{"tag":"TypeVar","contents":"a"}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","contents":[["Affjax"],"Error"]}]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Affjax"],"Response"]},{"tag":"TypeVar","contents":"a"}]}}]}}]}]}]},null]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Makes an HTTP request.\n\nThe example below performs a `GET` request to the URL `/resource` and\ninterprets the response body as JSON.\n\n```purescript\nimport Affjax.ResponseFormat (json)\n...\nrequest (defaultRequest { url = \"/resource\", method = Left GET, responseFormat = json})\n```\n\nFor common cases helper functions can often be used instead of `request` .\nFor instance, the above example is equivalent to the following.\n\n```purescript\nget json \"/resource\"\n```\n"}],"tag":"SearchResult"}]