// This file was generated by purescript-docs-search
window.DocsSearchTypeIndex["1080722025"] = [{"values":[{"sourceSpan":{"start":[542,1],"name":".spago/parsing/v10.2.0/src/Parsing/String/Replace.purs","end":[545,12]},"score":1,"packageInfo":{"values":["parsing"],"tag":"Package"},"name":"replace","moduleName":"Parsing.String.Replace","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Parsing"],"Parser"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"\n#### Find-and-replace\n\nAlso called “match-and-substitute”. Find all\nof the leftmost non-overlapping sections of the input string which match\nthe pattern parser `sep`, and\nreplace them with the result of the parser.\nThe `sep` parser must return a result of type `String` for the replacement.\n\nThis function can be used instead of\n[Data.String.replaceAll](https://pursuit.purescript.org/packages/purescript-strings/docs/Data.String#v:replaceAll)\nor\n[Data.String.Regex.replace'](https://pursuit.purescript.org/packages/purescript-strings/docs/Data.String.Regex#v:replace').\n\n#### Access the matched section of the input string\n\nTo get access to the matched string for calculating the replacement,\ncombine the pattern parser `sep`\nwith the `match` combinator.\nThis allows us to write a `sep` parser which can choose to not\nreplace the match and just leave it as it is.\n\nSo, for all `sep`:\n\n```purescript\nreplace input (fst <$> match sep) == input\n```\n\n#### Example\n\nFind and uppercase the `\"needle\"` pattern.\n\n```purescript\nreplace \"hay needle hay\" (toUpper <$> string \"needle\")\n```\n\nResult:\n\n```purescript\n\"hay NEEDLE hay\"\n```\n\n#### Example\n\nFind integers and double them.\n\n```purescript\nreplace \"1 6 21 107\" (show <$> (_*2) <$> intDecimal)\n```\n\nResult:\n\n```purescript\n\"2 12 42 214\"\n```\n"}],"tag":"SearchResult"}]