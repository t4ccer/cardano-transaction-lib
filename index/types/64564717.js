// This file was generated by purescript-docs-search
window.DocsSearchTypeIndex["64564717"] = [{"values":[{"sourceSpan":{"start":[113,1],"name":".spago/node-process/v10.0.0/src/Node/Process.purs","end":[113,36]},"score":4,"packageInfo":{"values":["node-process"],"tag":"Package"},"name":"getEnv","moduleName":"Node.Process","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Foreign","Object"],"Object"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get a copy of the current environment.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[96,1],"name":".spago/node-process/v10.0.0/src/Node/Process.purs","end":[96,34]},"score":4,"packageInfo":{"values":["node-process"],"tag":"Package"},"name":"execArgv","moduleName":"Node.Process","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Node-specific options passed to the `node` executable.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[92,1],"name":".spago/node-process/v10.0.0/src/Node/Process.purs","end":[92,30]},"score":4,"packageInfo":{"values":["node-process"],"tag":"Package"},"name":"argv","moduleName":"Node.Process","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Prim"],"String"]}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get an array containing the command line arguments.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[508,1],"name":".spago/node-child-process/v9.0.0/src/Node/ChildProcess.purs","end":[508,39]},"score":0,"packageInfo":{"values":["node-child-process"],"tag":"Package"},"name":"ignore","moduleName":"Node.ChildProcess","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Node","ChildProcess"],"StdIOBehaviour"]}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Ignore all streams.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[498,1],"name":".spago/node-child-process/v9.0.0/src/Node/ChildProcess.purs","end":[498,40]},"score":0,"packageInfo":{"values":["node-child-process"],"tag":"Package"},"name":"inherit","moduleName":"Node.ChildProcess","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Node","ChildProcess"],"StdIOBehaviour"]}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Share `stdin` with `stdin`, `stdout` with `stdout`,\nand `stderr` with `stderr`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[493,1],"name":".spago/node-child-process/v9.0.0/src/Node/ChildProcess.purs","end":[493,37]},"score":0,"packageInfo":{"values":["node-child-process"],"tag":"Package"},"name":"pipe","moduleName":"Node.ChildProcess","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Node","ChildProcess"],"StdIOBehaviour"]}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Create pipes for each of the three standard IO streams.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[139,1],"name":".spago/options/v7.0.0/src/Data/Options.purs","end":[139,35]},"score":3,"packageInfo":{"values":["options"],"tag":"Package"},"name":"Option","moduleName":"Data.Options","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Op"],"Op"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Options"],"Options"]},{"tag":"TypeVar","contents":"opt"}]}}]},"arguments":[["opt",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"An `Option` represents an opportunity to configure a specific attribute\nof a call to some API. This normally corresponds to one specific property\nof an \"options\" object in JavaScript APIs, but can in general correspond\nto zero or more actual properties.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[103,1],"name":"src/Internal/Test/E2E/Options.purs","end":[103,60]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ClusterPortsOptions","moduleName":"Ctl.Internal.Test.E2E.Options","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Test","E2E","Options"],"ClusterPortsOptions_"]},{"tag":"REmpty","contents":{}}]}}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[125,1],"name":"src/Internal/Test/E2E/Options.purs","end":[125,49]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"BrowserOptions","moduleName":"Ctl.Internal.Test.E2E.Options","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Record"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Test","E2E","Options"],"CommonOptions_"]},{"tag":"REmpty","contents":{}}]}}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"CLI options for the `browser` command.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[51,1],"name":"src/Internal/Test/E2E/Feedback/Browser.purs","end":[51,47]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"getClusterSetup","moduleName":"Ctl.Internal.Test.E2E.Feedback.Browser","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","QueryM"],"ClusterSetup"]}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Retrieves cluster setup provided by the NodeJS side of the test suite.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[43,1],"name":"src/Internal/QueryM/Pools.purs","end":[43,44]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"getPoolIds","moduleName":"Ctl.Internal.QueryM.Pools","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","QueryM"],"QueryM"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","PoolPubKeyHash"],"PoolPubKeyHash"]}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[218,1],"name":"src/Internal/Contract/Wallet.purs","end":[218,43]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"getWalletUtxos","moduleName":"Ctl.Internal.Contract.Wallet","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","UtxoMap"],"UtxoMap"]}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[103,1],"name":"src/Internal/Contract/Wallet.purs","end":[103,61]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ownPaymentPubKeyHashes","moduleName":"Ctl.Internal.Contract.Wallet","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","PaymentPubKeyHash"],"PaymentPubKeyHash"]}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Gets all wallet `PaymentPubKeyHash`es via `getWalletAddresses`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[90,1],"name":"src/Internal/Contract/Wallet.purs","end":[90,51]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ownPubKeyHashes","moduleName":"Ctl.Internal.Contract.Wallet","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Ed25519KeyHash"],"Ed25519KeyHash"]}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[87,1],"name":"src/Internal/Contract/Wallet.purs","end":[87,37]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"getWallet","moduleName":"Ctl.Internal.Contract.Wallet","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Wallet"],"Wallet"]}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[70,1],"name":"src/Internal/Contract/Wallet.purs","end":[70,47]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"getWalletAddresses","moduleName":"Ctl.Internal.Contract.Wallet","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Address"],"Address"]}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get all `Address`es of the browser wallet.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[64,1],"name":"src/Internal/Contract/Wallet.purs","end":[64,47]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"getRewardAddresses","moduleName":"Ctl.Internal.Contract.Wallet","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Address"],"Address"]}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[53,1],"name":"src/Internal/Contract/Wallet.purs","end":[53,47]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"getUnusedAddresses","moduleName":"Ctl.Internal.Contract.Wallet","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Address"],"Address"]}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[258,1],"name":"src/Internal/BalanceTx/Sync.purs","end":[258,49]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"getControlledAddresses","moduleName":"Ctl.Internal.BalanceTx.Sync","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Set"],"Set"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Address"],"Address"]}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get all addresses contolled by a wallet:\n`getUsedAddresses`, `getUnusedAddresses` and `getChangeAddress` combined.\nReward addresses are not included.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[21,1],"name":".spago/free/v7.0.0/src/Control/Monad/Trampoline.purs","end":[21,35]},"score":2,"packageInfo":{"values":["free"],"tag":"Package"},"name":"Trampoline","moduleName":"Control.Monad.Trampoline","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Free"],"Free"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]},"arguments":[]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":"The `Trampoline` monad\n\nA computation of type `Trampoline a` consists of zero or more lazy\nsuspensions before a value is returned.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[24,1],"name":".spago/checked-exceptions/v3.1.1/src/Control/Monad/Except/Checked.purs","end":[24,41]},"score":0,"packageInfo":{"values":["checked-exceptions"],"tag":"Package"},"name":"ExceptV","moduleName":"Control.Monad.Except.Checked","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Control","Monad","Except","Trans"],"ExceptT"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Variant"],"Variant"]},{"tag":"TypeVar","contents":"exc"}]}}]},"arguments":[["exc",null]]}],"tag":"TypeSynonymResult"},"hashAnchor":"t","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[129,1],"name":"src/Contract/Wallet.purs","end":[134,30]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"getWalletAddress","moduleName":"Contract.Wallet","info":{"values":[{"type":{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","TypeError"],"Warn"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim","TypeError"],"Text"]},{"tag":"TypeLevelString","contents":"This function returns only one `Adress` even in case multiple `Adress`es are available. Use `getWalletAdresses` instead"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Address"],"Address"]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Get the first `Address` of the wallet.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[160,1],"name":"src/Contract/Wallet.purs","end":[161,30]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"getWalletUtxos","moduleName":"Contract.Wallet","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","UtxoMap"],"UtxoMap"]}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Similar to `utxosAt` called on own address, except that it uses CIP-30\nwallet state and not query layer state.\nThe user should not expect these states to be in sync.\nWhen active wallet is `KeyWallet`, query layer state is used.\nThis function is expected to be more performant than `utxosAt` when there\nis a large number of assets.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[173,1],"name":"src/Contract/Wallet.purs","end":[174,28]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"getWalletBalance","moduleName":"Contract.Wallet","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","Value"],"Value"]}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[138,1],"name":"src/Contract/Wallet.purs","end":[143,40]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ownPaymentPubKeyHash","moduleName":"Contract.Wallet","info":{"values":[{"type":{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","TypeError"],"Warn"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim","TypeError"],"Text"]},{"tag":"TypeLevelString","contents":"This function returns only one `PaymentPubKeyHash` even in case multiple `PaymentPubKeysHash`es are available. Use `ownPaymentPubKeyHashes` instead"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","PaymentPubKeyHash"],"PaymentPubKeyHash"]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Gets a wallet `PaymentPubKeyHash` via `getWalletAddresses`.\n"}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[146,1],"name":"src/Contract/Wallet.purs","end":[151,38]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"ownStakePubKeyHash","moduleName":"Contract.Wallet","info":{"values":[{"type":{"tag":"ConstrainedType","contents":[{"constraintClass":[["Prim","TypeError"],"Warn"],"constraintArgs":[{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim","TypeError"],"Text"]},{"tag":"TypeLevelString","contents":"This function returns only one `StakePubKeyHash` even in case multiple `StakePubKeysHash`es are available. Use `ownStakePubKeyHashes` instead"}]}}]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","StakePubKeyHash"],"StakePubKeyHash"]}]}}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[23,1],"name":"src/Contract/Staking.purs","end":[23,46]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"getPoolIds","moduleName":"Contract.Staking","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"Contract"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Cardano","Types","PoolPubKeyHash"],"PoolPubKeyHash"]}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":null}],"tag":"SearchResult"},{"values":[{"sourceSpan":{"start":[123,1],"name":".spago/cip30/8f1b34b48825fcec5e9c67f33e255770b1e0bc45/src/Cardano/Wallet/Cip30.purs","end":[123,49]},"score":0,"packageInfo":{"values":["cip30"],"tag":"Package"},"name":"getAvailableWallets","moduleName":"Cardano.Wallet.Cip30","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect"],"Effect"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","contents":[["Cardano","Wallet","Cip30"],"WalletName"]}]}}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"Reads all wallets that are available in the browser.\n"}],"tag":"SearchResult"}]