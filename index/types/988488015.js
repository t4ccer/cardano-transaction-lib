// This file was generated by purescript-docs-search
window.DocsSearchTypeIndex["988488015"] = [{"values":[{"sourceSpan":{"start":[82,1],"name":"src/Contract/Test/Blockfrost.purs","end":[88,31]},"score":0,"packageInfo":{"values":[],"tag":"LocalPackage"},"name":"runContractTestsWithBlockfrost","moduleName":"Contract.Test.Blockfrost","info":{"values":[{"type":{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","Monad"],"ContractParams"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","QueryBackend"],"BlockfrostBackendParams"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Contract","QueryBackend"],"CtlBackendParams"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","contents":[["Contract","Test","Blockfrost"],"BlockfrostKeySetup"]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Prim"],"Function"]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Test","TestPlanM"],"TestPlanM"]},{"tag":"TypeConstructor","contents":[["Ctl","Internal","Test","ContractTest"],"ContractTest"]}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","contents":[{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Ctl","Internal","Test","TestPlanM"],"TestPlanM"]},{"tag":"ParensInType","contents":{"tag":"TypeApp","contents":[{"tag":"TypeConstructor","contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}}]},{"tag":"TypeConstructor","contents":[["Data","Unit"],"Unit"]}]}]}]}]}]}]}}],"tag":"ValueResult"},"hashAnchor":"v","comments":"A function that interprets a Plutip test plan into an `Aff`, given a\npre-funded address and a Blockfrost API endpoint.\n\nAccepts:\n\n1. Runtime parameters for `Contract`\n2. Parameters for Blockfrost backend\n3. Optional parameters for CTL backend if it should be used\n4. Key setup parameters - keys are used to provide funds to the test suite.\n   Create the keys using [this guide](https://developers.cardano.org/docs/stake-pool-course/handbook/keys-addresses/)\n   and fund them using the test ADA faucet: https://docs.cardano.org/cardano-testnet/tools/faucet\n5. A test suite to run.\n\nNote that this function does not start a Plutip cluster. Instead, it\nsubstitutes it with Blockfrost.\n\n**If you are using a paid Blockfrost plan**, be careful with what you run with\nthis function.\n\nAvoid moving the funds around too much using `withWallets`\nin the tests to save on both time and costs.\n"}],"tag":"SearchResult"}]